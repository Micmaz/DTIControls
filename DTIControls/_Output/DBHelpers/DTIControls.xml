<?xml version="1.0"?>
<doc>
  <assembly>
    <name>DTIControls</name>
  </assembly>
  <members>
    <member name="T:BaseClasses.AssemblyLoader">
      <summary>
 Utility class to load and cache assemblies. Caching is done in BaseVirtualPathProvider.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.BaseHelper">
      <summary>
 A generic data access layer. This is subclassed for different database types. MSSql and SQLLite included in the base dll. 
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.BaseHelper.SQLHelperException">
      <summary>
 An exception class used to give more complete information when database errors occure. It will proved all SQL commands plus all parameters that were provided. Use caution as this can expose SQL statements to the end user.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.SQLHelperException.sqlEx(System.Data.Common.DbCommand,System.Exception)">
      <summary>
 SQL Exception helper classes
 </summary>
      <param name="cmd">
      </param>
      <param name="innerException">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.SQLHelperException.sqlEx(System.Data.Common.DbDataAdapter,System.Data.DataTable,System.Exception)">
      <summary>
 SQL Exception helper classes
 </summary>
      <param name="adaptor">
      </param>
      <param name="dt">
      </param>
      <param name="innerException">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.SQLHelperException.sqlEx(System.String,System.Exception)">
      <summary>
 SQL Exception helper classes
 </summary>
      <param name="slqString">
      </param>
      <param name="innerException">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="F:BaseClasses.BaseHelper._enforceConstraints">
      <summary>
 When performing an update should errors be thrown in a constraint excepetion occures. 
 </summary>
      <remarks>Sets enforceconstraints=False if an error is encountered.</remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.#ctor(System.Data.Common.DbConnection@)">
      <summary>
 This is a template constructor for derived classes. It is inherited by subclasses.
 </summary>
      <param name="connection">The default connection object used for the life of the object.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.#ctor(System.String)">
      <summary>
 This is a template constructor for derived classes. It is inherited by subclasses.
 </summary>
      <param name="ConnectionString">The default connection String used for the life of the object.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.createConnection(System.String)">
      <summary>
 Creates a typed connection from a string.
 </summary>
      <param name="ConnectionString">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.createAdaptor(System.String,System.Data.Common.DbConnection)">
      <summary>
 Creates a DbDataAdapter from a command string.
 </summary>
      <param name="SQLcommand">Select command used to generate the DbDataAdapter</param>
      <param name="connection">optional dBConnection that will override the default conection.</param>
      <returns>a DbCommand typed to the base helper type.</returns>
      <remarks>The default connection uses web config connection string named 'DTIConnection' or 'ConnectionString'</remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.createCommand(System.String,System.Data.Common.DbConnection)">
      <summary>
 Creates a DbCommand from a command string.
 </summary>
      <param name="SQLcommand">Select command used to generate the DbCommand</param>
      <param name="connection">optional dBConnection that will override the default conection.</param>
      <returns>a DbCommand typed to the base helper type.</returns>
      <remarks>The default connection uses web config connection string named 'DTIConnection' or 'ConnectionString'</remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.createParameter(System.String,System.Object)">
      <summary>
 Creates a typed dbParameter from a name and value
 </summary>
      <param name="name">the parm name.</param>
      <param name="value">the parm value.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.createParameter(System.Data.Common.DbParameter@)">
      <summary>
 Creates a typed parameter from a genric DbParameter
 </summary>
      <param name="parameter">the DbParameter</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.createCommandBuilder(System.Data.Common.DbDataAdapter@)">
      <summary>
 Creates a typed DbCommandBuilder
 </summary>
      <param name="adaptor">The typed DbDataAdapter </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.checkDBObjectExists(System.String)">
      <summary>
 Checks if a datatable exists in a database.
 </summary>
      <param name="tablename">The name of the table that may eexist in the database.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.createTable(System.Data.DataTable)">
      <summary>
 Creates a table in the database based on the schema of the datatable passed in.
 </summary>
      <param name="dt">The datatable that is usedto createthe table in the database. Only schema is used, data is ignored.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.getCreateTableString(System.Data.DataTable)">
      <summary>
 Builds a create script for a table in the database based on the schema of the datatable passed in.
 </summary>
      <param name="dt">The datatable that is usedto build the create String. Only schema is used, data is ignored.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.setDefaultConnectionString(System.String)">
      <summary>
 Calls createConnection and using the supplied string and sets a new default connection. Also clears cached adaptors.
 </summary>
      <param name="connectionString">The ConnectionString as a string.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.getHelper">
      <summary>
 Shared function to return the current stored baseHelper used in a web application.
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.createConnectionFromConfig(System.String)">
      <summary>
 creates a typed connection from a config vaue.
 </summary>
      <param name="ConfigValueName">The name of the config value</param>
      <returns>a typed DbConnection</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.parseID(System.String)">
      <summary>
 Parse an integer from a string value. 
 </summary>
      <param name="input">
      </param>
      <returns>Return the int value, or -1 if it fails.</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.getSQLStatement(System.String,Microsoft.VisualBasic.Collection)">
      <summary>
 Generates complete sql statement from a base statement and a collection additional strings. Statements are and-ed together.
 </summary>
      <param name="selectStmt">Sql Command Text</param>
      <param name="AdditionalStmts">A collection of strings</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.FillDataSet(System.String,System.Data.DataSet,System.String,System.Object[])">
      <summary>
 Fills a specific table in a dataset. Pass parms to command like the following:
 FillDataSet("Select * from products where typeName =@type",ds,"products","Toys")
 </summary>
      <param name="SQLcommand">Sql Command Text</param>
      <param name="ds">
      </param>
      <param name="tableName">
      </param>
      <param name="parms">Parameter values added to the SQLCommand.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.FillDataSetMultiSelect(System.String,System.Data.DataSet@,System.String[],System.Object[])">
      <summary>
 Fill multiple tables in a dataset. Example as following:
 FillDataSetMultiSelect("Select * from products where typeName =@type; Select * from catagories where name = @catname",ds, new String (){"products","catagories"},"Toys","Childrens products")
 </summary>
      <param name="SQLcommand">Sql Command Text</param>
      <param name="ds">
      </param>
      <param name="tblNames">
      </param>
      <param name="parms">Parameter values added to the SQLCommand.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.PrepareCommand(System.Data.Common.DbCommand,System.Data.Common.DbConnection,System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.Data.Common.DbParameter[],System.Boolean@)">
      <summary>
 Opens a DbCommand and waits for the connection execute. 
 </summary>
      <param name="command">typed dBCommand object</param>
      <param name="connection">optional dBConnection that will override the default conection.</param>
      <param name="transaction">
      </param>
      <param name="commandType">
      </param>
      <param name="commandText">
      </param>
      <param name="commandParameters">
      </param>
      <param name="mustCloseConnection">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.AttachParameters(System.Data.Common.DbCommand,System.Data.Common.DbParameter[])">
      <summary>
 Adds paramters to a command.
 </summary>
      <param name="command">
      </param>
      <param name="commandParameters">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.ExecuteNonQuery(System.String,System.Data.Common.DbConnection)">
      <summary>
 Executes a Sql command string that does not return tabular data. 
 </summary>
      <param name="SQLcommand">Sql command string</param>
      <param name="connection">optional dBConnection that will override the default conection.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.ExecuteNonQuery(System.String,System.Object[])">
      <summary>
 Executes a Sql command string that does not return tabular data. 
 </summary>
      <param name="SQLcommand">Sql command string</param>
      <param name="parms">Parameter values added to the SQLCommand.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.FillDataTable(System.String,System.Data.DataTable@,System.Object[])">
      <summary>
 Fills a dataTable from a select string. Pass parms to command like the following:
 FillDataTable("Select * from products where typeName=@type and department=@dept",dt,"Toys","children")
 </summary>
      <param name="SQLcommand">Sql command string</param>
      <param name="table">
      </param>
      <param name="parms">Parameter values added to the SQLCommand.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.FillDataTable(System.String,System.Data.DataTable@,System.Data.Common.DbConnection@)">
      <summary>
 Fills a dataTable from a select string. Pass parms to command like the following:
 FillDataTable("Select * from products where typeName=@type and department=@dept",dt,"Toys","children")
 </summary>
      <param name="SQLcommand">Sql command string</param>
      <param name="table">
      </param>
      <param name="connection">optional dBConnection that will override the default conection.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.FillDataTable(System.String,System.Object[])">
      <summary>
 Fills a dataTable from a select string. Pass parms to command like the following:
 FillDataTable("Select * from products where typeName=@type and department=@dept",dt,"Toys","children")
 </summary>
      <param name="SQLcommand">Sql command string</param>
      <param name="parms">Parameter values added to the SQLCommand.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.ColumnFilterFillDataTable(System.String,System.Data.DataTable@,Microsoft.VisualBasic.Collection,Microsoft.VisualBasic.Collection,System.String,System.Data.Common.DbConnection)">
      <summary>
 Fill a datatable with a value for each listed column. statements are anded together.
 </summary>
      <param name="SQLcommand">Sql command string</param>
      <param name="table">
      </param>
      <param name="colmnNames">
      </param>
      <param name="Values">
      </param>
      <param name="additionalString">
      </param>
      <param name="connection">optional dBConnection that will override the default conection.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.ColumnFilterFillDataTable(System.String,System.Data.DataTable@,Microsoft.VisualBasic.Collection,System.Data.Common.DbConnection)">
      <summary>
 Fill a datatable with a value for each listed column. statements are anded together.
 </summary>
      <param name="SQLcommand">Sql command string</param>
      <param name="table">
      </param>
      <param name="AdditionalStmts">
      </param>
      <param name="connection">optional dBConnection that will override the default conection.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.ColumnFilterFillDataTable(System.String,System.Data.DataTable@,System.String[],System.Object[],System.String,System.Data.Common.DbConnection)">
      <summary>
 Fill a datatable with a value for each listed column. statements are anded together.
 </summary>
      <param name="SQLcommand">Sql command string</param>
      <param name="table">
      </param>
      <param name="colmnNames">
      </param>
      <param name="Values">
      </param>
      <param name="additionalString">
      </param>
      <param name="connection">optional dBConnection that will override the default conection.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.ExecuteSproc(System.String,System.Data.DataSet@,System.Data.Common.DbParameter[]@,System.Data.Common.DbConnection)">
      <summary>
 Execute a stored procedure.
 </summary>
      <param name="SQLcommand">Sql command string</param>
      <param name="ds">
      </param>
      <param name="pararray">
      </param>
      <param name="connection">optional dBConnection that will override the default conection.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.FetchSingleValue(System.String,System.Data.Common.DbConnection)">
      <summary>
 Fetches a single value from a datastore.
 </summary>
      <param name="SQLcommand">Sql command string</param>
      <param name="connection">optional dBConnection that will override the default conection.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.FetchSingleValue(System.String,System.Object[])">
      <summary>
 Fetches a single value from a datastore.
 </summary>
      <param name="SQLcommand">Sql command string</param>
      <param name="parms">optional parameters to pass to the select statement. Last one may be a connection.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.SafeFetchSingleValue(System.String,System.Object[],System.Data.Common.DbConnection)">
      <summary>
 Fetches a single value from a database.
 </summary>
      <param name="SQLcommand">Sql Command Text</param>
      <param name="parmValueArray">
      </param>
      <param name="connection">optional dBConnection that will override the default conection.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.SafeExecuteNonQuery(System.String,System.Object[],System.Data.Common.DbConnection)">
      <summary>
 Executes a Sql command string that does not return tabular data. Takes a parm list as arguments.
 SafeExecuteNonQuery("delete from useres where id = @id",7)
 </summary>
      <param name="SQLcommand">Sql Command Text</param>
      <param name="parmValueArray">Array or parameters</param>
      <param name="connection">dBConnection that will override the default conection.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.SafeFillErrorCatcher(System.Data.Common.DbDataAdapter@,System.Data.DataSet@)">
      <summary>
 Protected error catcher that will send the select command up to error stack for easier debugging.
 </summary>
      <param name="da">
      </param>
      <param name="ds">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.prepareAdaptor(System.String,System.Data.Common.DbConnection@)">
      <summary>
 An overidable method for subclasses to add formatting and utility code to derived classes
 </summary>
      <param name="SQLcommand">
      </param>
      <param name="connection">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.processSelectCommand(System.String)">
      <summary>
 An overidable method for subclasses to add formatting and utility code to derived classes
 </summary>
      <param name="SQLcommand">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.prepareSafeFillAdaptor(System.String,System.Object[],System.Data.Common.DbConnection)">
      <summary>
 Creates an adaptor froma sql string
 </summary>
      <param name="SQLcommand">
      </param>
      <param name="parmValueArray">
      </param>
      <param name="connection">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.SafeFillDataSetMultiSelect(System.String,System.Data.DataSet@,System.String[],System.Object[]@,System.Data.Common.DbConnection)">
      <summary>
 Fill multiple tables in a dataset. Example as following:
 FillDataSetMultiSelect("Select * from products where typeName =@type; Select * from catagories where name = @catname",ds, new String (){"products","catagories"},"Toys","Childrens products")
 </summary>
      <param name="SQLcommand">
      </param>
      <param name="ds">
      </param>
      <param name="tblNames">
      </param>
      <param name="parmValueArray">
      </param>
      <param name="connection">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.SafeFillTable(System.String,System.Data.DataTable@,System.Object[]@,System.Data.Common.DbConnection)">
      <summary>
      </summary>
      <param name="SQLcommand">
      </param>
      <param name="dt">
      </param>
      <param name="parmValueArray">
      </param>
      <param name="connection">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.SafeFillDataSet(System.String,System.Data.DataSet@,System.String,System.Object[]@,System.Data.Common.DbConnection)">
      <summary>
 Fill multiple tables in a dataset. Example as following:
 SafeFillDataSetMultiSelect("Select * from products where typeName =@type; Select * from catagories where name = @catname",ds, new String (){"products","catagories"},new Object(){"Toys","Childrens products"})
 </summary>
      <param name="SQLcommand">Sql Command Text</param>
      <param name="ds">
      </param>
      <param name="tablename">
      </param>
      <param name="parmValueArray">
      </param>
      <param name="connection">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.checkAndCreateTable(System.Data.DataTable)">
      <summary>
 Checks for and creates a datatable if one does not exist in the database.
 </summary>
      <param name="dt">Datatable schema to create in the database.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.checkAndCreateAllTables(System.Data.DataSet)">
      <summary>
 Cheacks and createsevery dataTable in a dataSet.
 </summary>
      <param name="ds">The dataSet to add to the current database.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.ProcessDataAdaptor(System.Data.Common.DbDataAdapter@,System.String,System.Data.DataTable)">
      <summary>
 Called on creation of a new DbAdaptor
 </summary>
      <param name="da">
      </param>
      <param name="TableName">
      </param>
      <param name="dt">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.cloneSQLAdaptor(System.Data.Common.DbDataAdapter,System.Data.Common.DbConnection)">
      <summary>
 Utility function to create a deep copy of a DbDataAdapter object.
 </summary>
      <param name="da">
      </param>
      <param name="connection">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.cloneDbCommand(System.Data.Common.DbCommand)">
      <summary>
 Utility function to create a deep copy of a DbCommand object.
 </summary>
      <param name="dc">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.UpdateCreateDB(System.Data.DataTable@,System.String,System.Boolean,System.Data.Common.DbConnection@)">
      <summary>
 Update a given datatable, and create it if it dosen't exist in the database.
 </summary>
      <param name="dt">
      </param>
      <param name="TableName">
      </param>
      <param name="ContinueUpdateOnError">
      </param>
      <param name="connection">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.Update(System.Data.DataTable@)">
      <summary>
 Performs all inserts,updates and deletes on a database froma provided datatable. Uses the table name from the dataTable and pushes the changes to the table in the database with the same name. 
 </summary>
      <param name="dt">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.Update(System.Object)">
      <summary>
 Performs all inserts,updates and deletes on a database froma provided datatable. Uses the table name from the dataTable and pushes the changes to the table in the database with the same name. 
 </summary>
      <param name="dt">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.UpdateAndReturn(System.Data.DataTable)">
      <summary>
 The same as Update, only the table does not need to be passed byref and is returned by the call. Helps passing in C#
 </summary>
      <param name="dt">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.Update(System.Data.DataTable@,System.String,System.Boolean,System.Data.Common.DbConnection@)">
      <summary>
 Performs all inserts,updates and deletes on a database froma provided datatable. Uses the table name from the dataTable and pushes the changes to the table in the database with the same name. 
 </summary>
      <param name="dt">
      </param>
      <param name="TableName">
      </param>
      <param name="ContinueUpdateOnError">
      </param>
      <param name="connection">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseHelper.GetSortedPage(System.Data.DataTable@,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.Object[]@,System.Data.Common.DbConnection)">
      <summary>
 Returns a paged result for a given table with a seperate query. Paramters are NOT SQL parameters. It is not safe to open them up to a variable set by the request.
 </summary>
      <param name="dt">
      </param>
      <param name="tablename">
      </param>
      <param name="itemsPerPage">
      </param>
      <param name="pageNum">
      </param>
      <param name="primaryKey">
      </param>
      <param name="sort">
      </param>
      <param name="query">
      </param>
      <param name="parmValueArray">
      </param>
      <param name="connection">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:BaseClasses.BaseHelper.defaultConnectionAppWide">
      <summary>
 Sets the default connection used by any dataHelper object that is not explicitly set. 
 This overrides any setting in the .config file.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseHelper.defaultConnection">
      <summary>
 The Connection used for all database comunication for the life of the object.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseHelper.createAdaptorsWithoutPrimaryKeys">
      <summary>
 Should update and delete methods be added to adaptors if there is no primary key information.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseHelper.connectionFromStack(System.Data.Common.DbConnection)">
      <summary>
 If connection are qued this will return the next available one. 
 </summary>
      <param name="connection">
      </param>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseHelper.Adaptor(System.String,System.Data.Common.DbConnection,System.Data.DataTable)">
      <summary>
 Property that returns a data adaptor for the passed in tale name. Caches the adaptor after the first call for the life of this object.
 </summary>
      <param name="TableName">
      </param>
      <param name="connection">
      </param>
      <param name="dt">
      </param>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.BaseSecurityPage">
      <summary>
 Base class for System.Web.UI.Page class, adding data accessors, error handeling and basic security. 
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.BasePageInit_Init(System.Object,System.EventArgs)">
      <summary>
 Init event handeler. Sets the default connection.
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.Page_PreLoad(System.Object,System.EventArgs)">
      <summary>
 Preload event handeler. Calls the parallel datahelper so data will be available at load.
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.baseSecuityPage_Load(System.Object,System.EventArgs)">
      <summary>
 Load event handeler. Checks security and begins page tracking.
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.Page_PreRender(System.Object,System.EventArgs)">
      <summary>
 Prerenter event handeler. evecutes the parallel data helper so prerender and render should have all data availalbe.
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.FillDataSet(System.String,System.String,System.Data.DataSet)">
      <summary>
 Convience method to <see cref="M:BaseClasses.BaseHelper.FillDataSet(System.String,System.Data.DataSet,System.String,System.Object[])">BaseHelper.FillDataSet</see></summary>
      <param name="command">
      </param>
      <param name="tableName">
      </param>
      <param name="ds">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.FillDataTable(System.String,System.Data.DataTable)">
      <summary>
 Convience method to <see cref="M:BaseClasses.BaseHelper.FillDataTable(System.String,System.Data.DataTable@,System.Data.Common.DbConnection@)">BaseHelper.FillDataTable</see></summary>
      <param name="command">
      </param>
      <param name="table">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.getValue(System.Object)">
      <summary>
 Returns the object or nothing if it is dbnull.value
 </summary>
      <param name="o">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.getString(System.Object)">
      <summary>
 Returns the object or "" if it is null or dbnull.value 
 </summary>
      <param name="o">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.getUsername">
      <summary>
 Gets the username from Page.User.Identity.Name
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.checkSecurity">
      <summary>
 Returns true if UserName has been set to a non-empty string. 
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.checkAdmin">
      <summary>
 Returns true if user is an Admin. 
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.Page_Error(System.Object,System.EventArgs)">
      <summary>
 Handles an error on the current page. This is overidable.
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.logEvent(System.String,System.String)">
      <summary>
 Adds an entry into the event log. By default the event group Web Event is added if permissions allow.
 </summary>
      <param name="anevent">
      </param>
      <param name="sourcename">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.isNull(System.Data.DataRow,System.String)">
      <summary>
 Returns true if a column is null or dbnull.value
 </summary>
      <param name="row">
      </param>
      <param name="colname">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.JavaScriptEncode(System.String)">
      <summary>
  Performs JavaScript encoding on given string
 </summary>
      <param name="Str">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.JavaScriptUnencode(System.String)">
      <summary>
 Unencodes JavaScript characters from given string
 </summary>
      <param name="Str">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.ValidCookieName(System.String)">
      <summary>
 Ensures a string is compliant with cookie name requirements
 </summary>
      <param name="Str">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.getQueryString(System.String[])">
      <summary>
 Returns the query string and excludes some of the parameters if needed.
 </summary>
      <param name="excludeKeys">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.GetUrlPath">
      <summary>
 Returns the full path of the current url. ex: /test/some/location.aspx
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.ValidCookieValue(System.String)">
      <summary>
 Ensures a string is compliant with cookie value requirements
 </summary>
      <param name="Str">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.makeTableFromCSV(System.Web.HttpPostedFile)">
      <summary>
 Creates a datatable from a csv file posted to a web form.
 </summary>
      <param name="myFile">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.writeCSV(System.Data.DataTable,System.String[],System.Boolean)">
      <summary>
 Converts a datatable to csv format and writes csv data out to the responce stream.
 </summary>
      <param name="dt">
      </param>
      <param name="colNames">
      </param>
      <param name="asAttachment">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.writeexcel(System.Data.DataTable,System.String[],System.Boolean,System.String)">
      <summary>
 Converts a datatable to excel format and writes csv data out to the responce stream.
 </summary>
      <param name="dt">
      </param>
      <param name="colNames">
      </param>
      <param name="asAttachment">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.excelExport(System.Data.DataTable,System.String[],System.Boolean,System.String)">
      <summary>
 Converts a datatable to excel format and writes csv data out to the responce stream.
 </summary>
      <param name="dt">
      </param>
      <param name="colNames">
      </param>
      <param name="asAttachment">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.EncryptText(System.String,System.String)">
      <summary>
 Encrypts and urlEncodes text string using a specific key.
 </summary>
      <param name="strText">
      </param>
      <param name="key">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityPage.DecryptText(System.String,System.String)">
      <summary>
 Decrypts and urlDecodes text string using a specific key.
 </summary>
      <param name="strText">
      </param>
      <param name="key">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.errorHandler">
      <summary>
 Returns the current error handler for this application.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.Data">
      <summary>
 Returns a subclass of Database. The loacl assembly is searched, otherwise a cached version of Database is returned. Database is cached in the session so it will be user-isolated.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.sqlHelper">
      <summary>
 Convienece method, returns the BaseHelper in the dataObject. This is the default BaseHelper for a web application.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.parallelDataHelper">
      <summary>
 Convienece method, returns the ParallelDataHelper in the dataObject. This is the default ParallelDataHelper for a web application.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.defaultConnection">
      <summary>
 returns the default connection used in the web application. This is set in the web config as a connection string called either DTIConnection or ConnectionString.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.SecurePage">
      <summary>
 If this is set to true then the page will not render past load unless the Username value has been set.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.AdminPage">
      <summary>
 If this is set to true then the page will not render past load unless the checkAdmin function returns true.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.UserName">
      <summary>
 The current users name. Must be set programatically.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.isAdmin">
      <summary>
 If the currentuser is an admin. Must be set programatically.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.securityFailedPage">
      <summary>
 This is the url of the page the request is forwarded to if the security check fails.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.AdminFailedPage">
      <summary>
 This is the url of the page the request is forwarded to if the admin check fails.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.erroremail">
      <summary>
 The email address error reports are sent to. 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.UrlReferrer">
      <summary>
 Referring url within this domain.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>Will return Nothing on first page.  Must be set in code for all pages to track</remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityPage.EnablePageTracking">
      <summary>
 Enable tracking on this page. Default is false.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="E:BaseClasses.BaseSecurityPage.pageTracked">
      <summary>
 Fires when page tracking is enabled and a new page is visited
 </summary>
      <param name="trackerRow">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="E:BaseClasses.BaseSecurityPage.PostBack">
      <summary>
 Fires when the load event occures with a postback
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="E:BaseClasses.BaseSecurityPage.LoadNoPostBack">
      <summary>
 fires after the load event when there is no postback data
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="E:BaseClasses.BaseSecurityPage.DataReady">
      <summary>
 Fires when data from a parallel data helper call has data available to it.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.BaseSecurityUserControl">
      <summary>
 Base class for System.Web.UI.UserControl class, adding data accessors, error handeling and basic security. 
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.BasePageInit_Init(System.Object,System.EventArgs)">
      <summary>
 Init event handeler. Sets the default connection.
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.FillDataSet(System.String,System.String,System.Data.DataSet)">
      <summary>
 Convience method to <see cref="M:BaseClasses.BaseHelper.FillDataSet(System.String,System.Data.DataSet,System.String,System.Object[])">BaseHelper.FillDataSet</see></summary>
      <param name="command">
      </param>
      <param name="tableName">
      </param>
      <param name="ds">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.FillDataTable(System.String,System.Data.DataTable)">
      <summary>
 Convience method to <see cref="M:BaseClasses.BaseHelper.FillDataTable(System.String,System.Data.DataTable@,System.Data.Common.DbConnection@)">BaseHelper.FillDataTable</see></summary>
      <param name="command">
      </param>
      <param name="table">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.getValue(System.Object)">
      <summary>
 Returns the object or nothing if it is dbnull.value
 </summary>
      <param name="o">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.getString(System.Object)">
      <summary>
 Returns the object or "" if it is null or dbnull.value 
 </summary>
      <param name="o">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.isNull(System.Data.DataRow,System.String)">
      <summary>
 Returns true if a column is null or dbnull.value
 </summary>
      <param name="row">
      </param>
      <param name="colname">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.JavaScriptEncode(System.String)">
      <summary>
  Performs JavaScript encoding on given string
 </summary>
      <param name="Str">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.JavaScriptUnencode(System.String)">
      <summary>
 Unencodes JavaScript characters from given string
 </summary>
      <param name="Str">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.ValidCookieName(System.String)">
      <summary>
 Ensures a string is compliant with cookie name requirements
 </summary>
      <param name="Str">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.getQueryString(System.String[])">
      <summary>
 Returns the query string and excludes some of the parameters if needed.
 </summary>
      <param name="excludeKeys">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.GetUrlPath">
      <summary>
 Returns the full path of the current url. ex: /test/some/location.aspx
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.ValidCookieValue(System.String)">
      <summary>
 Ensures a string is compliant with cookie value requirements
 </summary>
      <param name="Str">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.makeTableFromCSV(System.Web.HttpPostedFile)">
      <summary>
 Creates a datatable from a csv file posted to a web form.
 </summary>
      <param name="myFile">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.writeCSV(System.Data.DataTable,System.String[],System.Boolean)">
      <summary>
 Converts a datatable to csv format and writes csv data out to the responce stream.
 </summary>
      <param name="dt">
      </param>
      <param name="colNames">
      </param>
      <param name="asAttachment">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseSecurityUserControl.writeexcel(System.Data.DataTable,System.String[],System.Boolean)">
      <summary>
 Converts a datatable to excel format and writes csv data out to the responce stream.
 </summary>
      <param name="dt">
      </param>
      <param name="colNames">
      </param>
      <param name="asAttachment">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityUserControl.errorHandler">
      <summary>
 Returns the current error handler for this application.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityUserControl.Data">
      <summary>
 Returns a subclass of Database. The loacl assembly is searched, otherwise a cached version of Database is returned. Database is cached in the session so it will be user-isolated.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityUserControl.sqlHelper">
      <summary>
 Convienece method, returns the BaseHelper in the dataObject. This is the default BaseHelper for a web application.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityUserControl.parallelDataHelper">
      <summary>
 Convienece method, returns the ParallelDataHelper in the dataObject. This is the default ParallelDataHelper for a web application.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseSecurityUserControl.defaultConnection">
      <summary>
 returns the default connection used in the web application. This is set in the web config as a connection string called either DTIConnection or ConnectionString.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="E:BaseClasses.BaseSecurityUserControl.PostBack">
      <summary>
 Fires when the load event occures with a postback
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="E:BaseClasses.BaseSecurityUserControl.LoadNoPostBack">
      <summary>
 fires after the load event when there is no postback data
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="E:BaseClasses.BaseSecurityUserControl.DataReady">
      <summary>
 Fires when data from a parallel data helper call has data available to it.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.BaseWebService">
      <summary>
 Base class for System.Web.Services.WebService class, adding data accessors and error handeling.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseWebService.FillDataSet(System.String,System.String,System.Data.DataSet)">
      <summary>
 Convience method to <see cref="M:BaseClasses.BaseHelper.FillDataSet(System.String,System.Data.DataSet,System.String,System.Object[])">BaseHelper.FillDataSet</see></summary>
      <param name="command">
      </param>
      <param name="tableName">
      </param>
      <param name="ds">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseWebService.FillDataTable(System.String,System.Data.DataTable)">
      <summary>
 Convience method to <see cref="M:BaseClasses.BaseHelper.FillDataTable(System.String,System.Data.DataTable@,System.Data.Common.DbConnection@)">BaseHelper.FillDataTable</see></summary>
      <param name="command">
      </param>
      <param name="table">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseWebService.getValue(System.Object)">
      <summary>
 Returns the object or nothing if it is dbnull.value
 </summary>
      <param name="o">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseWebService.getString(System.Object)">
      <summary>
 Returns the object or "" if it is null or dbnull.value 
 </summary>
      <param name="o">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseWebService.Data">
      <summary>
 Returns a subclass of Database. The loacl assembly is searched, otherwise a cached version of Database is returned. Database is cached in the session so it will be user-isolated.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseWebService.sqlHelper">
      <summary>
 Convienece method, returns the BaseHelper in the dataObject. This is the default BaseHelper for a web application.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseWebService.defaultConnection">
      <summary>
 returns the default connection used in the web application. This is set in the web config as a connection string called either DTIConnection or ConnectionString.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseWebService.errorHandler">
      <summary>
 Returns the current error handler for this application.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.DataBase">
      <summary>
 Data accessor object. This class is subclassed and used to store data access and application-wide functions. 
 It is cached in the session and exists on a per-session bassis.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.DataBase.createSession(System.Boolean)">
      <summary>
 A helper method to create a dummy session for winforms applications and design-time use.
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.DataBase.createHelper(System.String,System.Boolean)">
      <summary>
 create a helper from the type name. Like "sqlhelper", "SqliteHelper" or mysqlHelper. the Dll for that class must be accesable by this assembly (ie in the same folder or the GAC). 
 </summary>
      <param name="ProviderName">
      </param>
      <param name="isretry">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:BaseClasses.DataBase.session">
      <summary>
 The http session.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.DataBase.request">
      <summary>
 The http request.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.DataBase.response">
      <summary>
 The http request.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.DataBase.SharedSession">
      <summary>
 The http session, either created or cached in a shared space.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.DataBase.httpSession">
      <summary>
 The http session.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.DataBase.username">
      <summary>
 The current user 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="E:BaseClasses.DataBase.defaultConnectionChanged">
      <summary>
 Raised when the default connection is changed.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.BaseVirtualPathProvider">
      <summary>
 Allows embedded resources to be loaded as direct web calls. Format is http://localhost/res/[AssemblyName]/[Embedded_Resource]
 a web.config change is needed for files not normally handeled by .NET. By default *.aspx  and *.ascx files are handeled automatically. 
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:BaseClasses.BaseVirtualPathProvider.rebuildWait">
      <summary>
 The shortest time in seconds between two assembly fetches. Prevents too-frequent resource retrieval.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:BaseClasses.BaseVirtualPathProvider.lastrebuild">
      <summary>
 The date the assemblies were last fetched from disk to memory.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:BaseClasses.BaseVirtualPathProvider.resources">
      <summary>
 a shared hash of the embedded resources and their common name.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:BaseClasses.BaseVirtualPathProvider._assemblyClassHash">
      <summary>
 a hashtable linking to the resources in the assemblies list. Links a cached assembly with it's name as a string.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:BaseClasses.BaseVirtualPathProvider.initialized">
      <summary>
 Returns weather the baseVirtualPathProvider has been initialized or not. 
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseVirtualPathProvider.registerVirtualPathProvider">
      <summary>
 Registers the virtual path provider in the application. Ideally this call is added to the global.asax file on application start.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseVirtualPathProvider.buildLocalResources(System.String)">
      <summary>
 Spiders available dlls and caches all embedded resources for fast retrieval by a webserver. 
 </summary>
      <param name="assemblyname">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseVirtualPathProvider.cacheAssembly(System.Reflection.Assembly)">
      <summary>
 Adds assembly to the cache.
 </summary>
      <param name="asm">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseVirtualPathProvider.getFilename(System.String)">
      <summary>
 Formats the filename of a requested file.
 </summary>
      <param name="_filename">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:BaseClasses.BaseVirtualPathProvider.ClearResources">
      <summary>
 Clears the current cache of all assemblies. Assemblies will be recached on next access.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseVirtualPathProvider.getResourceStream(System.String)">
      <summary>
 Gets the file stream of an embedded resource.
 </summary>
      <param name="virtualPath">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseVirtualPathProvider.getResourcesName(System.String,System.Boolean)">
      <summary>
      </summary>
      <param name="virtualPath">
      </param>
      <param name="retryOnFail">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseVirtualPathProvider.rebuildresources">
      <summary>
 Clears the current resource and assembly caches and refetches all assemblies from disk.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseVirtualPathProvider.FileExists(System.String)">
      <summary>
 Overridden function to indicate if a file has been found by a web request.
 </summary>
      <param name="virtualPath">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseVirtualPathProvider.GetFile(System.String)">
      <summary>
 Overridden function to return the contents of a web request.
 </summary>
      <param name="virtualPath">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.BaseVirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)">
      <summary>
 Returnss the cachability of a given resource.
 </summary>
      <param name="virtualPath">
      </param>
      <param name="virtualPathDependencies">
      </param>
      <param name="utcStart">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.BaseVirtualPathProvider.assemblies">
      <summary>
 Cached assemblies in the BaseVirtualPathProvider. Is kept in memory for the lifetime of the application.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.dsBaseClasses.DTIPageTrackerDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:BaseClasses.dsBaseClasses.DTIPageTrackerRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:BaseClasses.dsBaseClasses.DTIPageTrackerRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:BaseClasses.EncryptionHelper">
      <summary>
 A helper class to simplify string encryption calls
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.EncryptionHelper.Encrypt(System.String,System.String)">
      <summary>
 The function used to encrypt the text from a string key.
 </summary>
      <param name="strText">
      </param>
      <param name="strEncrKey">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.EncryptionHelper.Decrypt(System.String,System.String)">
      <summary>
 The function used to decrypt the text from a string key.
 </summary>
      <param name="strText">
      </param>
      <param name="sDecrKey">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.ErrorHandlerBase">
      <summary>
 Generic error handler class. Can be overridden to handel errors from all classes derived from a baseclass type.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.StackFrameToString(System.Diagnostics.StackFrame)">
      <summary>
 turns a single stack frame object into an informative string
 </summary>
      <param name="sf">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.EnhancedStackTrace(System.Diagnostics.StackTrace,System.String)">
      <summary>
 enhanced stack trace generator
 </summary>
      <param name="st">
      </param>
      <param name="strSkipClassName">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.EnhancedStackTrace(System.Exception)">
      <summary>
 enhanced stack trace generator, using existing exception as start point
 </summary>
      <param name="ex">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.EnhancedStackTrace">
      <summary>
 enhanced stack trace generator, using current execution as start point
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.AllAssemblyDetailsToString">
      <summary>
 returns brief summary info for all assemblies in the current AppDomain
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.AssemblyDetailsToString(System.Reflection.Assembly)">
      <summary>
 returns more detailed information for a single assembly
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.AssemblyInfoToString(System.Exception)">
      <summary>
 retrieve relevant assembly details for this exception, if possible
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.CurrentWindowsIdentity">
      <summary>
 exception-safe WindowsIdentity.GetCurrent retrieval; returns "domain\username"
 </summary>
      <remarks>
 per MS, this can sometimes randomly fail with "Access Denied" on NT4
 </remarks>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.CurrentEnvironmentIdentity">
      <summary>
 exception-safe System.Environment "domain\username" retrieval
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.ProcessIdentity">
      <summary>
 retrieve Process identity with fallback on error to safer method
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.SysInfoToString(System.Boolean)">
      <summary>
 gather some system information that is helpful in diagnosing exceptions
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.ExceptionToString(System.Exception)">
      <summary>
 translate an exception object to a formatted string, with additional system info
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.ExceptionToStringPrivate(System.Exception,System.Boolean)">
      <summary>
 private version, called recursively for nested exceptions (inner, outer, etc)
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.AssemblyLastWriteTime(System.Reflection.Assembly)">
      <summary>
 exception-safe file attrib retrieval; we don't care if this fails
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.AssemblyBuildDate(System.Reflection.Assembly,System.Boolean)">
      <summary>
 returns build datetime of assembly, using calculated build time if possible, or filesystem time if not
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.AssemblyAttribs(System.Reflection.Assembly)">
      <summary>
 returns string name / string value pair of all attribs for the specified assembly
 </summary>
      <remarks>
 note that Assembly* values are pulled from AssemblyInfo file in project folder

 Trademark       = AssemblyTrademark string
 Debuggable      = True
 GUID            = 7FDF68D5-8C6F-44C9-B391-117B5AFB5467
 CLSCompliant    = True
 Product         = AssemblyProduct string
 Copyright       = AssemblyCopyright string
 Company         = AssemblyCompany string
 Description     = AssemblyDescription string
 Title           = AssemblyTitle string
 </remarks>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.GetAssemblyFromName(System.String)">
      <summary>
 matches assembly by Assembly.GetName.Name; returns nothing if no match
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.GetASPSettings">
      <summary>
 returns formatted string of all ASP.NET collections (QueryString, Form, Cookies, ServerVariables)
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.HttpVarsToString(System.Web.HttpCookieCollection)">
      <summary>
 returns formatted string of all ASP.NET Cookies
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.HttpVarsToString(System.Web.HttpApplicationState)">
      <summary>
 returns formatted summary string of all ASP.NET app vars
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.HttpVarsToString(System.Web.Caching.Cache)">
      <summary>
 returns formatted summary string of all ASP.NET Cache vars
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.HttpVarsToString(System.Web.SessionState.HttpSessionState)">
      <summary>
 returns formatted summary string of all ASP.NET Session vars
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.HttpVarsToString(System.Collections.Specialized.NameValueCollection,System.String,System.Boolean,System.String)">
      <summary>
 returns formatted string of an arbitrary ASP.NET NameValueCollection
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.AppendLine(System.Text.StringBuilder,System.String,System.Object)">
      <summary>
 attempts to coerce the value object using the .ToString method if possible, 
 then appends a formatted key/value string pair to a StringBuilder. 
 will display the type name if the object cannot be coerced.
 </summary>
    </member>
    <member name="M:BaseClasses.ErrorHandlerBase.AppendLine(System.Text.StringBuilder,System.String,System.String)">
      <summary>
 appends a formatted key/value string pair to a StringBuilder
 </summary>
    </member>
    <member name="T:BaseClasses.Hashing.HashTypes">
      <summary>
 Hashing algorithms supported by .Net
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Hashing.GetHash(System.String,BaseClasses.Hashing.HashTypes)">
      <summary>
 Create hash based on the supplied hashing algorithm
 </summary>
      <param name="input">String to hash</param>
      <param name="hashType">Hashing algorithim to hash input</param>
      <returns>Hashed string based on supplied hashing algorithm</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Hashing.CheckHash(System.String,System.String,BaseClasses.Hashing.HashTypes)">
      <summary>
 Checks if string equals hash based on the supplied hashing algorithm
 using the SlowEquals function.
 </summary>
      <param name="original">
      </param>
      <param name="hashString">
      </param>
      <param name="hashType">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Hashing.GenerateSalt(System.Int32)">
      <summary>
 Creates random string for salting passwords.
 </summary>
      <param name="Size">Size of string in bytes</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Hashing.SecureHash(System.String,System.String@,System.Int32,System.Int32)">
      <summary>
 Hashes string using Password Based Key Derivation Function 2 (PBKDF2), generating a new salt.
 Use CheckPBKDF2Hash to validate.
 </summary>
      <param name="value">String to hash</param>
      <param name="salt">String to contain the unique salt to regenerate hash</param>
      <param name="Iterations">Number of Iterations to produce derived key</param>
      <param name="SaltSize">Number of bytes in Salt</param>
      <returns>PBKDF2-SHA1 hash of a value and a unique salt</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Hashing.PBKDF2(System.String,System.String,System.Int32,System.Int32)">
      <summary>
 Computes the PBKDF2-SHA1 hash of a password.
 </summary>
      <param name="password">The password to hash.</param>
      <param name="salt">The salt.</param>
      <param name="iterations">The PBKDF2 iteration count.</param>
      <param name="outputBytes">The length of the hash to generate, in bytes.</param>
      <returns>A hash of the password.</returns>
    </member>
    <member name="M:BaseClasses.Hashing.CheckPBKDF2Hash(System.String,System.String,System.String)">
      <summary>
 Validates a password given a hash of the correct one.
 </summary>
      <param name="password">The hash to check.</param>
      <param name="salt">The salt to use.</param>
      <param name="hash">A hash of the correct password.</param>
      <returns>True if the password is correct. False otherwise.</returns>
    </member>
    <member name="M:BaseClasses.Hashing.SlowEquals(System.Byte[],System.Byte[])">
      <summary>
 Compares two byte arrays in length-constant time. This comparison
 method is used so that password hashes cannot be extracted from 
 on-line systems using a timing attack and then attacked off-line.
 </summary>
      <param name="a">The first byte array.</param>
      <param name="b">The second byte array.</param>
      <returns>True if both byte arrays are equal. False otherwise.</returns>
    </member>
    <member name="M:BaseClasses.Hashing.SlowEquals(System.String,System.String)">
      <summary>
 Compares two strings in length-constant time. This comparison
 method is used so that password hashes cannot be extracted from 
 on-line systems using a timing attack and then attacked off-line.
 </summary>
      <param name="a">The first string.</param>
      <param name="b">The second string.</param>
      <returns>True if both strings are equal. False otherwise.</returns>
    </member>
    <member name="T:BaseClasses.JsMinimizer">
      <summary>
 Compresses javascript files for faster client download.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:BaseClasses.ListResources._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:BaseClasses.ListResources._Table1">
      <summary>
Table1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:BaseClasses.MasterBase">
      <summary>
 Base class for System.Web.UI.MasterPage class, adding data accessors, error handeling and basic security. 
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.BasePageInit_Init(System.Object,System.EventArgs)">
      <summary>
 Init event handeler. Sets the default connection.
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.baseSecuityPage_Load(System.Object,System.EventArgs)">
      <summary>
 Load event handeler. Checks security and begins page tracking.
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.FillDataSet(System.String,System.String,System.Data.DataSet)">
      <summary>
 Convience method to <see cref="M:BaseClasses.BaseHelper.FillDataSet(System.String,System.Data.DataSet,System.String,System.Object[])">BaseHelper.FillDataSet</see></summary>
      <param name="command">
      </param>
      <param name="tableName">
      </param>
      <param name="ds">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.FillDataTable(System.String,System.Data.DataTable)">
      <summary>
 Convience method to <see cref="M:BaseClasses.BaseHelper.FillDataTable(System.String,System.Data.DataTable@,System.Data.Common.DbConnection@)">BaseHelper.FillDataTable</see></summary>
      <param name="command">
      </param>
      <param name="table">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.getValue(System.Object)">
      <summary>
 Returns the object or nothing if it is dbnull.value
 </summary>
      <param name="o">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.getString(System.Object)">
      <summary>
 Returns the object or "" if it is null or dbnull.value 
 </summary>
      <param name="o">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.getUsername">
      <summary>
 Gets the username from Page.User.Identity.Name
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.checkSecurity">
      <summary>
 Returns true if UserName has been set to a non-empty string. 
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.isNull(System.Data.DataRow,System.String)">
      <summary>
 Returns true if a column is null or dbnull.value
 </summary>
      <param name="row">
      </param>
      <param name="colname">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.JavaScriptEncode(System.String)">
      <summary>
  Performs JavaScript encoding on given string
 </summary>
      <param name="Str">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.JavaScriptUnencode(System.String)">
      <summary>
 Unencodes JavaScript characters from given string
 </summary>
      <param name="Str">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.ValidCookieName(System.String)">
      <summary>
 Ensures a string is compliant with cookie name requirements
 </summary>
      <param name="Str">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.getQueryString(System.String[])">
      <summary>
 Returns the query string and excludes some of the parameters if needed.
 </summary>
      <param name="excludeKeys">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.GetUrlPath">
      <summary>
 Returns the full path of the current url. ex: /test/some/location.aspx
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.ValidCookieValue(System.String)">
      <summary>
 Ensures a string is compliant with cookie value requirements
 </summary>
      <param name="Str">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.makeTableFromCSV(System.Web.HttpPostedFile)">
      <summary>
 Creates a datatable from a csv file posted to a web form.
 </summary>
      <param name="myFile">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.writeCSV(System.Data.DataTable,System.String[],System.Boolean)">
      <summary>
 Converts a datatable to csv format and writes csv data out to the responce stream.
 </summary>
      <param name="dt">
      </param>
      <param name="colNames">
      </param>
      <param name="asAttachment">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MasterBase.writeexcel(System.Data.DataTable,System.String[],System.Boolean)">
      <summary>
 Converts a datatable to excel format and writes csv data out to the responce stream.
 </summary>
      <param name="dt">
      </param>
      <param name="colNames">
      </param>
      <param name="asAttachment">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.MasterBase.errorHandler">
      <summary>
 Returns the current error handler for this application.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.MasterBase.Data">
      <summary>
 Returns a subclass of Database. The loacl assembly is searched, otherwise a cached version of Database is returned. Database is cached in the session so it will be user-isolated.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.MasterBase.sqlHelper">
      <summary>
 Convienece method, returns the BaseHelper in the dataObject. This is the default BaseHelper for a web application.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.MasterBase.parallelDataHelper">
      <summary>
 Convienece method, returns the ParallelDataHelper in the dataObject. This is the default ParallelDataHelper for a web application.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.MasterBase.defaultConnection">
      <summary>
 returns the default connection used in the web application. This is set in the web config as a connection string called either DTIConnection or ConnectionString.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.MasterBase.SecurePage">
      <summary>
 If this is set to true then the page will not render past load unless the Username value has been set.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.MasterBase.UserName">
      <summary>
 The current users name. Must be set programatically.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.MasterBase.securityFailedPage">
      <summary>
 This is the url of the page the request is forwarded to if the security check fails.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="E:BaseClasses.MasterBase.PostBack">
      <summary>
 Fires when the load event occures with a postback
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="E:BaseClasses.MasterBase.LoadNoPostBack">
      <summary>
 fires after the load event when there is no postback data
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="E:BaseClasses.MasterBase.DataReady">
      <summary>
 Fires when data from a parallel data helper call has data available to it.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.MimeDecoder">
      <summary>
 Utility class to map a file extension to the apropriate mime type
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.MimeDecoder.MimeType(System.String)">
      <summary>
 REturns the mime type for a file extension.
 </summary>
      <param name="strFileName">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.PageTracker">
      <summary>
 Tracks where a user has been on a web application. Usefull for adding a breadcrumb or other navigation stack to an application.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.ParallelDataHelper">
      <summary>
 Data layer class used to execute multiple sql statements in once command. Usefull for component systems where many components execute a select independant of one another.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.ParallelDataHelper.addFillDataTable(System.String,System.Data.DataTable@,System.Object[]@,System.Data.Common.DbConnection@,System.Boolean)">
      <summary>
 adds a table select to the sql que that will be filled befor the dataready event.
 </summary>
      <param name="stmt">
      </param>
      <param name="dt">
      </param>
      <param name="parmValueArray">
      </param>
      <param name="connection">
      </param>
      <param name="createTableOnError">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.ParallelDataHelper.addExecuteNonQuery(System.String,System.Object[]@,System.Data.Common.DbConnection@)">
      <summary>
 Adds a non-query to the sql que.
 </summary>
      <param name="stmt">
      </param>
      <param name="parmValueArray">
      </param>
      <param name="connection">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.ParallelDataHelper.addFetchSingleValue(System.String,System.Object[]@,System.Data.Common.DbConnection)">
      <summary>
 Adds a single value fetch to the sql que.
 </summary>
      <param name="stmt">
      </param>
      <param name="parmValueArray">
      </param>
      <param name="connection">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.ParallelDataHelper.executeParallelDBCall">
      <summary>
 performs all sql calls in the current sql que.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="E:BaseClasses.ParallelDataHelper.DataReady">
      <summary>
 All commands in sql que have been run and the data has been set to it's target object.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.ParallelCallStatementManager">
      <summary>
 Manages parallel data calls in a pages request/responce loop.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.ParallelCallStatement">
      <summary>
 A container class for an individual parallel sql call.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.Platform.isMono">
      <summary>
 Returns true if the application is running on the mono platform.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.QueryStringChanger">
      <summary>
 reads the query string, as well as setting it's values. Then forwards the responce to an apropriate query string url.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.QueryStringChanger.#ctor">
      <summary>
 Default constructor examins current request query string.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.QueryStringChanger.ToString">
      <summary>
 Return the current query string.
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.QueryStringChanger.Add(System.String,System.String)">
      <summary>
 Add a key/value string pair to the query
 </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.QueryStringChanger.redirectToMyUrl(System.Boolean)">
      <summary>
 Redirects the responce to the formatted url/query
 </summary>
      <param name="endResponse">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.QueryStringChanger.Remove(System.String)">
      <summary>
 removes a given key
 </summary>
      <param name="name">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.QueryStringChanger.ReplaceQuery(System.String,System.String,System.Boolean)">
      <summary>
 replaces an existing query value and redirects the url immediatly.
 </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
      <param name="endResponse">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.QueryStringChanger.ReturnReplaceQuery(System.String,System.String)">
      <summary>
 replace a query value and returns the new full url.
 </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.QueryStringChanger.FullUrl">
      <summary>
 Returns the full url with reformatted query.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Scripts.Page_Load(System.Object,System.EventArgs)">
      <summary>
 The load event. If it makes it here the item is either uncached on the client or the app is in debug mode.
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Scripts.writeStringResponse(System.String@)">
      <summary>
 Writes the string to the output stream.
 </summary>
      <param name="str">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Scripts.writeFileFromAssembly">
      <summary>
 Writes the file to the output stream.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Scripts.minimizeFile(System.IO.Stream@)">
      <summary>
 Minimizes a stream of javascript
 </summary>
      <param name="jsFile">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Scripts.ScriptsURL(System.Boolean)">
      <summary>
 Returns the url to the scripts.aspx page. (e.g. "~/res/BaseClasses/Scripts.aspx?f=baseclasses/TestResource.jpg")
 </summary>
      <param name="debug">optional set to true to prevent compression of js files</param>
      <returns>The string to prepend to urls to utilize the Scripts.aspx resource</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Scripts.GZipSupported">
      <summary>
 Determins weather resource should be gzipped on return. 
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Scripts.isModified">
      <summary>
 Determins weather requested item has been modified since it's last request. 
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Scripts.Page_Init(System.Object,System.EventArgs)">
      <summary>
 Handles the init event of the page. Will end the responce if the item is unmodified and therefore uses the client cache.
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Scripts.GenerateHash(System.String)">
      <summary>
 Generates a MD5 hash of a given input string
 </summary>
      <param name="input">String to hash</param>
      <returns>MD5 hash of String</returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.Scripts.filename">
      <summary>
 Filename read from query string. uses f=[resourceName]
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:BaseClasses.Scripts.etag">
      <summary>
 Gets an etag for client caching control based on the date a resource was last read from the hard disk.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:BaseClasses.Spider">
      <summary>
 Used to search a page or cotrol for contents. Spiders all sub controls in most cases.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Spider.spiderRemoveLiterals(System.Web.UI.Page)">
      <summary>
 Searches a Page and removes all literal controls it finds.
 </summary>
      <param name="pg">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Spider.spiderRemoveLiterals(System.Web.UI.Control)">
      <summary>
 Searches a Control and removes all literal controls it finds.
 </summary>
      <param name="_ctrl">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Spider.spiderStrictControlSetPresence(System.Web.UI.Control,System.Type[],System.Boolean)">
      <summary>
 Determines weather a control containes a type in it's control list. Does not return if the contained type is a subclass of the type argument
 </summary>
      <param name="_ctrl">
      </param>
      <param name="_types">
      </param>
      <param name="ignoreLiterals">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Spider.spiderPageforType(System.Web.UI.Page,System.Type)">
      <summary>
 Spiders a page for the first instance of a type and returns the first instance if found. Otherwise it returns nothing.
 </summary>
      <param name="pg">The page to search.</param>
      <param name="tp">The type that is being searched for.</param>
      <returns>a control of type tp</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Spider.spiderPageforTypeArray(System.Web.UI.Page,System.Type,System.Boolean)">
      <summary>
  Spiders a page for the first instance of a type and returns all instances if found. Otherwise it returns an empty collection.
 </summary>
      <param name="pg">The page to search.</param>
      <param name="tp">The type that is being searched for.</param>
      <param name="includeSubclasses">Determines weather to add subclasses of a the type to the return list.</param>
      <returns>A Collection of objects of type tp</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Spider.spidercontrolforTypeArray(System.Web.UI.Control,System.Type,Microsoft.VisualBasic.Collection@,System.Boolean,System.Boolean)">
      <summary>
  Spiders a Control for the all instances of a type and returns all instances if found. Otherwise it returns an empty collection.
 </summary>
      <param name="topctrl">The Control to search.</param>
      <param name="tp">The type that is being searched for.</param>
      <param name="includeSubclasses">Determines weather to add subclasses of a the type to the return list.</param>
      <returns>A Collection of objects of type tp</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Spider.spidercontrolforTypeArray(System.Web.UI.Control,System.Type,System.Boolean,System.Boolean)">
      <summary>
  Spiders a Control for the all instances of a type and returns all instances if found. Otherwise it returns an empty collection.
 </summary>
      <param name="topctrl">The Control to search.</param>
      <param name="tp">The type that is being searched for.</param>
      <param name="includeSubclasses">Determines weather to add subclasses of a the type to the return list.</param>
      <returns>A Collection of objects of type tp</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Spider.spidercontrolforType(System.Web.UI.Control,System.Type)">
      <summary>
 Spiders a Control for the first instance of a type and returns the first instance if found. Otherwise it returns nothing.
 </summary>
      <param name="ctrl">The Control to search.</param>
      <param name="tp">The type that is being searched for.</param>
      <returns>a control of type tp</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Spider.spiderUpforType(System.Web.UI.Control,System.Type)">
      <summary>
 Searches from the control up until it reaches the page for a specific control. Returns the first istance of tp found going up or nothing if unfound.
 </summary>
      <param name="ctrl">The Control to search.</param>
      <param name="tp">The type that is being searched for.</param>
      <returns>a control of type tp</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Spider.spiderPageforAllOfType(System.Web.UI.Page,System.Type)">
      <summary>
 Spiders a Page for the all instances of a type and returns all instances if found. Otherwise it returns an empty control list.
 </summary>
      <param name="pg">
      </param>
      <param name="tp">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.Spider.spidercontrolforAllOfType(System.Web.UI.Control,System.Type)">
      <summary>
 Spiders a Control for the all instances of a type and returns all instances if found. Otherwise it returns an empty control list.
 </summary>
      <param name="ctrl">
      </param>
      <param name="tp">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.SQLHelper.createAdaptor(System.String,System.Data.Common.DbConnection)">
      <summary>
 Creates a DbDataAdapter from a command string.
 </summary>
      <param name="SQLcommand">Select command used to generate the DbDataAdapter</param>
      <param name="connection">optional dBConnection that will override the default conection.</param>
      <returns>a DbCommand typed to the base helper type.</returns>
      <remarks>The default connection uses web config connection string named 'DTIConnection' or 'ConnectionString'</remarks>
    </member>
    <member name="M:BaseClasses.SQLHelper.createCommand(System.String,System.Data.Common.DbConnection)">
      <summary>
 Creates a DbCommand from a command string.
 </summary>
      <param name="SQLcommand">Select command used to generate the DbCommand</param>
      <param name="connection">optional dBConnection that will override the default conection.</param>
      <returns>a DbCommand typed to the base helper type.</returns>
      <remarks>The default connection uses web config connection string named 'DTIConnection' or 'ConnectionString'</remarks>
    </member>
    <member name="M:BaseClasses.SQLHelper.createCommandBuilder(System.Data.Common.DbDataAdapter@)">
      <summary>
 Creates a typed DbCommandBuilder
 </summary>
      <param name="adaptor">The typed DbDataAdapter </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.SQLHelper.createConnection(System.String)">
      <summary>
 Creates a typed connection from a string.
 </summary>
      <param name="ConnectionString">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.SQLHelper.createParameter(System.String,System.Object)">
      <summary>
 Creates a typed dbParameter from a name and value
 </summary>
      <param name="name">the parm name.</param>
      <param name="value">the parm value.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.SQLHelper.createParameter(System.Data.Common.DbParameter@)">
      <summary>
 Creates a typed parameter from a genric DbParameter
 </summary>
      <param name="parameter">the DbParameter</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.SQLHelper.ProcessDataAdaptor(System.Data.Common.DbDataAdapter@,System.String,System.Data.DataTable)">
      <summary>
 Called on creation of a new DbAdaptor
 </summary>
      <param name="da">
      </param>
      <param name="TableName">
      </param>
      <param name="dt">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.SQLHelper.checkDBObjectExists(System.String)">
      <summary>
 Checks if a datatable exists in a database.
 </summary>
      <param name="tablename">The name of the table that may eexist in the database.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.SQLHelper.getCreateTableString(System.Data.DataTable)">
      <summary>
 Builds a create script for a table in the database based on the schema of the datatable passed in.
 </summary>
      <param name="dt">The datatable that is usedto build the create String. Only schema is used, data is ignored.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.SQLHelper.processSelectCommand(System.String)">
      <summary>
 Normalize sql statements in case non-compliant syntax works it's way in.
 </summary>
      <param name="commandString">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.EmptyHelper.createAdaptor(System.String,System.Data.Common.DbConnection)">
      <summary>
 Creates a SQLiteDataAdapter from a select command. This adaptor is for filling a datatable and may not contain insert,update, or delete commands.
 </summary>
      <param name="command">Select command used to generate Adaptor</param>
      <param name="connection">optional connection object. If ommited it uses the helper's default connection.</param>
      <returns>a SQLiteDataAdapter typed to the base helper</returns>
      <remarks>The default connection uses web config connection string named 'DTIConnection' or 'ConnectionString'</remarks>
    </member>
    <member name="M:BaseClasses.EmptyHelper.createCommand(System.String,System.Data.Common.DbConnection)">
      <summary>
 Creates a SQLiteCommand from a sqlite command string.
 </summary>
      <param name="command">Select command used to generate SQLiteCommand</param>
      <param name="connection">optional connection object. If ommited it uses the helper's default connection.</param>
      <returns>a SQLiteCommand typed to the base helper</returns>
      <remarks>The default connection uses web config connection string named 'DTIConnection' or 'ConnectionString'</remarks>
    </member>
    <member name="M:BaseClasses.EmptyHelper.createCommandBuilder(System.Data.Common.DbDataAdapter@)">
      <summary>
 Creates a typed DbCommandBuilder
 </summary>
      <param name="adaptor">The typed DbDataAdapter </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.EmptyHelper.createConnection(System.String)">
      <summary>
 Creates a typed connection from a string.
 </summary>
      <param name="ConnectionString">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.EmptyHelper.createParameter(System.String,System.Object)">
      <summary>
 Creates a typed dbParameter from a name and value
 </summary>
      <param name="name">the parm name.</param>
      <param name="value">the parm value.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.EmptyHelper.createParameter(System.Data.Common.DbParameter@)">
      <summary>
 Creates a typed parameter from a genric DbParameter
 </summary>
      <param name="parameter">the DbParameter</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.EmptyHelper.ProcessDataAdaptor(System.Data.Common.DbDataAdapter@,System.String,System.Data.DataTable)">
      <summary>
 Called on creation of a new DbAdaptor
 </summary>
      <param name="da">
      </param>
      <param name="TableName">
      </param>
      <param name="dt">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.EmptyHelper.checkDBObjectExists(System.String)">
      <summary>
 Checks if a datatable exists in a database.
 </summary>
      <param name="tablename">The name of the table that may eexist in the database.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:BaseClasses.EmptyHelper.getCreateTableString(System.Data.DataTable)">
      <summary>
 Builds a create script for a table in the database based on the schema of the datatable passed in.
 </summary>
      <param name="dt">The datatable that is usedto build the create String. Only schema is used, data is ignored.</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Binding.Extensions.setRowValues(System.Web.UI.Control,System.Data.DataRow,System.Boolean)">
      <summary>
 Sets the values from the bound controlls back into the row.
 </summary>
      <param name="c">
      </param>
      <param name="r">
      </param>
      <param name="showerrors">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Binding.Extensions.showErrorList(System.Web.UI.Control,System.Collections.Generic.List{Binding.Extensions.ErrorSet},System.Boolean,System.String)">
      <summary>
 Puts all errors encountered in binding next to the controll that threw the error.
 </summary>
      <param name="c">
      </param>
      <param name="errors">
      </param>
      <param name="addToControl">
      </param>
      <param name="appendFormat">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Binding.Extensions.autoBind(System.Web.UI.Control,System.Data.DataRow,System.Boolean,System.Boolean)">
      <summary>
 Sets the values of all controlls in this one to the values in row. ID is used and the first 2 and 3 characters are ignored. For example, a textbox with id = tbLastName  will be set to the "LastName" column of row.
 </summary>
      <param name="c">
      </param>
      <param name="row">
      </param>
      <param name="setValues">
      </param>
      <param name="doNothingIfPostback">
      </param>
      <returns>A list of errors encountered when setting form values.</returns>
    </member>
    <member name="M:Binding.Extensions.setText(System.Web.UI.Control,System.Web.UI.WebControls.DropDownList,System.Data.DataRow,System.String[])">
      <summary>
 If the value is not in the item list it is added automatically to the top of the list. The string "NULL" will set the db value to null.
 </summary>
      <param name="c">
      </param>
      <param name="dd">
      </param>
      <param name="row">
      </param>
      <param name="columns">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DefaultMenuItem.Name">
      <summary>
 Name of the page and display of menu item to add to data
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DefaultMenuItem.Link">
      <summary>
 Static link to the page being added to the database.  If blank a dynamic page will be added
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DefaultMenuItem.AdminOnly">
      <summary>
 sets the page added to only display when admin panel is logged in
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DefaultMenuItem.overrideTemplate">
      <summary>
 Allows this specific menuitem to be rendered differently based on it's Display name
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DefaultMenuItem.AddToMenu">
      <summary>
 Set false to only add page to the pages table
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.DTIDynamicPageDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.DTIPageHeiarchyDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.MenuItemDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.DTISiteMapDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.DTIUsersDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.DTIDynamicPageRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.DTIPageHeiarchyRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.MenuItemRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.DTISiteMapRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.DTIUsersRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.DTIDynamicPageRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.DTIPageHeiarchyRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.MenuItemRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.DTISiteMapRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIAdminPanel.dsDTIAdminPanel.DTIUsersRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIAdminPanel.DTIAdminPanel">
      <summary>
 Adds dynamic page creation and ability to switch to layout, edit or preview mode. Best used on a master page where automatic templates will take effect.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.EditOn">
      <summary>
 Sets the Admin mode to Edit.  Show all components in Admin Mode
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.LayoutOn">
      <summary>
 Sets the admin Mode to Layout allowing items to be re-ordered
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.LoggedIn">
      <summary>
 Determines if the Admin panel is visible 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.adminImageUrl">
      <summary>
 sets Url to override Admin Panel Image
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.adminImageHeight">
      <summary>
 Height for the Admin Panel image
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.adminImageWidth">
      <summary>
 Width of the Admin Panel Image
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.FixedScrollPosition">
      <summary>
 Keeps Admin panel at top of page during scrolling
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.menuImageUrl">
      <summary>
 Sets the Url for to override the menu image
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.menuImageHeight">
      <summary>
 Height for the Admin Panel image
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.menuImageWidth">
      <summary>
 width for the Admin Panel image
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.recycImageUrl">
      <summary>
 Sets the Url for to override the menu image
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.recycImageHeight">
      <summary>
 Height for the Admin Panel image
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.recycImageWidth">
      <summary>
 width for the Admin Panel image
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.DTIAdminPanel.CssTheme">
      <summary>
 Sets theme so all css can be overridden
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIAdminPanel.DTISiteMapEditor._tlMenuItems">
      <summary>
tlMenuItems control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.DTISiteMapEditor._tlPages">
      <summary>
tlPages control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.DTISiteMapEditor._btnSave">
      <summary>
btnSave control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.EditItem._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.EditItem._editMedia1">
      <summary>
editMedia1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.EditItem._btnCancel">
      <summary>
btnCancel control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.EditItem._btnSave">
      <summary>
btnSave control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="P:DTIAdminPanel.ChangePassword.CurrentUser">
      <summary>
 User to change password for
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.ChangePassword.DisableDefaultStyle">
      <summary>
 Remove defualt style of change password control
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIAdminPanel.ChangePasswordControl._tbpass">
      <summary>
tbpass control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.ChangePasswordControl._valReq">
      <summary>
valReq control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.ChangePasswordControl._tbConfirm">
      <summary>
tbConfirm control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.ChangePasswordControl._valComp">
      <summary>
valComp control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.ChangePasswordControl._btnChange">
      <summary>
btnChange control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.ChangePasswordControl._InfoDiv1">
      <summary>
InfoDiv1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="P:DTIAdminPanel.ForgotPassword.DisableDefaultStyle">
      <summary>
 Remove defualt style of change password control
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIAdminPanel.ForgotPasswordControl._lblMessage">
      <summary>
lblMessage control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.ForgotPasswordControl._lblText">
      <summary>
lblText control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.ForgotPasswordControl._tbEmailRecovery">
      <summary>
tbEmailRecovery control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.ForgotPasswordControl._idSent">
      <summary>
idSent control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.ForgotPasswordControl._idEmailError">
      <summary>
idEmailError control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.ForgotPasswordControl._btnSendEmail">
      <summary>
btnSendEmail control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIAdminPanel.LoginControl">
      <summary>
 A Control to add login ability for the content management system. 
 Default user is:     DTIAdmin
 Default Password is: DTIPass
 User is prompted for a new user/pw after the first login.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIAdminPanel.LoginControl.LoginModes">
      <summary>
 Eumeration of the login modes.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIAdminPanel.LoginControl.CreateMD5Hash(System.String)">
      <summary>
 Generates a MD5 hash of a given string
 </summary>
      <param name="input">String to hash</param>
      <returns>MD5 hash of String</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIAdminPanel.LoginControl.isHashedValue(System.Data.DataTable@,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
 returns id of User if username and hashed password is in table.  
 Also hashes any passwords not generated by this method and replaces password.
 </summary>
      <param name="dtusers">
      </param>
      <param name="Username">
      </param>
      <param name="password">
      </param>
      <param name="salt">
      </param>
      <param name="UserNameField">
      </param>
      <param name="PasswordField">
      </param>
      <param name="IdField">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIAdminPanel.LoginControl.PasswordHashAndCheck(DTIAdminPanel.dsDTIAdminPanel.DTIUsersRow@,System.String,System.Int32)">
      <summary>
 Checks if Users Password is correct and hashed.  If password is not hashed this function will hash the
 password
 </summary>
      <param name="CurrentUser">User to check</param>
      <param name="password">Password to check</param>
      <param name="iterations">Iterations to make if password is not hashed</param>
      <returns>Currentuser if login successfull, Nothing if login fails</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIAdminPanel.LoginControl.PasswordHashAndCheck(System.Data.DataTable@,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
 returns id of User if username and hashed password is in table.  
 Also hashes any passwords not generated by this method and replaces password.
 </summary>
      <param name="dtusers">
      </param>
      <param name="Username">
      </param>
      <param name="password">
      </param>
      <param name="UserNameField">
      </param>
      <param name="PasswordField">
      </param>
      <param name="IdField">
      </param>
      <param name="SaltField">
      </param>
      <param name="iterations">
      </param>
      <returns>
      </returns>
      <remarks>Requires dtusers to contain user trying to login</remarks>
    </member>
    <member name="M:DTIAdminPanel.LoginControl.createUser(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int64,System.Int32)">
      <summary>
 Adds user to the DTIUsersDataTable.  Takes care of hashing their password
 </summary>
      <param name="Username">
      </param>
      <param name="password">
      </param>
      <param name="email">
      </param>
      <param name="isAdmin">
      </param>
      <param name="isActive">
      </param>
      <param name="MainID">
      </param>
      <param name="iterations">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIAdminPanel.LoginControl.loginUser(System.String,System.String,System.Int64,System.Int32,System.Int32)">
      <summary>
 Processes user's login request.  Return row of user if successful or nothing if not successfull.  
 Throws exception if user is required to change thier password, if their account is 
 locked due to exceeding the max login attempts, or if user doesn't exist.
 </summary>
      <param name="username">
      </param>
      <param name="password">
      </param>
      <param name="mainID">
      </param>
      <param name="MaxLoginAttempts">
      </param>
      <param name="LoginFailureWaitTime">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIAdminPanel.LoginControl.ChangePassword(DTIAdminPanel.dsDTIAdminPanel.DTIUsersRow@,System.String,System.Int32)">
      <summary>
 Changes password to new hash
 </summary>
      <param name="CurrentUser">
      </param>
      <param name="NewPassword">
      </param>
      <param name="iterations">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIAdminPanel.LoginControl.SetUserCookie(System.String,System.String,System.Int32,System.String,System.String)">
      <summary>
 Add encrypted LoginControl cookie for automatic logins
 </summary>
      <param name="username">Username to save</param>
      <param name="password">Password to save</param>
      <param name="DaysTilExpiration">Number of days until cookie expires</param>
      <param name="cookieName">Name of cookie</param>
      <param name="EncryptionKey">Key used to encrypt cookie data</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIAdminPanel.LoginControl.GetUserCookie(System.String@,System.String@,System.String,System.String)">
      <summary>
 Decrypts LoginControl cookie
 </summary>
      <param name="username">Stores user's username</param>
      <param name="password">Stores user's password</param>
      <param name="cookieName">Name of cookie</param>
      <param name="DecryptionKey">Key used to decrypt cookie data</param>
      <remarks>DecryptionKey must be the same as the EncryptionKey used in SetUserCookie</remarks>
    </member>
    <member name="M:DTIAdminPanel.LoginControl.RemoveCookie(System.String)">
      <summary>
 Marks cookie as expired so the browser will delete it.
 </summary>
      <param name="cookieName">
      </param>
      <remarks>You cannot directly delete a cookie on a user's computer. 
 However, you can direct the user's browser to delete the cookie by 
 setting the cookie's expiration date to a past date.
 http://msdn.microsoft.com/en-us/library/ms178195.aspx
 </remarks>
    </member>
    <member name="M:DTIAdminPanel.LoginControl.CookieLogin(System.Int64,System.String)">
      <summary>
 Attempts Loing using stored cookie (if it exists)
 </summary>
      <param name="MainId">
      </param>
      <param name="cookieName">
      </param>
      <returns>CurrentUser if successful otherwise Nothing</returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.LoginMode">
      <summary>
 Gets or sets the different loging modes for editing text, changing layout, and logging out of 
 the admin panel
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.isLoggedIn">
      <summary>
 Gets or sets the login state
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.MaxLoginAttempts">
      <summary>
 Number of consective login failures before account is locked
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.LoginFailureWaitTime">
      <summary>
 Number of minutes to wait before being able to log back in after account it locked
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.DisableDefaultStyle">
      <summary>
 Remove defualt style of login control
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.isSiteEditLogin">
      <summary>
 If true all DTIControls items (editpanel, adminpanel, sortable) will be activated for site editing
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.AutoRedirect">
      <summary>
 If set to true user will automatacally be redirected back to the current page after successfull login
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.LoginAndEditOn">
      <summary>
 If set to true the site will be placed into Edit Mode on successfull login
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.EnablePasswordStrength">
      <summary>
 Determines if the Password Strength Text is shown on creating initial login
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.ForgotPasswordText">
      <summary>
 Text show for the forgot password link.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>Must set ForgotPasswordLink</remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.ForgotPasswordURL">
      <summary>
 Url for the forgot password page
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.EnableRememberMe">
      <summary>
 Enables remember me checkbox for loging in with cookies
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.RememberMeText">
      <summary>
 Text to display for the Remember me checkbox
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.RememberMeTimeout">
      <summary>
 Number of days past current time to set cookie expiration date
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.AccountLockedMessage">
      <summary>
 Error message to display when a account has been locked due to failed logins
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginControl.LoginFailedMessage">
      <summary>
 Error message to display on unsuccessful login
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="E:DTIAdminPanel.LoginControl.LoggedIn">
      <summary>
 fires on a sucessfull login
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="E:DTIAdminPanel.LoginControl.LoggedOut">
      <summary>
 fires after logout is pressed
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="E:DTIAdminPanel.LoginControl.LoginFailed">
      <summary>
 fires on a failed login
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._KurkLogin">
      <summary>
KurkLogin control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._tbUser">
      <summary>
tbUser control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._tbPass">
      <summary>
tbPass control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._cbRemember">
      <summary>
cbRemember control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._btnLogin">
      <summary>
btnLogin control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._linkForgot">
      <summary>
linkForgot control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._lblErrorAttempts">
      <summary>
lblErrorAttempts control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._lblError">
      <summary>
lblError control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._diAdminSetup">
      <summary>
diAdminSetup control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._tbuser2">
      <summary>
tbuser2 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._tbEmail">
      <summary>
tbEmail control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._tbpass2">
      <summary>
tbpass2 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._tbConfirm">
      <summary>
tbConfirm control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._pnlPwd">
      <summary>
pnlPwd control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._PasswordStrength1">
      <summary>
PasswordStrength1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._btnSubmit">
      <summary>
btnSubmit control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._loggedInControl">
      <summary>
loggedInControl control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._lbLogout">
      <summary>
lbLogout control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.LoginUserControl._adminOn">
      <summary>
adminOn control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginUserControl.AutoRedirect">
      <summary>
 If set to true user will automatacally be redirected back to the current page.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginUserControl.LoginAndEditOn">
      <summary>
 If set to true the site will be placed into Edit Mode
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.LoginUserControl.EnablePasswordStrength">
      <summary>
 Determines if the Password Strength Text is shown on creating initial login
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIAdminPanel.ChromeMenu._menuitem5">
      <summary>
menuitem5 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.ChromeMenu._menuitem6">
      <summary>
menuitem6 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIAdminPanel.Menu">
      <summary>
 Dynamic menu containing static and dynmic pages. Best used on a master page where automatic templates will take effect.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIAdminPanel.Menu.refreshdata">
      <summary>
 if true this refreshes the menu items from the database on load.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIAdminPanel.Menu.ItemToData">
      <summary>
 A utility hashtable to associate menu items with their data elements.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIAdminPanel.Menu.getDesignTimeHtml">
      <summary>
 The html rendered to the design view
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.Menu.MenuItems">
      <summary>
 Menu Items in the menu
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.Menu.MenuItem(System.String)">
      <summary>
 Finds a specific page in MenuItems by pagename or display name if page name doesn't exist
 </summary>
      <param name="PageName">
      </param>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.Menu.DepthOfMenu">
      <summary>
 How many leves the menu actually renders on a page
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.Menu.Template">
      <summary>
 Displays a pre desinged menu structure
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.Menu.SelectedCss">
      <summary>
 Css Class for the currently selected tab in a menu
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.Menu.StartDepth">
      <summary>
 Overrides other options. Displays only a fixed depth of the menu from root plus a given depth.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.Menu.FixedDepthtravel">
      <summary>
 Only used for fixed depth menus. This sets the number of nodes that will be walked to find relative nodes for display
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.Menu.SelectParentPage">
      <summary>
 If true the Anchor tag of the parent will include the class declared in selecedCSS otherwise
 the class will be added to the anchor of the current page
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIAdminPanel.MenuItem">
      <summary>
 A menu item used in a menu. Can be added in code, to the aspx page or from data.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIAdminPanel.JqueryUI._MenuItem1">
      <summary>
MenuItem1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.JqueryUI._MenuItem2">
      <summary>
MenuItem2 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.Simple._menuitem1">
      <summary>
menuitem1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.Simple._menuitem2">
      <summary>
menuitem2 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.Simple._menuitem3">
      <summary>
menuitem3 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.Simple._menuitem4">
      <summary>
menuitem4 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.Simple._menuitem5">
      <summary>
menuitem5 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.VerticalMenu._menuitem1">
      <summary>
menuitem1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.VerticalMenu._menuitem2">
      <summary>
menuitem2 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="P:DTIAdminPanel.OverrideItem.overrideTemplate">
      <summary>
 Allows this specific menuitem to be rendered differently based on it's Display name
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.OverrideItem.Name">
      <summary>
 Name of the page and display of menu item to add to data
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIAdminPanel.CHPage">
      <summary>
CHPage class.
</summary>
      <remarks>
Auto-generated class.
</remarks>
    </member>
    <member name="T:DTIAdminPanel.PageEditControl">
      <summary>
PageEditControl class.
</summary>
      <remarks>
Auto-generated class.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageEditControl._HiddenField1">
      <summary>
HiddenField1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageEditControl._tbPageName">
      <summary>
tbPageName control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageEditControl._tbLink">
      <summary>
tbLink control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageEditControl._lbl">
      <summary>
lbl control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageEditControl._ddlMasterPage">
      <summary>
ddlMasterPage control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageEditControl._cbAdmin">
      <summary>
cbAdmin control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageEditControl._cbUsers">
      <summary>
cbUsers control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._HiddenField1">
      <summary>
HiddenField1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._hfMenus">
      <summary>
hfMenus control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._hfPages">
      <summary>
hfPages control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._hfRefresh">
      <summary>
hfRefresh control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._lblurl">
      <summary>
lblurl control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._btnSave">
      <summary>
btnSave control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._tooltip2">
      <summary>
tooltip2 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._tooltip1">
      <summary>
tooltip1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._tlMenuItems">
      <summary>
tlMenuItems control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._tlPages">
      <summary>
tlPages control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._btnAddStatic">
      <summary>
btnAddStatic control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._tbPageName">
      <summary>
tbPageName control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._ddlMasterPage">
      <summary>
ddlMasterPage control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._lblError">
      <summary>
lblError control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._btnAdd">
      <summary>
btnAdd control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._lbl">
      <summary>
lbl control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.PageList._btnDuplicate">
      <summary>
btnDuplicate control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.FlatMenu._menuitem1">
      <summary>
menuitem1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.FlatMenu._menuitem2">
      <summary>
menuitem2 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.FlatMenu._menuitem3">
      <summary>
menuitem3 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.FlatMenu._menuitem4">
      <summary>
menuitem4 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.FlatMenu._menuitem5">
      <summary>
menuitem5 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIAdminPanel.PasswordStrength">
      <summary>
 Checks Password strengh against a Brute Force Attack
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIAdminPanel.PasswordStrength.PasswordTextBoxId">
      <summary>
 The ID of the Textbox to check password strength
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIAdminPanel.Site1">
      <summary>
Site1 class.
</summary>
      <remarks>
Auto-generated class.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.Site1._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIAdminPanel.Site1._ContentPlaceHolder1">
      <summary>
ContentPlaceHolder1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIAjax.DTIupdatepanel">
      <summary>
 Simplified Ajax enbaled panel
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIAjax.jsonSeverConrol">
      <summary>
 A json enabled web control
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIAjax.jsonObject">
      <summary>
 json return object
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIAjax.jsonWorker">
      <summary>
 The worker class recieving data from a json call.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIContentManagement.History._Head1">
      <summary>
Head1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.History._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.History._pnlRedirectPg">
      <summary>
pnlRedirectPg control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.History._DropDownList1">
      <summary>
DropDownList1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.History._Literal1">
      <summary>
Literal1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIContentManagement.dsCreatedTables">
      <summary>
Represents a strongly typed in-memory cache of data.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsCreatedTables.DTIContentManagerDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsCreatedTables.DTIContentManagerHistoryDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsCreatedTables.DTIContentManagerRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsCreatedTables.DTIContentManagerHistoryRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsCreatedTables.DTIContentManagerRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIContentManagement.dsCreatedTables.DTIContentManagerHistoryRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.DTIContentManagerDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.DTIContentManagerHistoryDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.DTINewsManagerDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.DTINewsManagerHistoryDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.vw_PageHeiarchy_DynamicPageDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.DTIContentManagerRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.DTIContentManagerHistoryRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.DTINewsManagerRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.DTINewsManagerHistoryRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.vw_PageHeiarchy_DynamicPageRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.DTIContentManagerRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.DTIContentManagerHistoryRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.DTINewsManagerRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.DTINewsManagerHistoryRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIContentManagement.dsEditPanel.vw_PageHeiarchy_DynamicPageRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIContentManagement.EditPanel">
      <summary>
 The edit panel user control, adds editable content areas to any page.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIContentManagement.EditPanel.saveAllInstances">
      <summary>
 Saves the current instance and makes all other editors obn the page to be saved on pre-render.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIContentManagement.EditPanel.saveInstance">
      <summary>
 Saves just the current instance of the editor
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIContentManagement.EditPanel.htmlEdit">
      <summary>
 The html editor instance. 
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIContentManagement.EditPanel.addSQLCall">
      <summary>
 SQL call information
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIContentManagement.EditPanel.setContentRow(System.Boolean)">
      <summary>
 Sets the contents row of the data objects.
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIContentManagement.EditPanel.setText">
      <summary>
 Sets the text of the datarow to the text value of the control.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIContentManagement.EditPanel.saveContent">
      <summary>
 Saves the contents of the control.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIContentManagement.EditPanel.replaceimg(System.String)">
      <summary>
 Changes the sizes of any dynamic images in the string to the size on the html page so the image size is the same as it appears to the client. 
 </summary>
      <param name="instring">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIContentManagement.EditPanel.Menu_Icon_Url">
      <summary>
 Icon of the control int the layout toolbar.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIContentManagement.EditPanel.ToolbarMode">
      <summary>
 Determines weather the toolbar is rendered over the editor or at the top of the screen.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIContentManagement.EditPanel.Text">
      <summary>
 The text contained in the html editor.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIContentManagement.EditPanel.ShowCancelButton">
      <summary>
 Show save and cancel buttons.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIContentManagement.EditPanel.contentTable">
      <summary>
 Readonly property with the contents data table for all editors on this page.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIContentManagement.EditPanel.ContentRow">
      <summary>
 DataRow for the current content.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="E:DTIContentManagement.EditPanel.textSet">
      <summary>
 The text value of the control has been set.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="E:DTIContentManagement.EditPanel.SaveClicked">
      <summary>
 The save button on the html editor has been clicked.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="E:DTIContentManagement.EditPanel.CancelClicked">
      <summary>
 The cancel button on the html editor has been clicked.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIContentManagement.ucImage._lbDelete">
      <summary>
lbDelete control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucImage._divImg">
      <summary>
divImg control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucImage._lkImage">
      <summary>
lkImage control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucImage._LazyImgLoad1">
      <summary>
LazyImgLoad1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucImage._litButtons">
      <summary>
litButtons control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucImageSelector._litVimeoThumbScript">
      <summary>
litVimeoThumbScript control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucImageSelector._FileUpload1">
      <summary>
FileUpload1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucImageSelector._btnUpload">
      <summary>
btnUpload control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucImageSelector._tbLink">
      <summary>
tbLink control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucImageSelector._btnEmbed">
      <summary>
btnEmbed control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucImageSelector._divUploadLink">
      <summary>
divUploadLink control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucImageSelector._Tabs1">
      <summary>
Tabs1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucImageSelector._btnSelect">
      <summary>
btnSelect control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucImageSelector._HiddenField1">
      <summary>
HiddenField1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucVideo._lbDelete">
      <summary>
lbDelete control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucVideo._divImg">
      <summary>
divImg control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucVideo._lkImage">
      <summary>
lkImage control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucVideo._LazyImgLoad1">
      <summary>
LazyImgLoad1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ucVideo._litButtons">
      <summary>
litButtons control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ImageInsertOptions._hlInsertImage">
      <summary>
hlInsertImage control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ImageInsertOptions._hlInsertImageThumb">
      <summary>
hlInsertImageThumb control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ImageInsertOptions._btnDeleteImage">
      <summary>
btnDeleteImage control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.ImageInsertOptions._hsEdit">
      <summary>
hsEdit control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.MediaList._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.MediaList._mediaGall">
      <summary>
mediaGall control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.PreviewFiles._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.PreviewFiles._phFilePreview">
      <summary>
phFilePreview control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.PreviewFiles._btnSave">
      <summary>
btnSave control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.UploadMedia._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.UploadMedia._MediaUploader1">
      <summary>
MediaUploader1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.VideoInsertOptions._hlInsertVideo">
      <summary>
hlInsertVideo control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.VideoInsertOptions._hlInsertVideoThumb">
      <summary>
hlInsertVideoThumb control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.VideoInsertOptions._hlDeleteVideo">
      <summary>
hlDeleteVideo control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.VideoInsertOptions._hsEdit">
      <summary>
hsEdit control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIContentManagement.PageSummary">
      <summary>
 Control to display dynamic page information.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIContentManagement.SearchControl">
      <summary>
 Control to provide simple site searches of pages
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIContentManagement.SearchResultGallery">
      <summary>
 Gallery control dedicated to displaying search results
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIContentManagement.SearchResultGallery.SearchGalleryAjaxWorker">
      <summary>
 The ajax worker class that dynamically loads the search results.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIContentManagement.SearchResultsUserControl._buttonHolder">
      <summary>
buttonHolder control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.SearchResultsUserControl._btnPages">
      <summary>
btnPages control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.SearchResultsUserControl._btnMedia">
      <summary>
btnMedia control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.SearchResultsUserControl._gallPages">
      <summary>
gallPages control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.SearchResultsUserControl._gallMedia">
      <summary>
gallMedia control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.SearchUserControl._tbSearch">
      <summary>
tbSearch control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIContentManagement.SearchUserControl._hsSearch">
      <summary>
hsSearch control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIControls.Share">
      <summary>
 Shared helper module for easy access to utility methods
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIControls.Share.initializePathProvider">
      <summary>
 Call this at application.init()
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIControls.Share.getDefaultValue(System.String,System.String)">
      <summary>
 Returns a default value if the item is not an app property in the application config.
 Usefull for overideable propertys EX:
 Public Property redirectURL As String = vmDbOperations.getDefaultValue("redirectURL", "www.google.com")
 </summary>
      <param name="configName">The name of the key in the app.config or web.config</param>
      <param name="defaultValue">Default value if the key is not found</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIControls.Share.add_UserControl_to_Menu(System.String,System.String,System.String)">
      <summary>
 Adds a user control to the admin panel tool menu. Appears in layout mode.
 </summary>
      <param name="Path_to_ascx_Control">
      </param>
      <param name="Menu_Item_title">
      </param>
      <param name="iconUrl">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIControls.Share.Session">
      <summary>
 A generic session object. Handles design mode as well as runtime. 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIControls.Share.MainId">
      <summary>
 This is the secondary identifier of the current session. 
 This propery can be overridden by any DTIControl, but changing this property here will make all editpanels and sortables use a different default value.
 This is for display purposes. All rendered controls without a set mainID will use this site wide one.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIControls.Share.LanguageId">
      <summary>
 A language seperator. usable for multilingual sites. This is the current LanguageId visable for the site.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIControls.Share.EditModeOn">
      <summary>
 If set to true, this will turn edit mode on for the current session.
 You will need to set logged in to true if you have not already.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIControls.Share.AdminPanelOn">
      <summary>
 If set to true, this will log the current session in and turn edit mode on.
 This causes a responce.redirect to occure so no code after this property is set will be run. 
 The redirect only occures if the state changes.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIControls.Share.siteEditMainID">
      <summary>
 The mainID that the current administrator has edit access to.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIControls.Share.LayoutOn">
      <summary>
 If set to true, this will turn layout mode on for the current session.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIControls.Share.LoggedIn">
      <summary>
 If set to true, this will set the user as logged in for the current session.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIControls.Share.UploadFolderDefault">
      <summary>
 Default upload folder. The webserver must have write access to this folder. 
 </summary>
      <value>"/uploads/"</value>
      <returns>The currently selected upload folder.</returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIControls.Share.sqlHelper">
      <summary>
 A convience helper for getting the current baseHelper
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIControls.Share.defaultConnection">
      <summary>
 The default connection for the entire application. This will effect all logged in users.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIControls.Share.defaultConnectionSessionWide">
      <summary>
 The default connection for the current session state only.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIGallery.dsGallery.DTIGalleryDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIGallery.dsGallery.DTIGalleryRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIGallery.dsGallery.DTIGalleryRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIGallery.DTIGalleryControl">
      <summary>
 base gallery control
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIGallery.DTIGalleryControl.GalleryWorkerBase">
      <summary>
 Ajax worker class
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIGallery.DTIGalleryControl.addUploadLink(System.String,System.String)">
      <summary>
 Sets the upload lik to a specific url and text value
 </summary>
      <param name="_displayText">
      </param>
      <param name="_expandURL">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIGallery.DTIGalleryControl.clearUploads">
      <summary>
 Clears pending uploads.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.WaitingImageURL">
      <summary>
 URL of Image displayed while the gallery is loaded.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.GalleryWidth">
      <summary>
 Width or the gallery.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.GalleryHeight">
      <summary>
 Height of the gallery.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.MyGallery">
      <summary>
 The gallery user control.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.searchPanel">
      <summary>
 The search panel control
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.ShowSearching">
      <summary>
 Show the search control in a gallery.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.jsonControl">
      <summary>
 The ajax helper control used to load and page the gallery.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.ShowPaging">
      <summary>
 Show the pages at the bottom of the gallery.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.ShowFirstAndLastButtons">
      <summary>
 Show the first and last page shortcuts at the bottom of the gallery.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.CSS_file">
      <summary>
 The css file applied across the gallery
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.ShowUpload">
      <summary>
 Show the upload button on the gallery.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.TotalPages">
      <summary>
 The number of pages in the gallery. Setting this only alters the label display.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.CurrentPage">
      <summary>
 The current page displayed.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.Back_Button_CSSClass">
      <summary>
 The css class of the back button.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.Forward_Button_CSSClass">
      <summary>
 The css class of the forward button.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.First_Button_CSSClass">
      <summary>
 The css class of the first button.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.Last_Button_CSSClass">
      <summary>
 The css class of the last button.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.Page_Button_CSSClass">
      <summary>
 The css class of the page button.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.Page_Textbox_CSSClass">
      <summary>
 The css class of the page textbox.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.Pages_Label_CSSClass">
      <summary>
 The css class of the page label.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.Back_Button_Image_URL">
      <summary>
 Back button image url
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.Forward_Button_Image_URL">
      <summary>
 Forward button image url
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.First_Button_Image_URL">
      <summary>
 First button image url
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.Last_Button_Image_URL">
      <summary>
 Last button image url
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.Page_Button_Image_URL">
      <summary>
 Page button image url
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGalleryControl.PageHolder">
      <summary>
 The place holder containing the gallery control.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIGallery.DTIGallerySharedVariables.GalleryDataHelper">
      <summary>
  a helper class to load gallery information from a database.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIGallerySharedVariables.dsGall">
      <summary>
 Gallery information cached on a session level.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIGallery.DTIImageGallery">
      <summary>
 Gallery of only images.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIGallery.DTIMediaGallery">
      <summary>
 base gallery control for browsing and displaying DTI-managed media objects
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIGallery.DTIMediaGallery.GalleryOptionObject">
      <summary>
 Gallery Options 
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIGallery.DTIMediaGallery.MediaGalleryAjaxWorker">
      <summary>
 Ajax worker class
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTIMediaGallery.ReturnResultsOnEmptySearch">
      <summary>
 Return results if 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIGallery.DTISlideGallery">
      <summary>
 base media gallery with built-in support for Highslide dialogs
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIGallery.DTISlideGallery.SlideGalleryAjaxWorker">
      <summary>
 Ajax worker class
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTISlideGallery.IsInnerFrame">
      <summary>
 Sets to true if the gallery is in a highslide frame.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIGallery.DTISlideGallery.IsOuterFrame">
      <summary>
 Sets to true if the gallery has a highslide frame in it.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIGallery.DTISocialGallery">
      <summary>
 media gallery with built-in editor for changing settings in-place. Available in DTIControls toolbox.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIGallery.DTIVideoGallery">
      <summary>
 A gallery of only videos.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIGallery.Gallery._AjaxSeverConrol1">
      <summary>
AjaxSeverConrol1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._pnlGalleryHolder">
      <summary>
pnlGalleryHolder control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._pnlSearch">
      <summary>
pnlSearch control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._freezePanel">
      <summary>
freezePanel control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._imgWait">
      <summary>
imgWait control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._pnlThumbHolder">
      <summary>
pnlThumbHolder control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._pnlUploadLinks">
      <summary>
pnlUploadLinks control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._Gallery_Button_Div">
      <summary>
Gallery_Button_Div control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._btnGalleryFirst">
      <summary>
btnGalleryFirst control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._btnGalleryBack">
      <summary>
btnGalleryBack control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._tbGalleryPage">
      <summary>
tbGalleryPage control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._lblSlash">
      <summary>
lblSlash control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._lblGalleryTotalPages">
      <summary>
lblGalleryTotalPages control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._btnGalleryPage">
      <summary>
btnGalleryPage control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._btnGalleryFwd">
      <summary>
btnGalleryFwd control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.Gallery._btnGalleryLast">
      <summary>
btnGalleryLast control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label1">
      <summary>
Label1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._tbItemsPerPage">
      <summary>
tbItemsPerPage control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label2">
      <summary>
Label2 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._tbGalleryWidth">
      <summary>
tbGalleryWidth control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label5">
      <summary>
Label5 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._tbGalleryHeight">
      <summary>
tbGalleryHeight control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label3">
      <summary>
Label3 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._tbThumbWidth">
      <summary>
tbThumbWidth control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label4">
      <summary>
Label4 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._tbThumbHeight">
      <summary>
tbThumbHeight control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label8">
      <summary>
Label8 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._tbSpanWidth">
      <summary>
tbSpanWidth control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label9">
      <summary>
Label9 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._tbSpanHeight">
      <summary>
tbSpanHeight control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label10">
      <summary>
Label10 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._cbFirstAndLast">
      <summary>
cbFirstAndLast control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label11">
      <summary>
Label11 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._cbPaging">
      <summary>
cbPaging control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label12">
      <summary>
Label12 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._cbSearching">
      <summary>
cbSearching control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label13">
      <summary>
Label13 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._cbUpload">
      <summary>
cbUpload control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label14">
      <summary>
Label14 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._cbShowThumbInfo">
      <summary>
cbShowThumbInfo control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label15">
      <summary>
Label15 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._cbShowPubDateOnThumbnail">
      <summary>
cbShowPubDateOnThumbnail control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label16">
      <summary>
Label16 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._cbShowAuthorOnThumbnail">
      <summary>
cbShowAuthorOnThumbnail control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label17">
      <summary>
Label17 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._cbShowRatingOnThumbnail">
      <summary>
cbShowRatingOnThumbnail control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label18">
      <summary>
Label18 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._cbShowPubDateOnCaption">
      <summary>
cbShowPubDateOnCaption control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label19">
      <summary>
Label19 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._cbShowAuthorOnCaption">
      <summary>
cbShowAuthorOnCaption control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label20">
      <summary>
Label20 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._cbShowRatingOnCaption">
      <summary>
cbShowRatingOnCaption control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label21">
      <summary>
Label21 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._cbShowSharingOnCaption">
      <summary>
cbShowSharingOnCaption control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label6">
      <summary>
Label6 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._Label7">
      <summary>
Label7 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._tbCompType">
      <summary>
tbCompType control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._hsUpload">
      <summary>
hsUpload control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.GalleryEditControl._btnSave">
      <summary>
btnSave control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.ThumbControl._lblThumb">
      <summary>
lblThumb control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.ThumbControl._phThumbControls">
      <summary>
phThumbControls control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.UploadMedia._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIGallery.UploadMedia._MediaUploader1">
      <summary>
MediaUploader1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIImageManager.dsImageManager.DTIImageManagerDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIImageManager.dsImageManager.DTIImageCategoriesDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIImageManager.dsImageManager.DTIImageManagerRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIImageManager.dsImageManager.DTIImageCategoriesRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIImageManager.dsImageManager.DTIImageManagerRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIImageManager.dsImageManager.DTIImageCategoriesRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIImageManager.dsMedaManagerTbl">
      <summary>
Represents a strongly typed in-memory cache of data.
</summary>
    </member>
    <member name="T:DTIImageManager.dsMedaManagerTbl.DTIMediaManagerDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIImageManager.dsMedaManagerTbl.DTIMediaManagerRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIImageManager.dsMedaManagerTbl.DTIMediaManagerRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="F:DTIImageManager.EditImageUserControl._pnlEdit">
      <summary>
pnlEdit control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIImageManager.EditImageUserControl._imgPreviewEdit">
      <summary>
imgPreviewEdit control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIImageManager.EditImageUserControl._lblSize">
      <summary>
lblSize control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.returnImage.format">
      <summary>
 Property to get the image format
 </summary>
      <returns>
 format returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.CroppedCoordinatesString">
      <summary>
 Property to get Cropped Coordinates
 </summary>
      <returns>
 Cropped Coordinates string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.CroppedX1">
      <summary>
 Property to get the Cropped X1 Coordinate
 </summary>
      <returns>
 Cropped X1 Coordinate string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.CroppedY1">
      <summary>
 Property to get the Cropped Y1 Coordinate
 </summary>
      <returns>
 Cropped Y1 Coordinate String returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.CroppedX2">
      <summary>
 Property to get the Cropped X2 Coordinate
 </summary>
      <returns>
 Cropped X2 Coordinate String returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.CroppedY2">
      <summary>
 Property to get the Cropped Y2 Coordinate
 </summary>
      <returns>
 Cropped Y2 Coordinate String returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.CroppedWidth">
      <summary>
 Property to get the Cropped Width
 </summary>
      <returns>
 Cropped Width String returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.CroppedHeight">
      <summary>
 Property to get the Cropped Height
 </summary>
      <returns>
 Cropped Height string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.bgOpacity">
      <summary>
 Property to get/set the opacity of outer image when cropping. Must be between 0 and 10
 </summary>
      <value>
 Integer passed to the set method
 Default Value: 6
 </value>
      <returns>
 bgOpacity integer returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.bgColor">
      <summary>
 Property to get/set the color of background container
 </summary>
      <value>
 String passed to the set method
 Default Value: "black"
 </value>
      <returns>
 bgColor string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.aspectRatio">
      <summary>
 Property to get/set the aspect ratio of w/h (e.g. 1 for square)
 </summary>
      <value>
 String passed to the set method
 Default Value: ""
 </value>
      <returns>
 aspectRatio string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.setSelect">
      <summary>
 Property to get/set an initial selection area
 </summary>
      <value>
 String passed to the set method
 Default Value: ""
 </value>
      <returns>
 setSelect string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.minSize">
      <summary>
 Property to get/set the minimum width/height (array [ w, h ]), use """" for unbounded dimension
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 minSize string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.maxSize">
      <summary>
 Property to get/set the maximum width/height (array [ w, h ]), use """" for unbounded dimension
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 maxSize string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageCropper.OnSelectFunctionName">
      <summary>
 Property to get/set the name of the JS function to handle the onSelect event
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 onSelectFunctionName string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIImageManager.ImageEditorControl">
      <summary>
 control to preview image, click to edit
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIImageManager.ImageEditorControl.save">
      <summary>
 Save any changes to the current image row.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIImageManager.ImageEditorControl.ImageRow">
      <summary>
 The datarow of the current image.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIImageManager.ImageManipulator">
      <summary>
 control to crop and rotate an image
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIImageManager.ImageThumb">
      <summary>
 simple control to display image with click-to-enlarge capability
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIImageManager.ImageUploaderControl">
      <summary>
 control to upload images to DTI-managed media library
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIImageManager.ManipulateImage._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIImageManager.ManipulateImage._ImageManipulator1">
      <summary>
ImageManipulator1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIImageManager.ViewImage">
      <summary>
ViewImage class.
</summary>
      <remarks>
Auto-generated class.
</remarks>
    </member>
    <member name="M:DTIImageManager.ViewImage.GenerateHash(System.String)">
      <summary>
 Generates a MD5 hash of a given password
 </summary>
      <param name="input">String to hash</param>
      <returns>MD5 hash of String</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIImageManager.ViewImage.getDimention(System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
 The height and width are output variables only. For request height use the 
 optioanl parameters reqHeight and reqwidth 
 For quick sizing use the sizeHeight string as the value as either a percentage 
 or S,M,L,XL,XXL for 100,150,225,500,100 pixle images 
 </summary>
      <param name="height">
      </param>
      <param name="width">
      </param>
      <param name="actualHeight">
      </param>
      <param name="actualwidth">
      </param>
      <param name="reqheight">
      </param>
      <param name="reqwidth">
      </param>
      <param name="maxheight">
      </param>
      <param name="maxwidth">
      </param>
      <param name="sizeHeight">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIMediaManager.dsMedia.DTIMediaManagerDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIMediaManager.dsMedia.DTIMediaTypesDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIMediaManager.dsMedia.DTIMediaManagerRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIMediaManager.dsMedia.DTIMediaTypesRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIMediaManager.dsMedia.DTIMediaManagerRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIMediaManager.dsMedia.DTIMediaTypesRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIMediaManager.DTIBasePage">
      <summary>
 Page object with DTI-managed media meta data
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIMediaManager.EditMediaControl">
      <summary>
 control to edit meta data of media objects
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIMediaManager.EditMediaItem._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.EditMediaItem._EditMediaControl1">
      <summary>
EditMediaControl1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.EditMediaItem._btnSave">
      <summary>
btnSave control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.EditMediaUserControl._lblDateAdded">
      <summary>
lblDateAdded control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.EditMediaUserControl._lblDateAddedValue">
      <summary>
lblDateAddedValue control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.EditMediaUserControl._tdTitle">
      <summary>
tdTitle control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.EditMediaUserControl._lblTitle">
      <summary>
lblTitle control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.EditMediaUserControl._tbTitle">
      <summary>
tbTitle control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.EditMediaUserControl._phContentEditor">
      <summary>
phContentEditor control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.EditMediaUserControl._lblDescription">
      <summary>
lblDescription control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.EditMediaUserControl._tbDesc">
      <summary>
tbDesc control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.EditMediaUserControl._Label1">
      <summary>
Label1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.EditMediaUserControl._tagger">
      <summary>
tagger control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIMediaManager.MediaInfo">
      <summary>
 simple control to display meta data of media objects
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIMediaManager.MediaRater">
      <summary>
 star rating control to rate DTI-managed media objects
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIMediaManager.MediaSearcher">
      <summary>
 control to navigate search of DTI-managed media objects.  Sorted by relevancy, submitted, or rating
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIMediaManager.MediaUploader">
      <summary>
 control to upload DTI-managed media objects
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIMediaManager.PreviewFiles">
      <summary>
PreviewFiles class.
</summary>
      <remarks>
Auto-generated class.
</remarks>
    </member>
    <member name="F:DTIMediaManager.PreviewFiles._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.PreviewFiles._phFilePreview">
      <summary>
phFilePreview control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMediaManager.PreviewFiles._btnSave">
      <summary>
btnSave control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIMediaManager.RatingHandler">
      <summary>
RatingHandler class.
</summary>
      <remarks>
Auto-generated class.
</remarks>
    </member>
    <member name="P:DTIMiniControls.AddThisControl.Username">
      <summary>
 Property to get/set the Username
 </summary>
      <value>
 Username string passed to the set method
 </value>
      <returns>
 Username string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.AddThisControl.TextInstruction">
      <summary>
 Property to get/set the Text Instruction
 </summary>
      <value>
 Text instruction string passed to the set method
 </value>
      <returns>
 Text instruction string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIMiniControls.postback">
      <summary>
postback class.
</summary>
      <remarks>
Auto-generated class.
</remarks>
    </member>
    <member name="M:DTIMiniControls.ClientButton.#ctor">
      <summary>
 Constructor for ClientButton class, sets default values for onclick and value
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ClientButton.Text">
      <summary>
 Property to get/set Text for the button
 </summary>
      <value>
 Text string passed to the set method
 </value>
      <returns>
 Text string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ClientButton.OnClick">
      <summary>
 Property to get/set the On Click value for the button
 </summary>
      <value>
 Onclick string passed to the set method
 </value>
      <returns>
 Onclick string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.ContainerIdManual">
      <summary>
 Property to get/set the manual Container ID
 </summary>
      <value>
 ContainerIDManual string passed to the set method
 </value>
      <returns>
 ContainerIDManual string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.RotatorEnabled">
      <summary>
 Property to get/set whether or not the rotator is enabled
 </summary>
      <value>
 enabled boolean passed to the set method
 </value>
      <returns>
 enabled boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.random">
      <summary>
 Property to get/set whether or not the rotator randomizes slides
 </summary>
      <value>
 random boolean passed to the set method
 </value>
      <returns>
 random boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.Container">
      <summary>
 Property to get/set the Container
 </summary>
      <value>
 Webcontrol passed to the set method
 </value>
      <returns>
 container webcontrol returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.fx">
      <summary>
 Property to get/set the Sroll Right effects during transition
 </summary>
      <value>
 String passed to the set method
 Default Value: "scrollRight"
 </value>
      <returns>
 fx string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.timeout">
      <summary>
 Property to get/set the timeout between slide transition in milliseconds
 </summary>
      <value>
 Integer passed to the set method
 Default Value: 4000
 </value>
      <returns>
 timeout integer returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.continuous">
      <summary>
 Property to get/set the Continuous option which determines whether or not the next transition will start immediately
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: False
 </value>
      <returns>
 continuous boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.speed">
      <summary>
 Property to get/set the Speed of the transition
 </summary>
      <value>
 integer passed to the set method
 Default Value: 1000
 </value>
      <returns>
 speed integer returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.speedIn">
      <summary>
 Property to get/set the Speed of the 'in' transition
 </summary>
      <value>
 String passed to the set method
 Default Value: "null"
 </value>
      <returns>
 speedIn string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.speedOut">
      <summary>
 Property to get/set the Speed of the 'out' transition
 </summary>
      <value>
 String passed to the set method
 Default Value: "null"
 </value>
      <returns>
 speedOut string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.next">
      <summary>
 Property to get/set the Next ID selector for the element to use as a click trigger for the next slide
 </summary>
      <value>
 String passed to the set method
 Default Value: "null"
 </value>
      <returns>
 nextID string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.prev">
      <summary>
 Property to get/set the Prev ID selector for the element to use as a click trigger for the previous slide
 </summary>
      <value>
 String passed to the set method
 Default Value: "null"
 </value>
      <returns>
 prevID string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.easing">
      <summary>
 Property to get/set the Easing method for both in and out transitions
 </summary>
      <value>
 String passed to the set method
 Default Value: "null"
 </value>
      <returns>
 easing string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.easeIn">
      <summary>
 Property to get/set the Ease In for ""in"" transitions
 </summary>
      <value>
 String passed to the set method
 Default Value: "null"
 </value>
      <returns>
 easeIn string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.easeOut">
      <summary>
 Property to get/set the Ease Out for out transitions
 </summary>
      <value>
 String passed to the set method
 Default Value: "null"
 </value>
      <returns>
 easeOut string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.shuffle">
      <summary>
 Property to get/set the Shuffle coordinates for the shuffle animation
 </summary>
      <value>
 String passed to the set method
 Default Value: "null"
 </value>
      <returns>
 shuffle string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.pause">
      <summary>
 Property to get/set the Pause which enables/disables 'pause on hover'
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: False
 </value>
      <returns>
 pause boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.delay">
      <summary>
 Property to get/set the Delay in milliseconds for the first transition
 </summary>
      <value>
 Integer passed to the set method
 Default Value: 0
 </value>
      <returns>
 delay integer returned by the get method
 </returns>
      <remarks>
 Can be negative
 </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.nowrap">
      <summary>
 Property to get/set the No Wrap which enables/disables slideshow wrapping
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: False
 </value>
      <returns>
 nowrap boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.requeueTimeout">
      <summary>
 Property to get/set the Requeue Timeout in ms 
 </summary>
      <value>
 Integer passed to the set method
 Default Value: 0
 </value>
      <returns>
 requeueTimeout integer returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.DivRotator.onPrevNextEvent">
      <summary>
 callback fn for prev/next events: function(isNext, zeroBasedSlideIndex, slideElement)  
 </summary>
      <value>
 string passed to the set method
 </value>
      <returns>
 onPrevNextEvent string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.FreezeIt.UseInnerWidthAndHeight">
      <summary>
 Property to get/set UseInnerWidthAndHeight
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: 
 </value>
      <returns>
 useInnerWidthAndHeight boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.FreezeIt.DisplayOnAnyPostback">
      <summary>
 Property to get/set DisplayOnAnyPostback
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: 
 </value>
      <returns>
 displayOnAnyPostback boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.FreezeIt.BackgroundColor">
      <summary>
 Property to get/set BackgroundColor
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 bgColor string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.FreezeIt.BackgroundOpacity">
      <summary>
 Property to get/set BackgroundOpacity
 </summary>
      <value>
 Double passed to the set method
 Default Value: 
 </value>
      <returns>
 BackgroundOpacity double returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.FreezeIt.FreezeId">
      <summary>
 Property to get/set FreezeId
 </summary>
      <value>
 Double passed to the set method
 Default Value: 
 </value>
      <returns>
 freezeId double returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.FreezeIt.IsFrozen">
      <summary>
 Property to get/set IsFrozen
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: 
 </value>
      <returns>
 isFrozen boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.FreezeIt.UseCentering">
      <summary>
 Property to get/set UseCentering
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: 
 </value>
      <returns>
 useCenter boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.HiddenFieldEncoded.Base_Load(System.Object,System.EventArgs)">
      <summary>
      </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.HiddenFieldEncoded.ReferenceId">
      <summary>
 Reference ID
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 reference string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.EditLabel.EditLabelInclude.RegisterJs(System.Web.UI.Page@)">
      <summary>
 Registers javascript on a given page
 </summary>
      <param name="page">
 The page that the javascript is to be registered on
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.EditLabel.EditLabelInclude.#ctor(System.String,System.String)">
      <summary>
 Constructor for the EditLabel class
 </summary>
      <param name="type">
 String argument for the type
 </param>
      <param name="filename">
 String argument for the src filename
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.EditLabel.labelCssClass">
      <summary>
 Property to get/set the Label CSS Class, the class to apply to the label when displaying
 </summary>
      <value>
 String passed to the set method
 Default Value: ""
 </value>
      <returns>
 lblEditLabel.CssClass string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.EditLabel.textboxCssClass">
      <summary>
 Property to get/set the Text Box Class, the class to apply to the textbox when editing
 </summary>
      <value>
 String passed to the set method
 Default Value: ""
 </value>
      <returns>
 tbEditLabel.CssClass string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.EditLabel.LabelOnly">
      <summary>
 Property to get/set LabelOnly, when enabled will only render the label
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: False
 </value>
      <returns>
 labelOnly boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.EditLabel.Text">
      <summary>
 Property to get/set the Text of the control
 </summary>
      <value>
 string passed to the set method
 Default Value: "LabelText"
 </value>
      <returns>
 tbEditLabel.Text string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="E:DTIMiniControls.EditLabel.TextChanged">
      <summary>
 The Submit event.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.FreezeScreen.DisplayOnAnyPostback">
      <summary>
 Property to get/set DisplayOnAnyPostback
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: 
 </value>
      <returns>
 displayOnAnyPostback boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.FreezeScreen.DisplayOnPartialPostback">
      <summary>
 Property to get/set DisplayOnPartialPostback
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: 
 </value>
      <returns>
 displayOnPartialPostback boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.FreezeScreen.BackgroundColor">
      <summary>
 Property to get/set BackgroundColor
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 bgColor string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.FreezeScreen.BackgroundOpacity">
      <summary>
 Property to get/set BackgroundOpacity
 </summary>
      <value>
 Double passed to the set method
 Default Value: 
 </value>
      <returns>
 opacity double returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.HTMLList.addListItem(System.String,System.String,System.String)">
      <summary>
 Adds an HTML list item 
 </summary>
      <param name="text">
 Text string for the list item
 </param>
      <param name="className">
 Class name string for the list item
 </param>
      <param name="href">
 href string for the list item
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.HTMLList.addListItem(System.String,System.Boolean)">
      <summary>
 Adds a new HTML list item
 </summary>
      <param name="text">
 Text string for the list item
 </param>
      <param name="clickable">
 Boolean to designate clickability
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.HTMLList.addListItem(DTIMiniControls.HTMLListItem@)">
      <summary>
 Adds an HTML list item
 </summary>
      <param name="li">
 Reference to an HTMLListItem to be added to the list
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.HTMLList.addListItem(DTIMiniControls.HTMLList@)">
      <summary>
 Adds an HTML list
 </summary>
      <param name="ul">
 Reference to an HTML List
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.HTMLList.Count">
      <summary>
 Counts the number of controls
 </summary>
      <returns>
 Returns the count as an iteger
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.HTMLList.OrderList">
      <summary>
 Property to get/set OrderList
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: False
 </value>
      <returns>
 orderList boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.HTMLListItem.#ctor(System.String,System.String,System.String)">
      <summary>
 Constructor for HTMLList class
 </summary>
      <param name="_text">
 String for text
 </param>
      <param name="className">
 String for the class name
 </param>
      <param name="href">
 String for the href
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.HTMLListItem.#ctor(System.String,System.Boolean)">
      <summary>
 Constructor for HTMLList class
 </summary>
      <param name="text">
 String for text
 </param>
      <param name="clickable">
 Boolean to set clickability
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.HTMLListItem.#ctor">
      <summary>
 Constructor for HTMLList class
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.HTMLListItem.addItems(DTIMiniControls.HTMLListItem[]@)">
      <summary>
      </summary>
      <param name="items">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.HTMLListItem.Clickable">
      <summary>
 Property to get/set Clickability
 </summary>
      <value>
 Boolean passed to the set method
 </value>
      <returns>
 clickable boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.HTMLListItem.NavigateURL">
      <summary>
 Property to get/set NavigateURL
 </summary>
      <value>
 String passed to the set method
 </value>
      <returns>
 navigateURL string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.HTMLListItem.Text">
      <summary>
 Property to get/set Text
 </summary>
      <value>
 String passed to the set method
 </value>
      <returns>
 text string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIMiniControls.iframed">
      <summary>
iframed class.
</summary>
      <remarks>
Auto-generated class.
</remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.returnImage.format">
      <summary>
 Property to get the image format
 </summary>
      <returns>
 format returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.CroppedCoordinatesString">
      <summary>
 Property to get Cropped Coordinates
 </summary>
      <returns>
 Cropped Coordinates string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.CroppedX1">
      <summary>
 Property to get the Cropped X1 Coordinate
 </summary>
      <returns>
 Cropped X1 Coordinate string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.CroppedY1">
      <summary>
 Property to get the Cropped Y1 Coordinate
 </summary>
      <returns>
 Cropped Y1 Coordinate String returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.CroppedX2">
      <summary>
 Property to get the Cropped X2 Coordinate
 </summary>
      <returns>
 Cropped X2 Coordinate String returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.CroppedY2">
      <summary>
 Property to get the Cropped Y2 Coordinate
 </summary>
      <returns>
 Cropped Y2 Coordinate String returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.CroppedWidth">
      <summary>
 Property to get the Cropped Width
 </summary>
      <returns>
 Cropped Width String returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.CroppedHeight">
      <summary>
 Property to get the Cropped Height
 </summary>
      <returns>
 Cropped Height string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.bgOpacity">
      <summary>
 Property to get/set the opacity of outer image when cropping. Must be between 0 and 10
 </summary>
      <value>
 Integer passed to the set method
 Default Value: 6
 </value>
      <returns>
 bgOpacity integer returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.bgColor">
      <summary>
 Property to get/set the color of background container
 </summary>
      <value>
 String passed to the set method
 Default Value: "black"
 </value>
      <returns>
 bgColor string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.aspectRatio">
      <summary>
 Property to get/set the aspect ratio of w/h (e.g. 1 for square)
 </summary>
      <value>
 String passed to the set method
 Default Value: ""
 </value>
      <returns>
 aspectRatio string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.setSelect">
      <summary>
 Property to get/set an initial selection area
 </summary>
      <value>
 String passed to the set method
 Default Value: ""
 </value>
      <returns>
 setSelect string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.minSize">
      <summary>
 Property to get/set the minimum width/height (array [ w, h ]), use """" for unbounded dimension
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 minSize string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.maxSize">
      <summary>
 Property to get/set the maximum width/height (array [ w, h ]), use """" for unbounded dimension
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 maxSize string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ImageCropper.OnSelectFunctionName">
      <summary>
 Property to get/set the name of the JS function to handle the onSelect event
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 onSelectFunctionName string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.ObfuscateEmail.decodeFromBase64(System.String)">
      <summary>
 Decodes a given string from Base 64 encoding 
 </summary>
      <param name="value">
 String to be decoded
 </param>
      <returns>
 Decoded string
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.ObfuscateEmail.encodeToBase64(System.String)">
      <summary>
 Encodes a given string into Base 64
 </summary>
      <param name="value">
 String to be encoded
 </param>
      <returns>
 Encoded string
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ObfuscateEmail.Address">
      <summary>
 Property to get/set the email address to be sent to
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 address string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIMiniControls.Pager._postBackPageChanges">
      <summary>
 By default the page is reloaded with query String "page" set to the current page.
 If True a postback event is called and the pageChange event is raised.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIMiniControls.Pager._PagesToDisplay">
      <summary>
 Number of pages to display in pager.  Will always be an odd number
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.Pager.PageCount">
      <summary>
 Total number of pages
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.Pager.CurrentPage">
      <summary>
 Page currently being viewed
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.Pager.PagesToSkip">
      <summary>
 Number of pages from the current page the skip link skip to
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.RollOverImage.RollOverImageInclude.RegisterJs(System.Web.UI.Page@)">
      <summary>
      </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.RollOverImage.RollOverImageInclude.#ctor(System.String,System.String)">
      <summary>
 Constructor for the RollOverImage class
 </summary>
      <param name="type">
 Type of script
 </param>
      <param name="filename">
 Filename of script
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.RollOverImage.ImageRollOverUrl">
      <summary>
 Property to get/set the Image Roll Over URL
 </summary>
      <value>
 String passed to the set method
 Default Value: ""
 </value>
      <returns>
 imageRollOverUrl string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ScriptBlock.ScriptText">
      <summary>
 Property to get/set the text of the script
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 Text string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ScriptBlock.Language">
      <summary>
 Property to get/set the language
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 language string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ScriptBlock.TypeAttr">
      <summary>
 Property to get/set the attribute type
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 type string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.Sortable.DataBind">
      <summary>
 Binds a data source to the invoked server control and all its child controls.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.Sortable.addSortableItem(DTIMiniControls.SortableItem@)">
      <summary>
 Adds Item to end of control collection
 </summary>
      <param name="SortItem">DTIMiniControls.SortableItem to add to end of collection</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.Sortable.addSortableItem(System.String)">
      <summary>
 Adds Item to end of control collection
 </summary>
      <param name="SortItem">System.String to add to end of collection</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.Sortable.addSortableItem(System.Web.UI.Control)">
      <summary>
 Adds Item to end of control collection
 </summary>
      <param name="SortItem">System.Web.UI.Control to add to end of collection</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.Sortable.addSortableItem(System.String,System.String)">
      <summary>
 Adds Item to end of control collection
 </summary>
      <param name="SortItem">System.String to add to end of collection</param>
      <param name="ContainerID">System.String Id of parent Panel</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.Sortable.addSortableItem(System.Web.UI.Control,System.String)">
      <summary>
 Adds Item to end of control collection
 </summary>
      <param name="SortItem">System.Web.UI.Control to add to end of collection</param>
      <param name="ContainerID">System.String Id of parent Panel</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.Sortable.getNewOrderList">
      <summary>
 Gets the array of re-ordered panel ID's
 </summary>
      <returns>
 A System.String array of the Panel IDs after re-ordering
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.Sortable.getOriginalOrderList">
      <summary>
 Gets the array of panel ID's before re-ording
 </summary>
      <returns>
 A System.String array of the Panel IDs before re-ordering
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.Sortable.AdminOn">
      <summary>
 Determines is Sortable can be reordered
 </summary>
    </member>
    <member name="P:DTIMiniControls.Sortable.AxisRestriction">
      <summary>
 Restricts Items to being moved only vertically (restrict y) or horizantlly (restrict x)
 </summary>
    </member>
    <member name="P:DTIMiniControls.Sortable.ConnectByClass">
      <summary>
 connects multiple sortables by the same classname,
 Items can be moved between sortables
 </summary>
    </member>
    <member name="P:DTIMiniControls.Sortable.ConnectToID">
      <summary>
 Connects sortable to another specific sortable based on its ID
 so items can be moved between sortables
 </summary>
    </member>
    <member name="P:DTIMiniControls.Sortable.PlaceHolderClass">
      <summary>
 Class name for showing where an item can be placed while sorting
 </summary>
    </member>
    <member name="P:DTIMiniControls.Sortable.CursorType">
      <summary>
 Determines what the cursor looks like while moving items
 </summary>
    </member>
    <member name="P:DTIMiniControls.Sortable.CursorPosition">
      <summary>
 determines where in the item the cursor is located when moving
 </summary>
    </member>
    <member name="P:DTIMiniControls.Sortable.CursorPositionValue">
      <summary>
 Gets or Sets the offset value of the CursorPosition Property
 </summary>
    </member>
    <member name="P:DTIMiniControls.Sortable.DragOnEmpty">
      <summary>
 Whether or not items can be put into sortable once it is empty
 </summary>
    </member>
    <member name="P:DTIMiniControls.Sortable.HelperType">
      <summary>
 Gets or sets the type of object moved, actual or a copy
 </summary>
    </member>
    <member name="P:DTIMiniControls.Sortable.AutoPostBack">
      <summary>
 Gets or sets a value indicating whether a postback to the server 
 automatically occurs when the user changes the order of the list.
 </summary>
    </member>
    <member name="P:DTIMiniControls.Sortable.DataSource">
      <summary>
 Gets or sets the DataTable or DataView from which the data-bound control retrieves its list of data items.
 </summary>
      <value>System.Object that represents the data source from which the data-bound control retrieves its data. 
 The default is Nothing.</value>
      <remarks>Only System.DataTable or System.DataView will produce a valid DataSource</remarks>
    </member>
    <member name="P:DTIMiniControls.Sortable.DataValueField">
      <summary>
 Gets or sets the field of the data source that provides the control ID of each list item
 </summary>
      <value>System.String that specifies the field of the data source that provides the value 
 of each list item. The default is String.Empty.</value>
    </member>
    <member name="P:DTIMiniControls.Sortable.DataTextField">
      <summary>
 Gets or sets the field of the data source that provides the text content of the list items.
 </summary>
      <value>System.String that specifies the field of the data source that provides the text 
 of each list item. The default is String.Empty.</value>
    </member>
    <member name="P:DTIMiniControls.Sortable.DataSortField">
      <summary>
 Gets or sets the field of the data source that provides the order of the list items.
 </summary>
      <value>System.String that specifies the field of the data source that provides the order 
 of each list item. The default is String.Empty.</value>
    </member>
    <member name="P:DTIMiniControls.Sortable.isOrderChanged">
      <summary>
 Gets a value indicating whether the control has be re-ordered
 </summary>
      <value>Sytem.Boolean true if list has be re-ordered; otherwise false</value>
    </member>
    <member name="E:DTIMiniControls.Sortable.ItemReOrdered">
      <summary>
 Occurs when a control has been re-ordered
 </summary>
      <param name="item">DTIMiniControls.SortableItem that has been re-ordered</param>
      <param name="newIndex">System.Integer 0 based index of new position</param>
      <remarks>
      </remarks>
    </member>
    <member name="E:DTIMiniControls.Sortable.DataBound">
      <summary>
 Occurs when a control is bound to a datasource
 </summary>
      <param name="item">DTIMiniControls.SortableItem that is being bound</param>
      <remarks>
      </remarks>
    </member>
    <member name="E:DTIMiniControls.Sortable.OrderChanged">
      <summary>
 Occurs after all items have been successfully re-ordered
 </summary>
      <param name="newOrder">System.String() order of panel ids after being re-ordered</param>
      <param name="oldOrder">System.String() order of panel ids before being re-ordered</param>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIMiniControls.SortableItem">
      <summary>
      </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.SortableItem.#ctor(System.String,System.Web.UI.Control@)">
      <summary>
 Initializes a new instance of the SortableItem class.
 </summary>
      <param name="ParentPanelID">System.String ID of parent panel</param>
      <param name="SortableControl">System.Web.UI.Control to be sorted</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.SortableItem.#ctor(System.String,System.Web.UI.ControlCollection@)">
      <summary>
 Initializes a new instance of the SortableItem class.
 </summary>
      <param name="ParentPanelID">System.String ID of parent panel</param>
      <param name="SortableControls">System.Web.UI.ControlCollection to be sorted</param>
      <remarks>All of the Controls in SortableControls will be as one SortableItem</remarks>
    </member>
    <member name="P:DTIMiniControls.SortableItem.Value">
      <summary>
 Gets the PanelID or the Databound value
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.SortableItem.PanelID">
      <summary>
 Gets the ID of the Parent Panel
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.SortableItem.Text">
      <summary>
 Gets text of sortable LiteralControl, its type, or its Databound text
 </summary>
      <value>
      </value>
      <returns>System.String of Literal Control or string representation of it type</returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.StarRater.CallbackFunction">
      <summary>
 Property to get/set the Callback Function
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 callback string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.StarRater.NumberOfStars">
      <summary>
 Property to get/set the number of stars
 </summary>
      <value>
 Integer passed to the set method
 Default Value: 
 </value>
      <returns>
 number_of_stars integer returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TabSlider.ConnectByClass">
      <summary>
 True to select the class rather than ID for the tabslider
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TabSlider.HandleCssClass">
      <summary>
 class of the element that will be your tab: an anchor
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TabSlider.TabLocation">
      <summary>
 side of screen where tab lives
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TabSlider.Action">
      <summary>
 action to trigger animation
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TabSlider.Speed">
      <summary>
 speed of animation in ms
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TabSlider.ImageUrl">
      <summary>
 path to the image for the tab
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TabSlider.ImageHeight">
      <summary>
 height of tab image
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TabSlider.ImageWidth">
      <summary>
 width of tab image
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TabSlider.TopPosition">
      <summary>
 position from the top. use if tabLocation is left or right
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TabSlider.LeftPosition">
      <summary>
 position from left. use if tabLocation is bottom or top
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TabSlider.FixedScrollPosition">
      <summary>
 true makes it stick(fixed position) on scroll
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TabSlider.OnLoadSlideOut">
      <summary>
 True makes the tab slide out after loading
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.Tagger.TaggerInclude.RegisterJs(System.Web.UI.Page@)">
      <summary>
 Registers javascript on a given page
 </summary>
      <param name="page">
 The page that the javascript is to be registered on
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.Tagger.ShowSubmit">
      <summary>
 Property to get/set the Show Submit toggle
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: 
 </value>
      <returns>
 ShowSubmit boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.Tagger.AddTagText">
      <summary>
 Property to get/set the tag text to be added
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 AddTagText string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.Tagger.CurrentTagText">
      <summary>
 Property to get/set the Current Tag Text
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 CurrentTagText string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.Tagger.SeparatorCharacter">
      <summary>
 Property to get/set the Separator Character
 </summary>
      <value>
 String passed to the set method
 Default Value: 
 </value>
      <returns>
 SeparatorCharacter string returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.Tagger.ShowPopularTags">
      <summary>
 Property to get/set whether or not Popular Tags is shown.
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: 
 </value>
      <returns>
 ShowPopularTags boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.Tagger.popularTagsSet">
      <summary>
 Property to set the list of popular tags
 </summary>
      <value>
 String List passed to the set method
 Default Value: 
 </value>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.Tagger.currentTagsList">
      <summary>
 Property to get/set the list of current tags
 </summary>
      <value>
 String List passed to the set method
 Default Value: 
 </value>
      <returns>
 String list returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.Tagger.ValidateOnFormSubmit">
      <summary>
 Property to get/set whether or not the form will be validated on submit
 </summary>
      <value>
 Boolean passed to the set method
 Default Value: 
 </value>
      <returns>
 ValidateOnFormSubmit boolean returned by the get method
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIMiniControls.TagsUC._lblCurrTags">
      <summary>
lblCurrTags control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMiniControls.TagsUC._DTICurrTags">
      <summary>
DTICurrTags control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMiniControls.TagsUC._hfTags">
      <summary>
hfTags control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMiniControls.TagsUC._DTIPopularTagHolder">
      <summary>
DTIPopularTagHolder control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMiniControls.TagsUC._lblPopularTags">
      <summary>
lblPopularTags control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMiniControls.TagsUC._DTIPopularTags">
      <summary>
DTIPopularTags control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMiniControls.TagsUC._lblAddTags">
      <summary>
lblAddTags control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMiniControls.TagsUC._tbNewTags">
      <summary>
tbNewTags control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMiniControls.TagsUC._btnAdd">
      <summary>
btnAdd control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIMiniControls.TagsUC._btnSubmit">
      <summary>
btnSubmit control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="M:DTIMiniControls.TextBoxEncoded.decodeFromURL(System.String)">
      <summary>
 Decodes a given string from URL encoding 
 </summary>
      <param name="value">
 String to be decoded
 </param>
      <returns>
 Decoded string
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.TextBoxEncoded.encodeToURLString(System.String)">
      <summary>
 Encodes a given string into  string
 </summary>
      <param name="value">
 String to be encoded
 </param>
      <returns>
 Encoded string
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.Text">
      <summary>
 Text inside the html element the causes the tootip to show
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.Title">
      <summary>
  displayed in the top of the tooltip
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.TargetControlID">
      <summary>
      </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.href">
      <summary>
 if content is local this will make the link usable as well as displaying a 
 tooltip.  If it is an iframe (ie not local) it contains the page to display
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.Sticky">
      <summary>
 keep visible until manually closed
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.ZIndexToolTip">
      <summary>
 Sets the z-index style property of the clueTip
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.PositionTooltip">
      <summary>
 Sets the type of positioning.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Available options are 'auto', 'mouse', 'bottomTop', 'fixed'. 
 Change to 'mouse' if you want to override positioning by element and position the 
 clueTip based on where the mouse is instead. Change to 'bottomTop' if you want 
 positioning to begin below the mouse when there is room or above if not -- rather than 
 right or left of the elemnent and flush with element's top Change to 'fixed' if you 
 want the clueTip to appear in exactly the same location relative to the linked element no 
 matter where it appears on the page. Use 'fixed' at your own risk.
 </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.TopOffset">
      <summary>
 Number of px to offset clueTip from top of invoking element.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 For positionBy "auto", "mouse", and "bottomTop", the number will be added to the 
 clueTip's "top" value if the clueTip appears below the invoking element and subtracted 
 from it if the clueTip appears above. For positionBy "fixed", the number will always be 
 added to the "top" value, offsetting the clueTip from the top of the invoking element.
 </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.LeftOffset">
      <summary>
 Number of px to offset clueTip from left of invoking element.  
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 For positionBy "auto", "mouse", and "bottomTop", the number will be added to 
 clueTip's "left" value if the clueTip appears to the right of the invoking element 
 and subtracted if the clueTip appears to the left. For positionBy "fixed", the number 
 will always be added to the "left" value of the clueTip, offsetting it from the right 
 side of the invoking element.
 </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.MouseOutClose">
      <summary>
 close when clueTip is moused out
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.ClickThrough">
      <summary>
      </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.Local">
      <summary>
 Whether to use content from the same page for the clueTip's body or it is an iframe
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.HideLocal">
      <summary>
 If local option is set to true, this determines whether local content
 to be shown in clueTip should be hidden at its original location
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.ShowTitle">
      <summary>
 show title bar of the clueTip, even if title attribute not set
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.Width">
      <summary>
 The width of the clueTip only uses its value
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.Height">
      <summary>
 he height of the clueTip only uses its value
 Setting a specific height also sets the tootip to "overflow:auto"
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.HtmlTag">
      <summary>
 type of tag the invoking element is
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.ClosePosition">
      <summary>
 location of close text for sticky cluetips; can be 'top' or 'bottom' or 'title'
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.CloseText">
      <summary>
 text (or HTML) to to be clicked to close sticky clueTips
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.CssTheme">
      <summary>
 class added to outermost clueTip div in the form of 'cluetip-' + clueTipClass.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 this is also used for a "directional" class on the same div, depending on where 
 the clueTip is in relation to the invoking element. The class appears in the form 
 of 'cluetip-' + direction + cluetipClass. this allows you to create your own clueTip 
 theme in a separate CSS file or use one of the three pre-packaged 
 themes: default, jtip, or rounded.
 </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.Arrows">
      <summary>
 if true, displays arrow on appropriate side of clueTip.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 this option displays a div containing an arrow background image. Arrow images are set 
 using the background-image property in the CSS. The direction of the arrow changes depending 
 on which side of the invoking element the clueTip appears. The arrows option sets the 
 background-position of the cluetip div so that the arrow will accurately point to the invoking 
 element, regardless of where it appears in relation to it.
 </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.DropShadow">
      <summary>
 set to false if you don't want the drop-shadow effect on the clueTip
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.DropShadowSteps">
      <summary>
 adjusts the size of the drop shadow
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.Activation">
      <summary>
 set to 'click' to force user to click to show clueTip
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.DelayedClose">
      <summary>
 close clueTip on a timed delay (experimental)
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.Truncate">
      <summary>
 number of characters to truncate clueTip's contents. if 0, no truncation occurs
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.OpenEffect">
      <summary>
 can be 'show' or 'slideDown' or 'fadeIn'
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.OpenSpeed">
      <summary>
 how fast the tootip opens in ms
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.HoverClass">
      <summary>
 class applied to the invoking element onmouseover and removed onmouseout
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.MouseTracking">
      <summary>
 if true, clueTip will track mouse movement (experimental)
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.onActivate">
      <summary>
 function to run just before clueTip is shown.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.ToolTip.onShow">
      <summary>
 function to run just after clueTip is shown.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIMiniControls.TreeList.addCustomContextMenu(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
 Adds a custom context menu item to the tree
 </summary>
      <param name="label">Visible text of menu</param>
      <param name="icon">you can set this to a classname or a path to an icon like ./myimage.gif or empty string</param>
      <param name="visibleFunction">javascript to call to determine items visibility  return 0 or 1, If empty returns true
 <example>function (node, tree) {if(tree.parent(node) != -1){return 1;}else{return 0;}} only shows up for children</example></param>
      <param name="actionFunction">javascritpt to call when clicked function (NODE, TREE_OBJ)</param>
      <param name="separatorBefore">display separation line above item</param>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.MultiSelection">
      <summary>
 This controls multiple selection. Can be either false - multiple 
 selection is off, "ctrl" - multiple selection is on when the Ctrl 
 key is held down or "on" - multiple selection is always on.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.MultiTreeEnabled">
      <summary>
 If set to true all trees can have drop to this tree.
 If specific trees are desired use MultiTreeString
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.MultiTreeString">
      <summary>
 will accept from any tree or javascript Array - a javascript 
 array of strings, each one representing the ID of the container
 of a tree to accept from
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.CheckChildren">
      <summary>
 Propagates check to children
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.ShowContextMenu">
      <summary>
 Sets the visiblility of the context menu
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.ValidChildren">
      <summary>
 Types of nodes allowed as root nodes.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>Can be an Array of string values (one for each allowed type), 
 if set to String "all", nodes of any type can be root nodes.</remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.MaxChildDepth">
      <summary>
 Gets/Sets the maximum number of children a node can have.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.MaxChildDepthDefaultType">
      <summary>
 Gets/Sets the maximum number of children a default node can have.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.MaxDepth">
      <summary>
 Gets/Sets the maximum depth of the tree.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.MaxDepthDefaultType">
      <summary>
 Gets/Sets the maximum depth of a default node.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.ReadModeOnly">
      <summary>
 set to false if you want postback events on the tree
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.Drag_Copy">
      <summary>
 controls how to copy when dragging
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.No_Int_Copy">
      <summary>
 true disables copying within the same tree
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.AutoInsertOnDrop">
      <summary>
 True automatcally creates the node after after dropping it in
 another tree.  False and the node would have to be created manually
 in the ondrop callback
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.OnLoadCallBack">
      <summary>
 Javascript to fire when a tree is loaded
 <code><example>
 function(TREE_OBJ) { }
 </example></code></summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>Triggered when the tree is loaded with data for the first time or refreshed. 
 Receives one parameter - a reference to the tree instance.</remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.OnMoveCallBack">
      <summary>
 Javascript to fire when a node is moved
 <code><example>
 function(NODE, REF_NODE, TYPE, TREE_OBJ, RB) { }
 </example></code></summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>Receives five parameters - the node that was moved, the reference node in the move, 
 the new position relative to the reference node (one of "before", "after" or "inside"), 
 a reference to the tree instance and a rollback object that you can use with 
 jQuery.tree.rollback.</remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.OnSelectCallBack">
      <summary>
 Javascript to fire when a node is selected
 <code><example>
 function(NODE, TREE_OBJ) { }
 </example></code></summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>Receives two parameters - the selected node and a reference to the tree instance.</remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.OnCopyCallBack">
      <summary>
 Javascript to fire when a node is Copied
 <code><example>
 function(NODE, REF_NODE, TYPE, TREE_OBJ, RB) { }
 </example></code></summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>Receives five parameters - the node that was copied, the reference node in the copy, 
 the new position relative to the reference node (one of "before", "after" or "inside"), 
 a reference to the tree instance and a rollback object that you can use with 
 jQuery.tree.rollback.</remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.OnDropCallBack">
      <summary>
 Javascript to fire when a node is Droped
 <code><example>
 function(NODE, REF_NODE, TYPE, TREE_OBJ) { }
 </example></code></summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>Receives four parameters - the foreign node that was dropped, 
 the reference node in the move, the new position relative to the reference 
 node (one of "before", "after" or "inside") and a reference to 
 the tree instance.</remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.OnCreateCallBack">
      <summary>
 Javascript to fire when a node is created
 <code><example>
 function(NODE, REF_NODE, TYPE, TREE_OBJ, RB) { }
 </example></code></summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>Receives five parameters - the node that was created, 
 the reference node in the create operation, the new position relative to the 
 reference node (one of "before", "after" or "inside"), a reference to the tree 
 instance and a rollback object that you can use with jQuery.tree.rollback.</remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.OnRenameCallBack">
      <summary>
 Javascript to fire when a node is renamed
 <code><example>
 function(NODE, TREE_OBJ, RB) { }
 </example></code></summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>Receives three parameters - the renamed node, 
 a reference to the tree instance and a rollback object that you can use 
 with jQuery.tree.rollback.</remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.OnSearchCallBack">
      <summary>
 Javascript to fire after a search is performed and results are ready
 <code><example>
 function(NODES, TREE_OBJ) { NODES.addClass("search"); }
 </example></code></summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>Receives two parameters - a jQuery collection of nodes matching the search 
 and a reference to the tree instance.</remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.BeforeMoveCallBack">
      <summary>
 Javascript to fire before a node is moved
 <code><example>
 function(NODE, REF_NODE, TYPE, TREE_OBJ) { return true }
 </example></code></summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>Receives four parameters - the node about to be moved, 
 the reference node in the move, the new position relative to the 
 reference node (one of "before", "after" or "inside") and a reference 
 to the tree instance. If false is returned the node is not moved.</remarks>
    </member>
    <member name="P:DTIMiniControls.TreeList.BeforeCreateCallBack">
      <summary>
 Javascript to fire before a node is created
 <code><example>
 function(NODE, REF_NODE, TYPE, TREE_OBJ) { return true }
 </example></code></summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>Receives four parameters - the node about to be created, 
 the reference node in the creation, the new position relative to 
 the reference node (one of "before", "after" or "inside") and a 
 reference to the tree instance. If false is returned the 
 node is not created.</remarks>
    </member>
    <member name="T:DTIServerControls.DTIServerBaseDesigner">
      <summary>
 Design time support class. 
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIServerControls.dsDTIControls">
      <summary>
Represents a strongly typed in-memory cache of data.
</summary>
    </member>
    <member name="T:DTIServerControls.dsDTIControls.DTIControlDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIServerControls.dsDTIControls.DTIControlPropertyDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIServerControls.dsDTIControls.DTIControlRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIServerControls.dsDTIControls.DTIControlPropertyRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIServerControls.dsDTIControls.DTIControlRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIServerControls.dsDTIControls.DTIControlPropertyRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIServerControls.DTIServerBase">
      <summary>
 Base class for datacentric controls. Adds data accessors and design-time support.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIServerControls.DTIServerBase.getDesignTimeHtml">
      <summary>
 Gets the html for rendering at design time.
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIServerControls.DTIServerBase.SetupHighslide">
      <summary>
 Creates a new highslide oject if one doesnot exist.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIServerControls.DTIServerBase.MyHighslideHeader">
      <summary>
 Creates and registers a highslide header control. 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIServerControls.DTIServerBase.Component_Type">
      <summary>
 Component type name used to group sql commands into a que.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIServerControls.DTIServerBase.Session">
      <summary>
 The session object that supports design time access.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIServerControls.DTIServerBase.DataSource">
      <summary>
 The optional data object 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIServerControls.DTIServerBase.UniquePerPage">
      <summary>
 If set true, the page name is automatically appended to the contentType.
 This allows you to add serverControls to a master page and have them associate with different data for each page.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIServerControls.DTIServerBase.contentType">
      <summary>
 The string identifier for a control instance. 
 This allong with the mainId forms a unique identifier for the object for the entire application.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="E:DTIServerControls.DTIServerBase.DataReady">
      <summary>
 Raised when the internal parallel data helper prepares a the data
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="E:DTIServerControls.DTIServerBase.typeFirstInitialized">
      <summary>
 Called once in an application context when this type is first initialized. Used for data setup etc.
 </summary>
      <param name="t">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="E:DTIServerControls.DTIServerBase.typeInitThisRequest">
      <summary>
 Called once per type per request. Usefull if many controls are on a page but a page event only needs to occure once.
 </summary>
      <param name="t">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIServerControls.DTIServerControl">
      <summary>
 Base class for DTIControls. Adds state awareness (read/write/layout) awareness as well as setup panel plugins to easily edit data.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIServerControls.DTIServerControl.class">
      <summary>
 just a rename of the property cssClass to make it easier to switch between static and dynamic objects
 </summary>
      <value>
 The class list.
 </value>
    </member>
    <member name="E:DTIServerControls.DTIServerControl.ModeChanged">
      <summary>
 Fired when a control goes from read mode to write or layout mode.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIServerControls.DTISharedVariables.Session">
      <summary>
 A subclassed session state to provide design time support for any property that uses session.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIServerControls.DTISharedVariables.MasterMainId">
      <summary>
 The default mainID. 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIServerControls.DTISharedVariables.siteEditMainID">
      <summary>
 The LanguageID that the current administrator has edit access to.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIServerControls.DTISharedVariables.siteEditLanguageId">
      <summary>
 The Default Language id
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIServerControls.DTISharedVariables.MasterLanguageId">
      <summary>
 The Default Language id
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIServerControls.DTISharedVariables.UploadFolderDefault">
      <summary>
 Default upload folder. The webserver must have write access to this folder. 
 </summary>
      <value>"/uploads/"</value>
      <returns>The currently selected upload folder.</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIServerControls.PropertyCreator.GetType(System.Type,System.String)">
      <summary> 
 Gets the Type of the given property of the given targetType. 
 The targetType and propertyName parameters can't be null. 
 </summary>
      <param name="targetType">the target type which contains the property</param>
      <param name="propertyName">the property to get, can be a property on a nested object (eg. "Child.Name")</param>
    </member>
    <member name="M:DTIServerControls.PropertyCreator.GetValue(System.Object,System.String)">
      <summary> 
 Gets the value of the given property of the given target. 
 If objects within the property hierarchy are null references, null will be returned. 
 The target and propertyName parameters can't be null. 
 </summary>
      <param name="target">the target object to get the value from</param>
      <param name="propertyName">the property to get, can be a property on a nested object (eg. "Child.Name")</param>
    </member>
    <member name="M:DTIServerControls.PropertyCreator.SetValue(System.Object,System.String,System.Object)">
      <summary> 
 Sets the value of the given property on the given target to the given value. 
 If objects within the property hierarchy are null references, an attempt will be 
 made to construct a new instance through a parameterless constructor. 
 The target and propertyName parameters can't be null. 
 </summary>
      <param name="target">the target object to set the value on</param>
      <param name="propertyName">the property to set, can be a property on a nested object (eg. "Child.Name")</param>
      <param name="value">the new value of the property</param>
    </member>
    <member name="M:DTIServerControls.PropertyCreator.GetPropertyNameString(System.String[],System.Int32)">
      <summary> 
 Returns a string containing the properties in the propertyList up to the given 
 level, separated by dots. 
 For the propertyList { "Zero", "One", "Two" } and level 1, the string 
 "Zero.One" will be returned. 
 </summary>
      <param name="propertyList">the array containing the properties in the corect order</param>
      <param name="level">the level up to wich to include the properties in the returned string</param>
      <returns>a dot-separated string containing the properties up to the given level</returns>
    </member>
    <member name="M:DTIServerControls.PropertyCreator.GetTypeImpl(System.Type,System.String)">
      <summary> 
 Returns the type of the given property on the target instance. 
 The type and propertyName parameters can't be null. 
 </summary>
      <param name="targetType">the type of the target instance</param>
      <param name="propertyName">the property to retrieve the type for</param>
      <returns>the typr of the given property on the target type</returns>
    </member>
    <member name="M:DTIServerControls.PropertyCreator.GetValueImpl(System.Object,System.String)">
      <summary> 
 Returns the value of the given property on the target instance. 
 The target instance and propertyName parameters can't be null. 
 </summary>
      <param name="target">the instance on which to get the value</param>
      <param name="propertyName">the property for which to get the value</param>
      <returns>the value of the given property on the target instance</returns>
    </member>
    <member name="M:DTIServerControls.PropertyCreator.SetValueImpl(System.Object,System.String,System.Object)">
      <summary> 
 Sets the given property of the target instance to the given value. 
 Type mismatches in the parameters of these methods will result in an exception. 
 Also, the target instance and propertyName parameters can't be null. 
 </summary>
      <param name="target">the instance to set the value on</param>
      <param name="propertyName">the property to set the value on</param>
      <param name="value">the value to set on the target</param>
    </member>
    <member name="M:DTIServerControls.PropertyCreator.GetPropertyInfo(System.Type,System.String)">
      <summary> 
 Obtains the PropertyInfo for the given propertyName of the given type from the cache. 
 If it is not already in the cache, the PropertyInfo will be looked up and added to 
 the cache. 
 </summary>
      <param name="type">the type to resolve the property on</param>
      <param name="propertyName">the name of the property to return the PropertyInfo for</param>
      <returns>
      </returns>
    </member>
    <member name="M:DTIServerControls.PropertyCreator.GetBestMatchingProperty(System.String,System.Type)">
      <summary> 
 Gets the best matching property info for the given name on the given type if the same property is defined on 
 multiple levels in the object hierarchy. 
 </summary>
    </member>
    <member name="M:DTIServerControls.PropertyCreator.CalculateDistance(System.Type,System.Type)">
      <summary> 
 Calculates the hierarchy levels between two classes. 
 If the targetObjectType is the same as the baseType, the returned distance will be 0. 
 If the two types do not belong to the same hierarchy, -1 will be returned. 
 </summary>
    </member>
    <member name="M:DTIServerControls.PropertyCreator.GetPropertyInfoCache(System.Type)">
      <summary> 
 Returns the PropertyInfoCache for the given type. 
 If there isn't one available already, a new one will be created. 
 </summary>
      <param name="type">the type to retrieve the PropertyInfoCache for</param>
      <returns>the PropertyInfoCache for the given type</returns>
    </member>
    <member name="M:DTIServerControls.PropertyCreator.Construct(System.Type)">
      <summary> 
 Creates a new object of the given type, provided that the type has a default (parameterless) 
 constructor. If it does not have such a constructor, an exception will be thrown. 
 </summary>
      <param name="type">the type of the object to construct</param>
      <returns>a new instance of the given type</returns>
    </member>
    <member name="T:DTIServerControls.PropertyInfoCache">
      <summary> 
 Keeps a mapping between a string and a PropertyInfo instance. 
 Simply wraps an IDictionary and exposes the relevant operations. 
 Putting all this in a separate class makes the calling code more 
 readable. 
 </summary>
    </member>
    <member name="T:DTISortable.DTIRecycleBin">
      <summary>
 Contained in the admin panel, this displays deleted elements from a page. 
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTISortable.DTIRecycleBin.Save(System.Boolean,System.Boolean)">
      <summary>
 Saves the Order of the Current List's Items
 </summary>
      <param name="forceRedirect">Forces redirect on Pre-render</param>
      <param name="SaveData">Push Data Changes to Database on Pre-render</param>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTIRecycleBin.LayoutOnAll">
      <summary>
 Enables Layout mode for all sortables, Menu's and recyclebins
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTIRecycleBin.LayoutOn">
      <summary>
 Enables Sortable Mode for this sortable
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTISortable.DTIWidgetMenu">
      <summary>
 Menu used in admin panel to add dynamic elements to sortable.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTISortable.DTIWidgetMenu.save(System.Web.UI.Page@)">
      <summary>
      </summary>
      <param name="pg">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTIWidgetMenu.LayoutOnAll">
      <summary>
 Enables Layout mode for all sortables, Menu's and recyclebins
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTIWidgetMenu.LayoutOn">
      <summary>
 Enables Sortable Mode for this sortable
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTISortable.dsDTISortable">
      <summary>
Represents a strongly typed in-memory cache of data.
</summary>
    </member>
    <member name="T:DTISortable.dsDTISortable.DTISortableDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTISortable.dsDTISortable.DTISortableItemDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTISortable.dsDTISortable.WidgetMenuTempDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTISortable.dsDTISortable.DTISortableRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTISortable.dsDTISortable.DTISortableItemRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTISortable.dsDTISortable.WidgetMenuTempRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTISortable.dsDTISortable.DTISortableRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTISortable.dsDTISortable.DTISortableItemRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTISortable.dsDTISortable.WidgetMenuTempRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTISortable.DTISortable">
      <summary>
 A data-drive sortable panel. Data is saved in the database and dynamic elements are addable from an admin panel.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTISortable.DTISortable.Save(System.Boolean,System.Boolean)">
      <summary>
 Saves the Order of the Current List's Items
 </summary>
      <param name="forceRedirect">Forces redirect on Pre-render</param>
      <param name="SaveData">Push Data Changes to Database on Pre-render</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTISortable.DTISortable.saveAll(System.Web.UI.Page@)">
      <summary>
 Spider's page for all DTISortableControls and calls their respective save method
 </summary>
      <param name="pg">Page to Spider</param>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.sotableServerTempList">
      <summary>
 Hashtable that Holds Sortables added directly to the page
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.sotableServerTempList2">
      <summary>
 Holds Sortables added directly to the page
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.isRecyclable">
      <summary>
 Enables Layout mode for all sortables, Menu's and recyclebins
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.LayoutOnAll">
      <summary>
 Enables sortable mode for all sortables, Menu's and recyclebins
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.LayoutOn">
      <summary>
 Enables Sortable Mode for this sortable
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.AxisRestriction">
      <summary>
 Restricts the axis to one particular direction x or y
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.ConnectByClass">
      <summary>
 Enables drag and drop to sortables with the same class name
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.ConnectedCSS">
      <summary>
 Class name by which multible sortables are connected
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.ConnectToID">
      <summary>
 Connects one sortable to another specificed by its id
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.PlaceHolderClass">
      <summary>
 Class name for the Placeholder (Shows were sortable item can be dropped)
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.CursorType">
      <summary>
 Type of curser when moving sortable
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.CursorPosition">
      <summary>
 Changes where the cursor is located on a sortable item when it is being moved
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.CursorPositionValue">
      <summary>
 Offset of the cursor position
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.NoDragOnEmpty">
      <summary>
 Disables dragging to an empty list
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.HelperType">
      <summary>
 Original if the item is to be moved and clone if it is to be coppied when moving
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.HandleText">
      <summary>
 Text that goes into the handle of the sortable
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.HandleSelector">
      <summary>
 Class name, id, or html tag of the handle
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.ZIndex">
      <summary>
 specifies the stack order of an item
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.cssTheme">
      <summary>
 Changes the css name so they can be overridden
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.DeleteText">
      <summary>
 Display text to delete any sortable
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.OuterStyle">
      <summary>
 Out line style of the sortable when in sorting mode
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.AutoAddEditPanel">
      <summary>
 Determines if an EditPanel is automatically added to an empty sortable.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.AutoWrapInEditPanel">
      <summary>
 If sortable contains only literal controls They will be wrapped in a single edit panel otherwise
 they are wrapped in ASP panels objects
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTISortable.DTISortable.ItemsClassName">
      <summary>
 Adds a class name to each item within a sortable
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTITagManager.dsTagger">
      <summary>
Represents a strongly typed in-memory cache of data.
</summary>
    </member>
    <member name="T:DTITagManager.dsTagger.DTI_Content_TagsDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTITagManager.dsTagger.DTI_Content_Tag_PivotDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTITagManager.dsTagger.DTI_Content_TagsRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTITagManager.dsTagger.DTI_Content_Tag_PivotRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTITagManager.dsTagger.DTI_Content_TagsRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTITagManager.dsTagger.DTI_Content_Tag_PivotRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTITagManager.TagManager">
      <summary>
 Control for associating string tags with a particular data row
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIUploader.DTIUploaderControl">
      <summary>
 A control to handle file uploads.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIUploader.DTIUploaderUserControl">
      <summary>
DTIUploaderUserControl class.
</summary>
      <remarks>
Auto-generated class.
</remarks>
    </member>
    <member name="F:DTIUploader.DTIUploaderUserControl._fileSizeWarning">
      <summary>
fileSizeWarning control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.DTIUploaderUserControl._lblFileSizeWarning">
      <summary>
lblFileSizeWarning control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.DTIUploaderUserControl._FileSizeLimit">
      <summary>
FileSizeLimit control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.DTIUploaderUserControl._errorMessage">
      <summary>
errorMessage control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.DTIUploaderUserControl._pnlUploaderHolder">
      <summary>
pnlUploaderHolder control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.DTIUploaderUserControl._btnWeb">
      <summary>
btnWeb control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.DTIUploaderUserControl._btnToggleMode">
      <summary>
btnToggleMode control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIUploader.JavaFileUploader">
      <summary>
JavaFileUploader class.
</summary>
      <remarks>
Auto-generated class.
</remarks>
    </member>
    <member name="F:DTIUploader.JSFileUploader._uploaderContainer">
      <summary>
uploaderContainer control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.JSFileUploader._uploaderOverlay">
      <summary>
uploaderOverlay control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.JSFileUploader._selectFilesLink">
      <summary>
selectFilesLink control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.JSFileUploader._selectLink">
      <summary>
selectLink control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.JSFileUploader._dataTableContainer">
      <summary>
dataTableContainer control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.JSFileUploader._uploadLink">
      <summary>
uploadLink control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.JSFileUploader._clearLink">
      <summary>
clearLink control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.WebFileUploader._pnlFilesHolder">
      <summary>
pnlFilesHolder control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.WebFileUploader._Tagger1">
      <summary>
Tagger1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIUploader.WebFileUploader._btnUpload">
      <summary>
btnUpload control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIVideoManager.dsDTIVideo.DTIVideoManagerDataTable">
      <summary>
Represents the strongly named DataTable class.
</summary>
    </member>
    <member name="T:DTIVideoManager.dsDTIVideo.DTIVideoManagerRow">
      <summary>
Represents strongly named DataRow class.
</summary>
    </member>
    <member name="T:DTIVideoManager.dsDTIVideo.DTIVideoManagerRowChangeEvent">
      <summary>
Row event argument class
</summary>
    </member>
    <member name="T:DTIVideoManager.EditVideoControl">
      <summary>
 control to preview and edit title screenshot of an uploaded video
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.EditVideoControl.myEditor">
      <summary>
 The video preview control for this editor.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.EditVideoControl.VideoOutline">
      <summary>
 highslide scheme for the video pop-up (if used)
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.EditVideoControl.myVideoRow">
      <summary>
 Datarow of this video 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIVideoManager.ffmpegHelper">
      <summary>
 helper class to convert uploaded videos to Flash. Handles saving options, bitrates etc.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIVideoManager.ffmpegHelper.VideoToolExecuteType">
      <summary>
 The internal executable that is used to convert the video file.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIVideoManager.ffmpegHelper.convertToFLV(System.Web.HttpPostedFile,System.String,System.String)">
      <summary>
 Converts the video to a FLV file for streaming playback.
 </summary>
      <param name="myFile">
      </param>
      <param name="title">
      </param>
      <param name="description">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIVideoManager.ffmpegHelper.convertToFLV(System.String,System.String,System.String)">
      <summary>
 Converts the video to a FLV file for streaming playback.
 </summary>
      <param name="inputPath">
      </param>
      <param name="title">
      </param>
      <param name="description">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIVideoManager.ffmpegHelper.executeFfmpegCommand(System.String,System.Boolean,DTIVideoManager.ffmpegHelper.VideoToolExecuteType)">
      <summary>
 Executes a convertion command
 </summary>
      <param name="cmd">
      </param>
      <param name="grabVals">
      </param>
      <param name="exePath">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIVideoManager.ffmpegHelper.deleteVideo(System.Int32)">
      <summary>
 Deletes a video from the database.
 </summary>
      <param name="id">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIVideoManager.ffmpegHelper.updateScreenShot(System.Int32,System.Int32)">
      <summary>
 Updates the screenshot of a video row.
 </summary>
      <param name="id">
      </param>
      <param name="secondOffset">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIVideoManager.ffmpegHelper.updateScreenShot(DTIVideoManager.dsDTIVideo.DTIVideoManagerRow,System.Int32)">
      <summary>
 Updates the screenshot of a video row.
 </summary>
      <param name="videoRow">
      </param>
      <param name="secondOffset">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIVideoManager.ffmpegHelper.getByteArrayFromFile(System.String)">
      <summary>
 Gets the byte array of the input file
 </summary>
      <param name="path">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.ffmpegHelper.OutputFileNamingConvention">
      <summary>
 The start of the saved output file. default is "dtivid_"
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.ffmpegHelper.SaveVideoInDataBase">
      <summary>
 Save the video in the database vs the file system. this defaults to false.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.ffmpegHelper.OutputPath">
      <summary>
 The output path the video file is saved in.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.ffmpegHelper.ffmpegExePath">
      <summary>
 the path to the ffmpeg executable. By default it is extracted from the controll dll and saved to the temp path.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.ffmpegHelper.Flvtool2ExePath">
      <summary>
 the path to the Flvtool2 executable. By default it is extracted from the controll dll and saved to the temp path.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.ffmpegHelper.sqlhelper">
      <summary>
 the SQL helper used by this object. Set automatically if not specified.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.ffmpegHelper.videoSaveTable">
      <summary>
 The datatable Object that the video info is saved to. 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.ffmpegHelper.User_Id">
      <summary>
 A userID field. Optional.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.ffmpegHelper.bitrate">
      <summary>
 The bitrate the video is saved at.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.ffmpegHelper.otherArgs">
      <summary>
 Additional args of sent to the ffmpeg converter executable.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="E:DTIVideoManager.ffmpegHelper.conversionDone">
      <summary>
 Event raised once the video conversio is finished.
 </summary>
      <param name="video_id">
      </param>
      <param name="conversionTime">
      </param>
      <param name="errorLog">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIVideoManager.VideoBase">
      <summary>
 Base control for all video controls.  Contains info on how videos are stored
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoBase.MyFlashWrapper">
      <summary>
 Video conversion helper class, handles video file saving, converting etc. 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._JsonSeverConrol1">
      <summary>
JsonSeverConrol1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._checkConversionScript">
      <summary>
checkConversionScript control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._lblRawFile">
      <summary>
lblRawFile control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._lblRawFileValue">
      <summary>
lblRawFileValue control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._lblTime">
      <summary>
lblTime control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._lblTimeValue">
      <summary>
lblTimeValue control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._lblDimensions">
      <summary>
lblDimensions control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._lblDimensionsValue">
      <summary>
lblDimensionsValue control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._lblStatus">
      <summary>
lblStatus control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._lblStatusValue">
      <summary>
lblStatusValue control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._imgStatus">
      <summary>
imgStatus control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._pnlScreenshot">
      <summary>
pnlScreenshot control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._imgScreenshot">
      <summary>
imgScreenshot control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._videoHolder">
      <summary>
videoHolder control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._VideoThumb1">
      <summary>
VideoThumb1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._pnlScreenShotEditor">
      <summary>
pnlScreenShotEditor control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._changeThumbNailDiv">
      <summary>
changeThumbNailDiv control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._lblZero">
      <summary>
lblZero control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._lblMax">
      <summary>
lblMax control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoPreview._videoSlider">
      <summary>
videoSlider control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIVideoManager.VideoPreviewHelper">
      <summary>
 AJAX worker class to assist the video preview control in determining if the Flash conversion completed,
  or the title screenshot has changed
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIVideoManager.VideoPreviewHelper.resetThumbnail(System.Collections.Hashtable)">
      <summary>
 Fetches a new screenshot from the file.
 </summary>
      <param name="inputHash">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:DTIVideoManager.VideoPreviewHelper.checkConversion(System.String)">
      <summary>
 Check if video file was converted to flash.
 </summary>
      <param name="vid_id">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIVideoManager.VideoThumb">
      <summary>
 simple control that shows a clickable title screenshot of a video to expand and watch the movie
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoThumb.VideoId">
      <summary>
 id of the data row associated with the video file
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoThumb.ExpandURL">
      <summary>
 Inherited property, cannot be set directly.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoThumb.MaxThumbWidth">
      <summary>
 The maximum width of the thumbnail in pixels. If set it will keep the original aspect ratio.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoThumb.MaxThumbHeight">
      <summary>
 The maximum height of the thumbnail in pixels. If set it will keep the original aspect ratio.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoThumb.RefreshImage">
      <summary>
 Reload the image; Usefull after the thumbnail has changed.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoThumb.ThumbSize">
      <summary>
 The default max height and width in pixels.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoThumb.ThumbURL">
      <summary>
 Url of the thumbnail. This property can't be set manually.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoThumb.HighslideDisplayMode">
      <summary>
 Overrides hislide display modes
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoThumb.VideoWidth">
      <summary>
 The playback width in pixels of the playback pop-up.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoThumb.VideoHeight">
      <summary>
 The playback height in pixels of the playback pop-up.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIVideoManager.VideoUploader._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoUploader._VideoUploaderControl1">
      <summary>
VideoUploaderControl1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIVideoManager.VideoUploaderControl">
      <summary>
 control to upload videos to DTI-managed media library
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoUploaderControl.MyFlashWrapper">
      <summary>
 Video conversion helper class, handles video file saving, converting etc. 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="F:DTIVideoManager.VideoViewer._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="F:DTIVideoManager.VideoViewer._VideoViewerControl1">
      <summary>
VideoViewerControl1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:DTIVideoManager.VideoViewerControl">
      <summary>
 Control to render a streamable video and a playback controls to a page.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoViewerControl.videoPath">
      <summary>
 Path to the flash video file. 
 If not set it first defaults to: 
 1) the query string "vidFile" 
 2) the videoRow data. 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:DTIVideoManager.VideoViewerControl.screenShotPath">
      <summary>
 Path to the flash video screenshot file. 
 If not set it first defaults to: 
 1) the query string "vidscreenfile" 
 2) the videoRow data. 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIVideoManager.ViewMovie">
      <summary>
 HTTP handler for Flash movies for pseudo streaming
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:DTIVideoManager.ViewVideoScreenShot">
      <summary>
ViewVideoScreenShot class.
</summary>
      <remarks>
Auto-generated class.
</remarks>
    </member>
    <member name="F:DTIVideoManager.ViewVideoScreenShot._form1">
      <summary>
form1 control.
</summary>
      <remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
    </member>
    <member name="T:HighslideControls.HighslideHeaderControl">
      <summary>
 Control for inserting and managing Highslide javascript on a web page
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:HighslideControls.HighslideHeaderControl.addToPage(System.Web.UI.Page@)">
      <summary>
 Add a HighslideHeaderControl to the page given as an argument if there is not one already present.  Returns the resulting control.
 </summary>
      <param name="page">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:HighslideControls.HighslideHeaderControl.registerOverlay(HighslideControls.HighslideOverlay@)">
      <summary>
      </summary>
      <param name="overlay">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.HighslideVariables">
      <summary>
 Hashtable containing global highslide variables, see http://highslide.com/ref/
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.HighslideVariablesString">
      <summary>
 This is used to statically set global Highslide variables (http://highslide.com/ref/).  Write in the format, "key: 'StringValue', key: NumericalValue, key: BooleanValue".  These values are tagged onto the end of the hashtable values
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.isInnerFrame">
      <summary>
 Set this property to true if the page is contained within an iframe.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.isOuterFrame">
      <summary>
 Set this property to true if the page contains iframe's with highslide elements
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.align">
      <summary>
 Position of the full image in the client, either 'auto' or 'center'.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.allowHeightReduction">
      <summary>
 Allow HTML popups to shrink to fit the width of the browser windoww.
 </summary>
      <value>
 Default value: 	true
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.allowMultipleInstances">
      <summary>
 Allow more than one popup expander to be open at the same time.
 </summary>
      <value>
 Default value:	true
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.allowSimultaneousLoading">
      <summary>
 Allow multiple popups to be opened at the same time
 </summary>
      <value>
 Default value: 	false
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.allowSizeReduction">
      <summary>
 Allow the image to shrink to fit a small viewport.
 </summary>
      <value>
 Default value: 	true
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.allowWidthReduction">
      <summary>
 Allow HTML popups to shrink to fit the width of the browser windoww.
 </summary>
      <value>
 Default value: 	false
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.anchor">
      <summary>
 Which corner or side of the thumbnail the popup should be anchored to.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.autoplay">
      <summary>
 Inline option to start running a slideshow from a thumbnail.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.blockRightClick">
      <summary>
 Block right clicking and context menu on the full size image.
 </summary>
      <value>
 Default value:	false
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.cacheAjax">
      <summary>
 Cache the contents of AJAX popup for instant display.
 </summary>
      <value>
 Default value: 	true
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.captionEval">
      <summary>
 An expression to be evaluated into the caption text.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.captionId">
      <summary>
 The id of the element to be cloned to an image caption.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.captionOverlay">
      <summary>
 Overlay options for the caption, as listed under hs.registerOverlay.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.captionText">
      <summary>
 A text to use in the caption.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.contentId">
      <summary>
 The id of the HTML element containing the content for HTML popups.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.creditsHref">
      <summary>
 The hyperlink reference for the credits label.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.creditsPosition">
      <summary>
 The position of the credits relative to the popup.
 </summary>
      <value>
 Default value: 	top left
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.creditsTarget">
      <summary>
 The target of the credits link
 </summary>
      <value>
 Default value: 	_self
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.dimmingDuration">
      <summary>
 The duration in milliseconds of the fading in and out of the background dimming effect.
 </summary>
      <value>
 Default value: 	50
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.dimmingGeckoFix">
      <summary>
 Fix Gecko/Mac bug that causes problems with dimming and Flash.
 </summary>
      <value>
 Default value: 	false
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.dimmingOpacity">
      <summary>
 A float between 0 and 1 defining the opacity of a dimmed page background
 </summary>
      <value>
 Default value: 	0
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.dragByHeading">
      <summary>
 Allow the image or HTML popup to be dragged by it's heading.
 </summary>
      <value>
 Default value: 	true
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.dragSensitivity">
      <summary>
 How many pixels to drag the full image before it starts moving.
 </summary>
      <value>
 Default value: 	5
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.dynamicallyUpdateAnchors">
      <summary>
 Allow Highslide to update the anchors collection automatically after the DOM has changed.
 </summary>
      <value>
 Default value: 	true
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.easing">
      <summary>
 Sets the style of the expand/contract effect.
 </summary>
      <value>
 Default value: 	easeInQuad
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.easingClose">
      <summary>
 The easing when closing the expander. See hs.easing.
 </summary>
      <value>
 Default value: 	inherited from hs.easing
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.enableKeyListener">
      <summary>
 Listen for keystrokes like left and right arrow to control Highslide.
 </summary>
      <value>
 Default value: 	true
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.expandCursor">
      <summary>
 The filename of the cursor that indicates zoom in on the thumbnails.
 </summary>
      <value>
 Default value: 	'zoomin.cur'
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.expandDuration">
      <summary>
 Defines in milliseconds how long the zoom in effect should take.
 </summary>
      <value>
 Default value: 	250
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.fadeInOut">
      <summary>
 Add a fading effect to the regular expand/contract effect.
 </summary>
      <value>
 Default value: 	false
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.flushImgSize">
      <summary>
 Flush IE's cashed image width and height after an image is physically resized.
 </summary>
      <value>
 Default value: 	false
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.forceAjaxReload">
      <summary>
 IE-specific option to force Ajax-loaded content to be reloaded from the server on each popup opening
 </summary>
      <value>
 Default value: 	false
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.fullExpandOpacity">
      <summary>
 A float between 0 and 1 giving the opacity of the full expand label
 </summary>
      <value>
 Default value: 	1
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.fullExpandPosition">
      <summary>
 The position of the full expand label relative to the image.
 </summary>
      <value>
 Default value: 	bottom right
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.graphicsDir">
      <summary>
 The path to the directory where your graphics are.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.headingEval">
      <summary>
 An expression to be evaluated into the heading text.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.headingId">
      <summary>
 The id of the element to be cloned to an image heading.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.headingOverlay">
      <summary>
 Overlay options for the heading, as listed under hs.registerOverlay.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.headingText">
      <summary>
 A text to use in the heading.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.height">
      <summary>
 Sets the pixel height of the HTML expander.
 </summary>
      <value>
 Default value: 	undefined
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.lang">
      <summary>
 The object containing language strings for localisation.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.loadingOpacity">
      <summary>
 The opacity of the loading label.
 </summary>
      <value>
 Default value: 	0.75
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.maincontentEval">
      <summary>
 An expression to be evaluated into the main content while using self rendering content wrapper.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.maincontentId">
      <summary>
 The id of an element to open in a HTML expander using self rendering content wrapper.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.maincontentText">
      <summary>
 A text to use in a HTML popup when using self rendering content wrapper.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.marginBottom">
      <summary>
 The expanded image or HTML content never exceeds this bottom margin on the page.
 </summary>
      <value>
 Default value: 	15
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.marginLeft">
      <summary>
 The expanded image or HTML content never exceeds this left margin on the page.
 </summary>
      <value>
 Default value: 	15
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.marginRight">
      <summary>
 The expanded image or HTML content never exceeds this right margin on the page.
 </summary>
      <value>
 Default value: 	15
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.marginTop">
      <summary>
 The expanded image or HTML content never exceeds this top margin on the page.
 </summary>
      <value>
 Default value: 	15
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.maxHeight">
      <summary>
 Pixel value for the maximum height of the expanded content, see hs.maxWidth.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.maxWidth">
      <summary>
 Pixel width for the maximum width of the expanded image.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.minHeight">
      <summary>
 Pixel value for the minimum height of the expanded content, see hs.minWidth.
 </summary>
      <value>
 Default value: 	200
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.minWidth">
      <summary>
 Pixel value for the minimum width of the expanded image.
 </summary>
      <value>
 Default value: 	200
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.numberOfImagesToPreload">
      <summary>
 Highslide by default preloads the first 5 images in your page.
 </summary>
      <value>
 Default value: 	5
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.numberPosition">
      <summary>
 Where to inject a text showing the number of the current image in a sequence.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.objectHeight">
      <summary>
 Specifies the height of an included iframe or Flash movie.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.objectLoadTime">
      <summary>
 Display an iframe or Flash object before or after the animation.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.objectType">
      <summary>
 One of 'ajax', 'iframe' or 'swf'. Defines how you want to display the link target.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.objectWidth">
      <summary>
 The width of extended content like Flash.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.openerTagNames">
      <summary>
 Which elements should Highslide iterate to look for thumbnail openers.
 </summary>
      <value>
 Default value: 	["a"]
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.outlinesDir">
      <summary>
 The directory within the hs.graphicsDir where the outline pngs are found.
 </summary>
      <value>
 Default value: 	outlines/
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.outlineStartOffset">
      <summary>
 When hs.outlineWhileAnimating is true, this defines the starting pixel offset.
 </summary>
      <value>
 Default value: 	3
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.outlineType">
      <summary>
 Defines a graphic outline to display around the expanded content.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.outlineWhileAnimating">
      <summary>
 Show the graphic outline during the expansion and contraction of the popup.
 </summary>
      <value>
 Default value: 	2
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.overrides_hsVariable">
      <summary>
 Defines which settings of the hs object that will be inherited by the single hs.Expander.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.padToMinWidth">
      <summary>
 On narrow images, pad the width of the expander to the minWidth to make room for the caption.
 </summary>
      <value>
 Default value: 	false
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.preserveContent">
      <summary>
 Preserve changes made to the content and position of HTML content.
 </summary>
      <value>
 Default value: 	true
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.restoreCursor">
      <summary>
 The filename of the cursor that indicates zoom out on the expanded image.
 </summary>
      <value>
 Default value: 	'zoomout.cur'
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.restoreDuration">
      <summary>
 Equivalent to hs.expandDuration but applies to the closing of the expander.
 </summary>
      <value>
 Default value: 	250
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.showCredits">
      <summary>
 Whether to show a "Powered by..." label in the upper left corner. 
 </summary>
      <value>
 Default value: 	true
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.skin">
      <summary>
 A collection of HTML to be inserted automatically.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.slideshowGroup">
      <summary>
 Places your popups into groups for Next and Previous navigation.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.src">
      <summary>
 An alternative way to define the URL of the image or HTML content.
 </summary>
      <value>
 Default value: 	undefined
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.swfOptions">
      <summary>
 Advanced options when showing Flash content using hs.contentType = "swf".
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.targetX">
      <summary>
 Positions the expanded image or HTML content exactly above a given element on your page.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.targetY">
      <summary>
 Positions the expanded image or HTML content exactly above a given element on your page.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.thumbnailId">
      <summary>
 Defines the id of a graphic to expand the image from
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.transitionDuration">
      <summary>
 Defines in milliseconds how long the transition effect should take.
 </summary>
      <value>
 Default value: 	500
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.transitions">
      <summary>
 Define transitions other than the default zoom in and out
 </summary>
      <value>
 Default value: 	[]
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.useBox">
      <summary>
 Use a constraining box so that the borders, captions etc. don't change size from image to image.
 </summary>
      <value>
 Default value: 	false
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.width">
      <summary>
 Sets the pixel width of the HTML expander, or the width of the constraining box for images.
 </summary>
      <value>
 Default value: 	undefined
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.wrapperClassName">
      <summary>
 A specific CSS class for the wrapping div to enhance CSS control.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.HighslideHeaderControl.zIndexCounter">
      <summary>
 Adjust the z-index to other elements on your page.
 </summary>
      <value>
 Default value: 	1001
 </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:HighslideControls.HighslideOverlay">
      <summary>
 control for displaying a Highslide overly on a Highslide dialog element
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideOverlay.className">
      <summary>
 Apply a class name for styling the overlay.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideOverlay.fade">
      <summary>
 Whether the overlay should fade in and out. Possible values 0/false, 1/true, 2. 
 Fading in and out is problematic in IE if you put alphatransparent PNGs in the overlay, 
 either through AlphaImageLoader or not. In this case, set the fade to 2 to skip fading in IE only. 
 An example can be seen at example-no-border.html. hideOnMouseOut (bool) Defines whether the overlay 
 should be hidden when the mouse leaves the full-size image. 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideOverlay.overlayId">
      <summary>
 The id of the overlay div defined in your page's source code.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideOverlay.offsetX">
      <summary>
 The number of pixels to offset the overlay in the horizontal
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideOverlay.offsetY">
      <summary>
 The number of pixels to offset the overlay in the vertical
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideOverlay.opacity">
      <summary>
 Can be a float number between 0 and 1 (fully opaque).
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideOverlay.position">
      <summary>
 Specifies where the overlay will appear related to the full-size image. 
 The first word specifies the vertical position and can be above, top, middle, bottom or below, 
 and the second word can be left, center, right. In addition, the position can be the single word 
 positions leftpanel or rightpanel. If you want to put some air between the overlay and the edge 
 of the image, you use regular CSS margins on the overlay div. You can also offset the overlay 
 by using position:relative in it's CSS.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideOverlay.relativeTo">
      <summary>
 Can be 'viewport' or 'expander'. Overlays in most positions can be rendered relative to 
 the viewport rather than the default, which is relative to the expander. When relative to 
 the viewport, the overlays stay fixed on scrolling. This option requires that the 
 'Viewport overlays' component be activated in the Configurator.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideOverlay.slideshowGroup">
      <summary>
 Refers to a hs.slideshowGroup that will use this overlay.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideOverlay.thumbnailId">
      <summary>
 Either a string specifying the id of the thumbnail, or you can set it to null to apply 
 the overlay on all thumbnails.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideOverlay.width">
      <summary>
 The width of the overlay can be specified either as a pixel value or as a percentage, 
 like 100px or 100%. However, overlays in the leftpanel or rightpanel positions require 
 a fixed pixel width, or they will fall back to the default 200px width.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.HighslideOverlay.useOnHtml">
      <summary>
 By defalut overlays are not added to HTML content. Set useOnHtml to true to allow this. 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:HighslideControls.Highslider">
      <summary>
 Control to display a Highslide dialog element
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:HighslideControls.Highslider.registerOverlay(HighslideControls.HighslideOverlay@)">
      <summary>
      </summary>
      <param name="overlay">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.myHeader">
      <summary>
 Header
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.HighslideVariables">
      <summary>
 Hashtable containing overriding highslide variables, see http://highslide.com/ref/
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.DisplayText">
      <summary>
 The anchor text displayed to the user.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.ExpandURL">
      <summary>
 In image mode, the URL of the fullsize image.  In iframe mode, the URL of the expanded iframe.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.ThumbURL">
      <summary>
 The URL of the thumbnail image
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.ThumbWidth">
      <summary>
 Thumbnail width
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.isFixed">
      <summary>
 Set this property to true to make HS frames fixed on a page
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.ThumbHeight">
      <summary>
 Thumbnail height
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.Caption">
      <summary>
 Caption
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.CaptionControls">
      <summary>
 Caption Control Collection
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.ContentControls">
      <summary>
 Content Control Collection for HTML mode
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.Outline_Scheme">
      <summary>
 Outline Scheme
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.HighslideDisplayMode">
      <summary>
 Display mode 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.HighslideVariablesString">
      <summary>
 This is used to statically set overriding Highslide variables (http://highslide.com/ref/).  Write in the format, "key: 'StringValue', key: NumericalValue, key: BooleanValue".  These values are tagged onto the end of the hashtable values
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.Title">
      <summary>
 The text displayed in a tooltip onmouseover
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.outputValue">
      <summary>
      </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.openJSFunction">
      <summary>
 Open JS Function
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.align">
      <summary>
 Position of the full image in the client, either 'auto' or 'center'.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.allowHeightReduction">
      <summary>
 Allow HTML popups to shrink to fit the width of the browser windoww.
 </summary>
      <value>
 Default value: 	true
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.allowSizeReduction">
      <summary>
 Allow the image to shrink to fit a small viewport.
 </summary>
      <value>
 Default value: 	true
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.allowWidthReduction">
      <summary>
 Allow HTML popups to shrink to fit the width of the browser windoww.
 </summary>
      <value>
 Default value: 	false
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.anchor">
      <summary>
 Which corner or side of the thumbnail the popup should be anchored to.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.autoplay">
      <summary>
 Inline option to start running a slideshow from a thumbnail.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.cacheAjax">
      <summary>
 Cache the contents of AJAX popup for instant display.
 </summary>
      <value>
 Default value: 	true
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.captionEval">
      <summary>
 An expression to be evaluated into the caption text.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.captionId">
      <summary>
 The id of the element to be cloned to an image caption.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.captionOverlay">
      <summary>
 Overlay options for the caption, as listed under hs.registerOverlay.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.contentId">
      <summary>
 The id of the HTML element containing the content for HTML popups.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.creditsPosition">
      <summary>
 The position of the credits relative to the popup.
 </summary>
      <value>
 Default value: 	top left
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.dimmingOpacity">
      <summary>
 A float between 0 and 1 defining the opacity of a dimmed page background
 </summary>
      <value>
 Default value: 	0
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.dragByHeading">
      <summary>
 Allow the image or HTML popup to be dragged by it's heading.
 </summary>
      <value>
 Default value: 	true
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.easing">
      <summary>
 Sets the style of the expand/contract effect.
 </summary>
      <value>
 Default value: 	easeInQuad
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.easingClose">
      <summary>
 The easing when closing the expander. See hs.easing.
 </summary>
      <value>
 Default value: 	inherited from hs.easing
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.fadeInOut">
      <summary>
 Add a fading effect to the regular expand/contract effect.
 </summary>
      <value>
 Default value: 	false
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.headingEval">
      <summary>
 An expression to be evaluated into the heading text.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.headingId">
      <summary>
 The id of the element to be cloned to an image heading.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.headingOverlay">
      <summary>
 Overlay options for the heading, as listed under hs.registerOverlay.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.headingText">
      <summary>
 A text to use in the heading.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.height">
      <summary>
 Sets the pixel height of the HTML expander.
 </summary>
      <value>
 Default value: 	undefined
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.maincontentEval">
      <summary>
 An expression to be evaluated into the main content while using self rendering content wrapper.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.maincontentId">
      <summary>
 The id of an element to open in a HTML expander using self rendering content wrapper.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.maincontentText">
      <summary>
 A text to use in a HTML popup when using self rendering content wrapper.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.maxHeight">
      <summary>
 Pixel value for the maximum height of the expanded content, see hs.maxWidth.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.maxWidth">
      <summary>
 Pixel width for the maximum width of the expanded image.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.minHeight">
      <summary>
 Pixel value for the minimum height of the expanded content, see hs.minWidth.
 </summary>
      <value>
 Default value: 	200
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.minWidth">
      <summary>
 Pixel value for the minimum width of the expanded image.
 </summary>
      <value>
 Default value: 	200
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.numberPosition">
      <summary>
 Where to inject a text showing the number of the current image in a sequence.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.objectHeight">
      <summary>
 Specifies the height of an included iframe or Flash movie.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.objectLoadTime">
      <summary>
 Display an iframe or Flash object before or after the animation.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.objectType">
      <summary>
 One of 'ajax', 'iframe' or 'swf'. Defines how you want to display the link target.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.objectWidth">
      <summary>
 The width of extended content like Flash.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.outlineType">
      <summary>
 Defines a graphic outline to display around the expanded content.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.outlineWhileAnimating">
      <summary>
 Show the graphic outline during the expansion and contraction of the popup.
 </summary>
      <value>
 Default value: 	2
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.preserveContent">
      <summary>
 Preserve changes made to the content and position of HTML content.
 </summary>
      <value>
 Default value: 	true
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.slideshowGroup">
      <summary>
 Places your popups into groups for Next and Previous navigation.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.src">
      <summary>
 An alternative way to define the URL of the image or HTML content.
 </summary>
      <value>
 Default value: 	undefined
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.swfOptions">
      <summary>
 Advanced options when showing Flash content using hs.contentType = "swf".
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.targetX">
      <summary>
 Positions the expanded image or HTML content exactly above a given element on your page.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.targetY">
      <summary>
 Positions the expanded image or HTML content exactly above a given element on your page.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.transitions">
      <summary>
 Define transitions other than the default zoom in and out
 </summary>
      <value>
 Default value: 	[]
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.useBox">
      <summary>
 Use a constraining box so that the borders, captions etc. don't change size from image to image.
 </summary>
      <value>
 Default value: 	false
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.width">
      <summary>
 Sets the pixel width of the HTML expander, or the width of the constraining box for images.
 </summary>
      <value>
 Default value: 	undefined
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="P:HighslideControls.Highslider.wrapperClassName">
      <summary>
 A specific CSS class for the wrapping div to enhance CSS control.
 </summary>
      <value>
 Default value: 	null
 </value>
      <returns>
      </returns>
      <remarks>
 Overrideable inline
 </remarks>
    </member>
    <member name="T:jQueryLibrary.jQueryInclude">
      <summary>
 Automatically adds jquery dependancy to a page. Accessed via static calls.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.ScriptFile.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.String,System.Boolean)">
      <summary>
 Constructor for ScriptFile class
 </summary>
      <param name="src">
      </param>
      <param name="type">
 Type of script
 </param>
      <param name="suppressRes">
      </param>
      <param name="disableMinimize">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="F:jQueryLibrary.jQueryInclude.isinitial">
      <summary>
 determines if the include has been added already.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.addScriptBlock(System.Web.UI.Page,System.String,System.Boolean,System.String,System.String,jQueryLibrary.jQueryInclude,System.Boolean)">
      <summary>
 Adds the jQuery script block to the page.
 </summary>
      <param name="page">
 The page that the script block will be added to.
 </param>
      <param name="script">
 The script to be added
 </param>
      <param name="minify">
      </param>
      <param name="type">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.addStyleBlock(System.Web.UI.Page,System.String,System.String)">
      <summary>
 Adds a style block to the page.
 </summary>
      <param name="page">The page that the script block will be added to.</param>
      <param name="style">The Style to be Added</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.addScriptBlockPageLoad(System.Web.UI.Page,System.String,System.Boolean,System.String,System.Boolean)">
      <summary>
 Adds the jQuery script block that executes after page load.
 </summary>
      <param name="page">
 The page that the script block will be added to.
 </param>
      <param name="script">
 The script to be added
 </param>
      <param name="minify">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.addScriptFile(System.Web.UI.Page,System.String,System.String,System.Boolean,System.Boolean,System.String)">
      <summary>
      </summary>
      <param name="page">
      </param>
      <param name="scriptLocation">
      </param>
      <param name="type">
      </param>
      <param name="disableMinimize">
      </param>
      <param name="useFullPath">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.deleteScriptFile(System.Web.UI.Page,System.String)">
      <summary>
 removes a script file from the page.
 </summary>
      <param name="page">
      </param>
      <param name="scriptLocation">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.getInitialInclude(System.Web.UI.Page)">
      <summary>
 Gets the jQuery include on a given page
 </summary>
      <param name="page">
 The Page to get the include from
 </param>
      <returns>
 Returns the jQuery include as a jQueryInclude type
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.RegisterJQueryUI(System.Web.UI.Page@,System.String)">
      <summary>
  Adds the jQueryUI include header to a given page
 </summary>
      <param name="page">
 The page to add the header to
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.RegisterJQueryUIThemed(System.Web.UI.Page@,jQueryLibrary.ThemeAdder.themes,System.String,System.Boolean)">
      <summary>
  Adds the jQueryUI include header to a given page
 </summary>
      <param name="page">
 The page to add the header to
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.RegisterJQueryUIThemed(System.Web.UI.Page@)">
      <summary>
  Adds the jQueryUI include header to a given page
 </summary>
      <param name="page">
 The page to add the header to
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.RegisterJQuery(System.Web.UI.Page@,System.String,System.Boolean)">
      <summary>
  Adds the jQuery include header to a given page
 </summary>
      <param name="page">
 The page to add the header to
 </param>
      <param name="version">
      </param>
      <param name="asWebResource">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.#ctor(System.String,System.String)">
      <summary>
 jQueryInclude constructor, sets jqtype and src
 </summary>
      <param name="type">
      </param>
      <param name="src">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.addJQueryToHead(System.Web.UI.Page,jQueryLibrary.jQueryInclude,System.Boolean)">
      <summary>
 Adds the JQueryIncludeHeader to the head tag
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.addInclude(jQueryLibrary.jQueryInclude.ScriptFile)">
      <summary>
 Adds a script file to the jQuery include list
 </summary>
      <param name="sf">
 Script file to be included
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.addInclude(System.String,System.String,System.Boolean,System.Boolean,System.String,System.Boolean)">
      <summary>
 Creates an instance of ScriptFile in order to add it to the jQuery include list
 </summary>
      <param name="filename">
 Name of file to be added to ScriptFile instance
 </param>
      <param name="type">Type of script</param>
      <param name="suppressRes">
      </param>
      <param name="disableMinimize">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.deleteInclude(System.String)">
      <summary>
 Removes filename
 </summary>
      <param name="filename">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.deleteIncludeByID(System.String)">
      <summary>
 Removes an id
 </summary>
      <param name="id">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.replaceIncludeByID(System.String,System.String)">
      <summary>
 Replaces an id
 </summary>
      <param name="id">
      </param>
      <param name="newcontents">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.addControlToHeader(System.Web.UI.Page,System.Web.UI.Control)">
      <summary>
 Adds a control to the page header.
 </summary>
      <param name="page">
      </param>
      <param name="ctrl">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.jQueryInclude.getEnumName(System.Object)">
      <summary>
 helper method to get the name of an eumeration object.
 </summary>
      <param name="enumeration">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:jQueryLibrary.jQueryInclude.ctrlList">
      <summary>
 Lists all controls in the page head
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:jQueryLibrary.jQueryInclude.jqueryIncludeList">
      <summary>
 jQuery Include List read only property
 </summary>
      <value>
      </value>
      <returns>
 jQuery Include List
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.Plugins.Center.#ctor(System.String,System.String,System.Boolean)">
      <summary>
 Constructor for the Center class
 </summary>
      <param name="type">
 Type of script
 </param>
      <param name="filename">
 Filename of the script
 </param>
      <param name="noscripts">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.Plugins.ContextMenu.Register(System.Web.UI.Page@,System.Int32,System.Boolean)">
      <summary>
      </summary>
      <param name="page">
      </param>
      <param name="addAtPosition">
      </param>
      <param name="asWebResource">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.Plugins.ContextMenu.#ctor(System.String,System.String,System.Boolean)">
      <summary>
 Constructor for ContextMenu class
 </summary>
      <param name="type">
 Type of script
 </param>
      <param name="filename">
 Filename of script
 </param>
      <param name="noscripts">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.Plugins.query.Register(System.Web.UI.Page@,System.Int32,System.Boolean)">
      <summary>
 Registers a script on a given page
 </summary>
      <param name="page">
 The page to register the script to
 </param>
      <param name="addAtPosition">
 Position the script will be added at
 </param>
      <param name="asWebResource">
 Boolean to identify as a webresource
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.Plugins.query.#ctor(System.String,System.String,System.Boolean)">
      <summary>
 Constructor for query class
 </summary>
      <param name="type">
 Type of script
 </param>
      <param name="filename">
 Filename of script
 </param>
      <param name="noscripts">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.Plugins.TimePicker.Register(System.Web.UI.Page@,System.Int32,System.Boolean)">
      <summary>
 Registers a script on a given page
 </summary>
      <param name="page">
 The page to register the script to
 </param>
      <param name="addAtPosition">
 Position the script will be added at
 </param>
      <param name="asWebResource">
 Boolean to identify as a webresource
 </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.Plugins.TimePicker.#ctor(System.String,System.String,System.Boolean)">
      <summary>
 Constructor for the TimePicker class
 </summary>
      <param name="type">
 Type of script
 </param>
      <param name="filename">
 Filename for script
 </param>
      <param name="noscripts">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="T:jQueryLibrary.ThemeAdder">
      <summary>
 Adds a jquery theme to the page.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.ThemeAdder.AddCustomTheme(System.Web.UI.Page@,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
 Adds a theme to the page.
 </summary>
      <param name="page">
      </param>
      <param name="themepath">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.ThemeAdder.getThemeAdder(System.Web.UI.Page)">
      <summary>
 Gets the themeAdder object for the specified page.
 </summary>
      <param name="page">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.ThemeAdder.AddTheme(System.Web.UI.Page@)">
      <summary>
 Adds a theme to the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.ThemeAdder.AddTheme(System.Web.UI.Page@,jQueryLibrary.ThemeAdder.themes)">
      <summary>
 Adds a theme to the page.
 </summary>
      <param name="page">
      </param>
      <param name="theme">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.ThemeAdder.AddTheme(System.Web.UI.Page@,jQueryLibrary.ThemeAdder.themes,System.Boolean)">
      <summary>
 Adds a theme to the page.
 </summary>
      <param name="page">
      </param>
      <param name="theme">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.ThemeAdder.AddTheme(System.Web.UI.Page@,jQueryLibrary.ThemeAdder.themes,System.Boolean,System.Boolean)">
      <summary>
 Adds a theme to the page.
 </summary>
      <param name="page">
      </param>
      <param name="theme">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.ThemeAdder.AddTheme(System.Web.UI.Page@,jQueryLibrary.ThemeAdder.themes,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
 Adds a theme to the page.
 </summary>
      <param name="page">
      </param>
      <param name="theme">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.ThemeAdder.AddTheme(System.Web.UI.Page@,jQueryLibrary.ThemeAdder.themes,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
 Adds a theme to the page.
 </summary>
      <param name="page">
      </param>
      <param name="theme">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.ThemeAdder.AddTheme(System.Web.UI.Page@,jQueryLibrary.ThemeAdder.themes,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
      <summary>
 Adds a theme to the page.
 </summary>
      <param name="page">
      </param>
      <param name="theme">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.ThemeAdder.AddTheme(System.Web.UI.Page@,jQueryLibrary.ThemeAdder.themes,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean)">
      <summary>
 Adds a theme to the page.
 </summary>
      <param name="page">
      </param>
      <param name="theme">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:jQueryLibrary.ThemeAdder.AddThemeToIframe(System.Web.UI.Page@,System.Boolean)">
      <summary>
 Adds a theme to the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Accordion.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Accordion.Animated">
      <summary>
 Choose your favorite animation, or disable them (set to none).
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Accordion.AutoHeight">
      <summary>
 If set, the highest content part is used as height reference for all other parts. 
 Provides more consistent animations
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Accordion.ClearStyle">
      <summary>
 If set, clears height and overflow styles after finishing animations. 
 This enables accordions to work with dynamic content. Won't work together 
 with autoHeight.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Accordion.Collapsible">
      <summary>
 Whether all the sections can be closed at once. Allows collapsing the 
 active section by the triggering event (click is the default)
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Accordion.Event">
      <summary>
 The event on which to trigger the accordion
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Accordion.FillSpace">
      <summary>
 If set, the accordion completely fills the height of the parent element. Overrides autoheight
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Accordion.Icons">
      <summary>
 Icons to use for headers. Icons may be specified for 'header' and 'headerSelected', 
 and we recommend using the icons native to the jQuery UI CSS Framework 
 manipulated by jQuery UI ThemeRoller
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>{ 'header': 'ui-icon-triangle-1-e', 'headerSelected': 'ui-icon-triangle-1-s' }</remarks>
    </member>
    <member name="P:JqueryUIControls.Accordion.ActivePaneIndex">
      <summary>
 Index of the currently selected pane.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Accordion.ActivePane">
      <summary>
 The currently selected pane.  
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Accordion.CreateCallback">
      <summary>
 This event is triggered when accordion is created.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Accordion.ChangeCallback">
      <summary>
 This event is triggered every time the accordion changes. If the accordion is 
 animated, the event will be triggered upon completion of the animation; 
 otherwise, it is triggered immediately
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Accordion.ChangeStartCallback">
      <summary>
 This event is triggered every time the accordion starts to change
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:JqueryUIControls.AjaxCall">
      <summary>
 An ajax call back to current page. Page is terminated after init. Elements can be cahnged on the page but must be added to the watched control list. The call can be made from javascript by calling the control id
 ex:   ajaxcall(StringData);
 The event is raised on the server as the event "callback(ByVal sender As JqueryUIControls.AjaxCall, ByVal query As String)" 
 The js return method recieves data back via sender.respond("ok")
 ex:   function jsReturn(dataFromServer){ alert(dataFromServer); }
 
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.AjaxCall.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.AjaxCall.decodeFromURL(System.String)">
      <summary>
 Decodes a given string from URL encoding 
 </summary>
      <param name="value">
 String to be decoded
 </param>
      <returns>
 Decoded string
 </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.AjaxCall.respond(System.String,System.String)">
      <summary>
 Text to display matching the users current query
 </summary>
      <param name="returnValue">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.AjaxCall.returnedParms">
      <summary>
 Stores values from other controls for the search event
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Autocomplete.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Autocomplete.respond(System.Data.DataTable,System.String,System.String,System.String)">
      <summary>
 Text to display matching the users current query
 </summary>
      <param name="dt">
      </param>
      <param name="nameColumn">
      </param>
      <param name="valuecolumn">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Autocomplete.respond(System.Data.DataView,System.String,System.String,System.String)">
      <summary>
 Text to display matching the users current query
 </summary>
      <param name="dv">
      </param>
      <param name="nameColumn">
      </param>
      <param name="valuecolumn">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Autocomplete.respond(System.Data.DataTable)">
      <summary>
 Text to display matching the users current query
 </summary>
      <param name="dt">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Autocomplete.respond(System.Data.DataView)">
      <summary>
 Text to display matching the users current query
 </summary>
      <param name="dv">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Autocomplete.respond(System.String@)">
      <summary>
 Text to display matching the users current query
 </summary>
      <param name="JSONDataString">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Autocomplete.setDistinctAutocomplete(System.String,System.String,System.Int32,System.String,System.Data.Common.DbConnection)">
      <summary>
 Sets the autocomplete to display the distinct text from the column provided.
 </summary>
      <param name="tableName">
      </param>
      <param name="columnName">
      </param>
      <param name="numberReturned">
      </param>
      <param name="searchParmFormat">
      </param>
      <param name="connection">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Autocomplete.setAutocompleteConnection(System.Data.Common.DbConnection)">
      <summary>
 Sets the connection for setDistinctAutocomplete and setSelectAutocomplete. 
 </summary>
      <param name="connection">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Autocomplete.setSelectAutocomplete(System.String,System.String,System.String,System.String,System.Data.Common.DbConnection)">
      <summary>
 Sets the autocomplete to display results from the provided select statement.
 </summary>
      <param name="SelectStmt">A select statement with a single query parameter.</param>
      <param name="Displaycolumn">Column to display in the autocomplete</param>
      <param name="valueColumn">Value to return once clicked (autopostback must = true)</param>
      <param name="searchParmFormat">{0}%</param>
      <param name="connection">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Autocomplete.Delay">
      <summary>
 The delay in milliseconds the Autocomplete waits after a keystroke to activate itself. 
 A zero-delay makes sense for local data (more responsive), but can produce a lot of 
 load for remote data, while being less responsive
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Autocomplete.MinLength">
      <summary>
 The minimum number of characters a user has to type before the Autocomplete activates. 
 Zero is useful for local data with just a few items. Should be increased when there are 
 a lot of items, where a single character would match a few thousand items
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Autocomplete.AutoFocus">
      <summary>
 If set to true the first item will be automatically focused
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Autocomplete.Position">
      <summary>
 Identifies the position of the Autocomplete widget in relation to the associated input 
 element. The "of" option defaults to the input element, but you can specify another 
 element to position against.
 <see>http://docs.jquery.com/UI/Position</see></summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Autocomplete.returnedParms">
      <summary>
 Stores values from other controls for the search event
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Autocomplete.Value">
      <summary>
 Gets the value of the selected item
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Autocomplete.EnableCategories">
      <summary>
 Allows categories to be shwon in search results
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Autocomplete.SearchCallback">
      <summary>
 Before a request (source-option) is started, after minLength and delay are met. 
 Can be canceled (return false), then no request will be started and no items suggested.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Autocomplete.OpenCallback">
      <summary>
 Triggered when the suggestion menu is opened.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Autocomplete.FocusCallback">
      <summary>
 Before focus is moved to an item (not selecting), ui.item refers to the focused item. 
 The default action of focus is to replace the text field's value with the value of 
 the focused item, though only if the focus event was triggered by a keyboard interaction. 
 Canceling this event prevents the value from being updated, but does not prevent the menu 
 item from being focused
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Autocomplete.SelectCallback">
      <summary>
 Triggered when an item is selected from the menu; ui.item refers to the selected item. 
 The default action of select is to replace the text field's value with the value of 
 the selected item. Canceling this event prevents the value from being updated, but does 
 not prevent the menu from closing
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Autocomplete.ChangeCallback">
      <summary>
 After an item was selected; ui.item refers to the selected item. Always triggered
  after the close event.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Autocomplete.CloseCallback">
      <summary>
 When the list is hidden - doesn't have to occur together with a change.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Calendar.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Calendar.eventClick">
      <summary>
 js function name for when an event is clicked.
 function should be in the format:
 functionName( event, jsEvent, view ) { }
 property string is just the function name.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Calendar.dayClick">
      <summary>
 js function name for when a day is clicked.
 function should be in the format:
 functionName( date, allDay, jsEvent, view ) { }
 property string is just the function name.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Calendar.eventMouseover">
      <summary>
 js function name for when an event is moused over.
 function should be in the format:
 functionName( event, jsEvent, view ) { }
 property string is just the function name.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Calendar.eventMouseout">
      <summary>
 js function name for when an event is moused out.
 function should be in the format:
 functionName( event, jsEvent, view ) { }
 property string is just the function name.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.ColorPicker.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.InfoDiv.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Uploader.savePath">
      <summary>
 Path can either be a relative path such as: "/uploads/"
 Or it can be a fully qualified path such as: C:\website\uploads
 The iis user must have write access to the folder for this to work.
 savePath and uploadPath both change the same internal value.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Uploader.uploadPath">
      <summary>
 Path can either be a relative path such as: "/uploads/"
 Or it can be a fully qualified path such as: C:\website\uploads
 The iis user must have write access to the folder for this to work.
 savePath and uploadPath both change the same internal value.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Uploader.cameraUpload">
      <summary>
 Sets weather the camera on a smartphone can be used as an upload source.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.jsPlumb.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.LazyImgLoad.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.LazyImgLoad.PreLoadImage">
      <summary>
 Specifies the image that will be loaded until the actual image can be loaded.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.LazyImgLoad.Effect">
      <summary>
 Effect used to show the image
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.LazyImgLoad.Threshold">
      <summary>
 By default images are loaded when they appear on the screen. 
 If you want images to load earlier you can set threshold parameter. 
 Setting threshold to 200 causes image to load 200 pixels before it is visible.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.LazyImgLoad.triggerEvent">
      <summary>
 any jQuery event such as click or mouseover. 
 You can also use your own custom events such as sporty or foobar by
 selecting custom and defining the CustomTriggerEvent Property. 
 Default is to wait until user scrolls down and image appears on the window.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.LazyImgLoad.CustomTriggerEvent">
      <summary>
 Custom event to trigger when a image is shown
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.LazyImgLoad.FailureLimit">
      <summary>
 After scrolling page Lazy Load loops though unloaded images. 
 In loop it checks if image has become visible. By default loop is stopped 
 when first image below the fold (not visible) is found. This is based
  on following assumption. Order of images on page is same as order of 
 images in HTML code. With some layouts assumption this might be wrong. 
 You can control loading behaviour with failure_limit option.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.LazyImgLoad.SkipInvisible">
      <summary>
 There are cases when you have invisible images. For example when using 
 plugin in together with a large filterable list of items that can have 
 their visibility state changed dynamically. To improve performance 
 Lazy Load ignores hidden images by default. If you want to load hidden 
 images set skip_invisible to false.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.LazyImgLoad.Container">
      <summary>
 You can also use plugin for images inside scrolling container, such as div with scrollbar. 
 Just pass the container as jQuery object.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.LazyImgLoad.BorderWidth">
      <summary>
 Gets or sets the border width of the Web server control.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.maskedTextbox.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Notify.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Notify.text">
      <summary>
 The text body of the notification
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Notify.title">
      <summary>
 Title of the notification
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Notify.expires">
      <summary>
 The amount of time in ms the notification will stay visable
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Notify.sticky">
      <summary>
 Helper to make alert stay on the page untill closed. Sets expire to 0 if set to true.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Notify.speed">
      <summary>
 The animation speed in ms
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Notify.stack">
      <summary>
 The direction new notifications stack in relation to this one.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Notify.theme">
      <summary>
 Style the notify message
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Notify.checkInterval">
      <summary>
 The interval the server is checked for a new notification
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Notify.showOnLoad">
      <summary>
 Show the notification on page load
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Notify.alignV">
      <summary>
 Verticle alignment
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Notify.alignH">
      <summary>
 Horizontal alignment
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Notify_SiteWide.NotifyKey">
      <summary>
 This property must be set befor or durring page init.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Scroller.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Scroller.Top">
      <summary>
 Height from top of page where the scroller will become static.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:JqueryUIControls.Slider">
      <summary>
 The jQuery UI Slider plugin makes selected elements into sliders. 
 There are various options such as multiple handles, and ranges. 
 The handle can be moved with the mouse or the arrow keys.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Slider.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.Max">
      <summary>
 The maximum value of the slider.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.Min">
      <summary>
 The minimum value of the slider.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.Orientation">
      <summary>
 This option determines whether the slider has the min at the left, 
 the max at the right or the min at the bottom, the max at the top. 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.Range">
      <summary>
 If set to true, the slider will detect if you have two handles and create a stylable range 
 element between these two. Two other possible values are 'min' and 'max'. 
 A min range goes from the slider min to one handle. 
 A max range goes from one handle to the slider max
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.Step">
      <summary>
 Determines the size or amount of each interval or step the slider takes between min and max. 
 The full specified value range of the slider (max - min) needs to be evenly divisible by 
 the step
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.Value">
      <summary>
 Determines the value of the slider, if there's only one handle. 
 If there is more than one handle, determines the value of the first handle
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.Values">
      <summary>
 This option can be used to specify multiple handles. If range is set to true, 
 the count of 'values' should be 2.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.Animate">
      <summary>
 Whether to slide handle smoothly when user click outside handle on the bar. 
 Will also accept one of the three predefined speeds ("slow", "normal", or "fast") 
 or the number of milliseconds to run the animation (e.g. 1000)
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.UpdateControl">
      <summary>
 Updates value of control as slider is slid.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.CreateCallback">
      <summary>
 This event is triggered when slider is created.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.ChangeCallback">
      <summary>
 This event is triggered on slide stop, or if the value is changed programmatically 
 (by the value method). Takes arguments event and ui. Use event.orginalEvent to detect 
 whether the value changed by mouse, keyboard, or programmatically. Use ui.value 
 (single-handled sliders) to obtain the value of the current handle, 
 $(this).slider('values', index) to get another handle's value.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.StartCallback">
      <summary>
 This event is triggered when the user starts sliding.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.StopCallback">
      <summary>
 This event is triggered when the user stops sliding.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Slider.SlideCallback">
      <summary>
 This event is triggered on every mouse move during slide. Use ui.value 
 (single-handled sliders) to obtain the value of the current handle, 
 $(..).slider('value', index) to get another handles' value.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="F:JqueryUIControls.Sortable.ToleranceMode.intersect">
      <summary>
 The item overlaps the other item by at least 50%.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:JqueryUIControls.Sortable.ToleranceMode.pointer">
      <summary>
 The mouse pointer overlaps the other item.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:JqueryUIControls.Sortable.CursorAt">
      <summary>
 Moves the sorting element or helper so the 
 cursor always appears to drag from the same position. 
 Coordinates can be given as a hash using a combination of one or two keys
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="F:JqueryUIControls.Sortable.Grid">
      <summary>
 Snaps the sorting element or helper to a grid, every x and y pixels. Array values: [ x, y ].
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Sortable.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.RenderTag">
      <summary>
 Change the html tag used for this sortable (div, ul, p, etc.)
 </summary>
      <value>
      </value>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.AppendTo">
      <summary>
 Defines where the helper that moves with the mouse is being appended to during the drag (for example, to resolve overlap/zIndex issues).
 Multiple types supported:
   jQuery: A jQuery object containing the element to append the helper to.
   Element: The element to append the helper to.
    Selector: A selector specifying which element to append the helper to.
    String: The string "parent" will cause the helper to be a sibling of the sortable item.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.Axis">
      <summary>
 If defined, the items can be dragged only horizontally or vertically.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.Cancel">
      <summary>
 Prevents sorting if you start on elements matching the selector.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.ConnectWith">
      <summary>
 A selector of other sortable elements that the items from this list should be connected to. 
 This is a one-way relationship, if you want the items to be connected in both directions, 
 the connectWith option must be set on both sortable elements.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.Containment">
      <summary>
 Defines a bounding box that the sortable items are contrained to while dragging.
 Note: The element specified for containment must have a calculated width and height 
 (though it need not be explicit). For example, if you have float: left sortable children and 
 specify containment: "parent" be sure to have float: left on the sortable/parent 
 container as well or it will have height: 0, causing undefined behavior.
 
 Multiple types supported:
      Element: An element to use as the container.
      Selector: A selector specifying an element to use as the container.
      String: A string identifying an element to use as the container. Possible values: "parent", "document", "window".
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.Cursor">
      <summary>
 Defines the cursor that is being shown while sorting.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.Delay">
      <summary>
 Time in milliseconds to define when the sorting should start. 
 Adding a delay helps preventing unwanted drags when clicking on an element.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.Distance">
      <summary>
 Tolerance, in pixels, for when sorting should start. If specified, 
 sorting will not start until after mouse is dragged beyond distance. 
 Can be used to allow for clicks on elements within a handle.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.DropOnEmpty">
      <summary>
 If false, items from this sortable can't be dropped on an empty 
 connect sortable (see the connectWith option.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.ForceHelperSize">
      <summary>
 If true, forces the placeholder to have a size.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.ForcePlaceholderSize">
      <summary>
 If true, forces the placeholder to have a size.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.Handle">
      <summary>
 Restricts sort start click to the specified element.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.Helper">
      <summary>
 Allows for a helper element to be used for dragging display.
 
 Multiple types supported:
      String: If set to "clone", then the element will be cloned and the clone will be dragged.
      Function: A function that will return a DOMElement to use while dragging. The function receives the event and the element being sorted.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.ItemsSelector">
      <summary>
 Specifies which items inside the element should be sortable.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.Opacity">
      <summary>
 Defines the opacity of the helper while sorting. From 0.01 to 1.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.PlaceHolder">
      <summary>
 A class name that gets applied to the otherwise white space.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.Revert">
      <summary>
 The duration, in milliseconds, of sortable items reverting to their new positions using a smooth animation.
 -1 to disable, 0 for default
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.Scroll">
      <summary>
 If set to true, the page scrolls when coming to an edge.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.ScrollSensitivity">
      <summary>
 Defines how near the mouse must be to an edge to start scrolling.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.ScrollSpeed">
      <summary>
 The speed at which the window should scroll once the mouse pointer gets within the scrollSensitivity distance.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.Tolerance">
      <summary>
 Specifies which mode to use for testing whether the item being moved is hovering over another item. Possible values:
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.zIndex">
      <summary>
 Z-index for element/helper while being sorted.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.onActivateCallback">
      <summary>
 This event is triggered when using connected lists, 
 every connected list on drag start receives it.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.onBeforeStopCallback">
      <summary>
 This event is triggered when sorting stops, but when the placeholder/helper is still available.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.onChangeCallback">
      <summary>
 This event is triggered during sorting, but only when the DOM position has changed.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.onCreateCallback">
      <summary>
 Triggered when the sortable is created.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.onDeactivateCallback">
      <summary>
 his event is triggered when sorting was stopped, is propagated to all possible connected lists.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.onOutCallback">
      <summary>
 This event is triggered when a sortable item is moved away from a connected list.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.onOverCallback">
      <summary>
 This event is triggered when a sortable item is moved into a connected list.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.onReceiveCallback">
      <summary>
 This event is triggered when a connected sortable list has received an item from another list.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.onRemoveCallback">
      <summary>
 This event is triggered when a sortable item has been dragged out from the list and into another.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.onSortCallback">
      <summary>
 This event is triggered during sorting.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.onstartCallback">
      <summary>
 This event is triggered when sorting starts.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.onStopCallback">
      <summary>
 This event is triggered when sorting has stopped.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Sortable.onUpdateCallback">
      <summary>
 This event is triggered when the user stopped sorting and the DOM position has changed.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.ThemePicker.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.PollChart.DataSource">
      <summary>
 Gets or sets the data source that the PollChart is displaying data for.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.PollChart.DataMember">
      <summary>
 Gets or sets the name of the list or table in the data source for which the PollChart is displaying data.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.PollChart.VoteString">
      <summary>
 Display Text of type of data
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.PollChart.DataTextField">
      <summary>
 Gets or sets the field of the data source that provides the text of each Poll item.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.PollChart.DataValueField">
      <summary>
 Gets or sets the field of the data source that provides the value of each Poll item.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.DatePicker.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.ChangeMonth">
      <summary>
 Allows you to change the month by selecting from a drop-down list. 
 You can enable this feature by setting the attribute to true.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.ChangeYear">
      <summary>
 Allows you to change the year by selecting from a drop-down list. You can enable this 
 feature by setting the attribute to true. Use the yearRange option to control which 
 years are made available for selection
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.MinDate">
      <summary>
 Set a minimum selectable date via a Date object or as a string in the current 
 dateFormat, or a number of days from today (e.g. +7) or a string of values and 
 periods ('y' for years, 'm' for months, 'w' for weeks, 'd' 
 for days, e.g. '-1y -1m'), or null for no limit.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.MaxDate">
      <summary>
Set a maximum selectable date via a Date object or as a string in the current 
 dateFormat, or a number of days from today (e.g. +7) or a string of values and 
 periods ('y' for years, 'm' for months, 'w' for weeks, 'd' 
 for days, e.g. '+1m +1w'), or null for no limit.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.ButtonImage">
      <summary>
 The URL for the popup button image. If set, buttonText becomes the alt value 
 and is not directly displayed.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.ShowDefaultButtonImage">
      <summary>
 Shows the default Calendar icon and allows both the textbox and the icon to open the 
 calendar control
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.ButtonText">
      <summary>
 The text to display on the trigger button. Use in conjunction 
 with showOn equal to 'button' or 'both'.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.ButtonImageOnly">
      <summary>
 Set to true to place an image after the field to use as the trigger 
 without it appearing on a button.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.ShowOn">
      <summary>
 Have the datepicker appear automatically when the field receives focus ('textbox'), 
 appear only when a button is clicked ('button'), or appear when either event takes 
 place ('both').
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.ShowAnimation">
      <summary>
 Set the name of the animation used to show/hide the datepicker. 
 Use 'show' (the default), 'slideDown', 'fadeIn', any of the show/hide 
 jQuery UI effects, or '' for no animation.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.ShowOtherMonths">
      <summary>
 Display dates in other months (non-selectable) at the start or end of the 
 current month. To make these days selectable use selectOtherMonths.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.SelectOtherMonths">
      <summary>
 When true days in other months shown before or after the current 
 month are selectable. This only applies if showOtherMonths is also true.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.YearRange">
      <summary>
 Control the range of years displayed in the year drop-down: either relative 
 to today's year (-nn:+nn), relative to the currently selected year (c-nn:c+nn), 
 absolute (nnnn:nnnn), or combinations of these formats (nnnn:-nn). Note that 
 this option only affects what appears in the drop-down, to restrict which dates 
 may be selected use the minDate and/or maxDate options.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.ShowButtonPanel">
      <summary>
 Whether to show the button panel.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.DatePicker.CloseText">
      <summary>
 The text to display for the close link. 
 Use the showButtonPanel to display this button.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Dialog.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.ProgressBar.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ProgressBar.Value">
      <summary>
 Percentage out of 100 of bar that is filled
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.Tabs.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Tabs.SelectedTabIndex">
      <summary>
 Index of the currently selected tab.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Tabs.SelectedTab">
      <summary>
 The currently selected tab.  
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Tabs.AutoPostBack">
      <summary>
 Trigger a post back event when the selected tab is changed (on tab click).  
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Tabs.Tabs">
      <summary>
 Collection of Tab objects within Tabs
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Tabs.onSelectCallback">
      <summary>
 triggered when clicking a tab.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Tabs.onCreateCallback">
      <summary>
 triggered when tabs is created.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Tabs.onAddCallback">
      <summary>
 triggered when a tab is added.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Tabs.onShowCallback">
      <summary>
 triggered when a tab is shown.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Tab.Title">
      <summary>
 Name of the tab
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.Tab.TargetURL">
      <summary>
 Url for iframe within tab
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.TimePicker.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.Clock24Hour">
      <summary>
 Shows time in 24 hour format
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.TimeFormat">
      <summary>
 Change the display format of the time
 h - Hour with no leading 0
 hh - Hour with leading 0
 m - Minute with no leading 0
 mm - Minute with leading 0
 s - Second with no leading 0
 ss - Second with leading 0
 t - a or p for AM/PM
 T - A or P for AM/PM
 tt - am or pm for AM/PM
 TT - AM or PM for AM/PM
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.Separator">
      <summary>
 Place holder between date and time, default=" "
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.ShowHour">
      <summary>
 Show the Hour
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.ShowMinute">
      <summary>
 Show the minute
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.ShowSecond">
      <summary>
 Show the Second
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.StepHour">
      <summary>
 Increments the hours move by
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.StepMinute">
      <summary>
 Increments the minutes move by
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.StepSecond">
      <summary>
 Increments the seconds move by
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.HourGrid">
      <summary>
 Increments for the Hours to display at the bottom of the slider
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.MinuteGrid">
      <summary>
 Increments for the minutes to display at the bottom of the slider
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.ChangeMonth">
      <summary>
 Allows you to change the month by selecting from a drop-down list. 
 You can enable this feature by setting the attribute to true.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.ChangeYear">
      <summary>
 Allows you to change the year by selecting from a drop-down list. You can enable this 
 feature by setting the attribute to true. Use the yearRange option to control which 
 years are made available for selection
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.MinDate">
      <summary>
 Set a minimum selectable date via a Date object or as a string in the current 
 dateFormat, or a number of days from today (e.g. +7) or a string of values and 
 periods ('y' for years, 'm' for months, 'w' for weeks, 'd' 
 for days, e.g. '-1y -1m'), or null for no limit.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.MaxDate">
      <summary>
Set a maximum selectable date via a Date object or as a string in the current 
 dateFormat, or a number of days from today (e.g. +7) or a string of values and 
 periods ('y' for years, 'm' for months, 'w' for weeks, 'd' 
 for days, e.g. '+1m +1w'), or null for no limit.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.ButtonImage">
      <summary>
 The URL for the popup button image. If set, buttonText becomes the alt value 
 and is not directly displayed.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.ButtonText">
      <summary>
 The text to display on the trigger button. Use in conjunction 
 with showOn equal to 'button' or 'both'.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.ButtonImageOnly">
      <summary>
 Set to true to place an image after the field to use as the trigger 
 without it appearing on a button.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.ShowOn">
      <summary>
 Have the datepicker appear automatically when the field receives focus ('textbox'), 
 appear only when a button is clicked ('button'), or appear when either event takes 
 place ('both').
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.ShowAnimation">
      <summary>
 Set the name of the animation used to show/hide the datepicker. 
 Use 'show' (the default), 'slideDown', 'fadeIn', any of the show/hide 
 jQuery UI effects, or '' for no animation.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.ShowOtherMonths">
      <summary>
 Display dates in other months (non-selectable) at the start or end of the 
 current month. To make these days selectable use selectOtherMonths.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.SelectOtherMonths">
      <summary>
 When true days in other months shown before or after the current 
 month are selectable. This only applies if showOtherMonths is also true.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.YearRange">
      <summary>
 Control the range of years displayed in the year drop-down: either relative 
 to today's year (-nn:+nn), relative to the currently selected year (c-nn:c+nn), 
 absolute (nnnn:nnnn), or combinations of these formats (nnnn:-nn). Note that 
 this option only affects what appears in the drop-down, to restrict which dates 
 may be selected use the minDate and/or maxDate options.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.ShowButtonPanel">
      <summary>
 Whether to show the button panel.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.TimePicker.CloseText">
      <summary>
 The text to display for the close link. 
 Use the showButtonPanel to display this button.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:JqueryUIControls.ToolTip.registerControl(System.Web.UI.Page)">
      <summary>
 Registers all necessary javascript and css files for this control to function on the page.
 </summary>
      <param name="page">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.Text">
      <summary>
 Text inside the html element the causes the tootip to show
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.Title">
      <summary>
  displayed in the top of the tooltip
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.TargetControlID">
      <summary>
      </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.href">
      <summary>
 if content is local this will make the link usable as well as displaying a 
 tooltip.  If it is an iframe (ie not local) it contains the page to display
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.Sticky">
      <summary>
 keep visible until manually closed
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.ZIndexToolTip">
      <summary>
 Sets the z-index style property of the clueTip
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.PositionTooltip">
      <summary>
 Sets the type of positioning.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 Available options are 'auto', 'mouse', 'bottomTop', 'fixed'. 
 Change to 'mouse' if you want to override positioning by element and position the 
 clueTip based on where the mouse is instead. Change to 'bottomTop' if you want 
 positioning to begin below the mouse when there is room or above if not -- rather than 
 right or left of the elemnent and flush with element's top Change to 'fixed' if you 
 want the clueTip to appear in exactly the same location relative to the linked element no 
 matter where it appears on the page. Use 'fixed' at your own risk.
 </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.TopOffset">
      <summary>
 Number of px to offset clueTip from top of invoking element.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 For positionBy "auto", "mouse", and "bottomTop", the number will be added to the 
 clueTip's "top" value if the clueTip appears below the invoking element and subtracted 
 from it if the clueTip appears above. For positionBy "fixed", the number will always be 
 added to the "top" value, offsetting the clueTip from the top of the invoking element.
 </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.LeftOffset">
      <summary>
 Number of px to offset clueTip from left of invoking element.  
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 For positionBy "auto", "mouse", and "bottomTop", the number will be added to 
 clueTip's "left" value if the clueTip appears to the right of the invoking element 
 and subtracted if the clueTip appears to the left. For positionBy "fixed", the number 
 will always be added to the "left" value of the clueTip, offsetting it from the right 
 side of the invoking element.
 </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.MouseOutClose">
      <summary>
 close when clueTip is moused out
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.ClickThrough">
      <summary>
      </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.Local">
      <summary>
 Whether to use content from the same page for the clueTip's body or it is an iframe
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.HideLocal">
      <summary>
 If local option is set to true, this determines whether local content
 to be shown in clueTip should be hidden at its original location
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.ShowTitle">
      <summary>
 show title bar of the clueTip, even if title attribute not set
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.Width">
      <summary>
 The width of the clueTip only uses its value
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.Height">
      <summary>
 he height of the clueTip only uses its value
 Setting a specific height also sets the tootip to "overflow:auto"
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.HtmlTag">
      <summary>
 type of tag the invoking element is
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.ClosePosition">
      <summary>
 location of close text for sticky cluetips; can be 'top' or 'bottom' or 'title'
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.CloseText">
      <summary>
 text (or HTML) to to be clicked to close sticky clueTips
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.CssTheme">
      <summary>
 class added to outermost clueTip div in the form of 'cluetip-' + clueTipClass.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 this is also used for a "directional" class on the same div, depending on where 
 the clueTip is in relation to the invoking element. The class appears in the form 
 of 'cluetip-' + direction + cluetipClass. this allows you to create your own clueTip 
 theme in a separate CSS file or use one of the three pre-packaged 
 themes: default, jtip, or rounded.
 </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.Arrows">
      <summary>
 if true, displays arrow on appropriate side of clueTip.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
 this option displays a div containing an arrow background image. Arrow images are set 
 using the background-image property in the CSS. The direction of the arrow changes depending 
 on which side of the invoking element the clueTip appears. The arrows option sets the 
 background-position of the cluetip div so that the arrow will accurately point to the invoking 
 element, regardless of where it appears in relation to it.
 </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.DropShadow">
      <summary>
 set to false if you don't want the drop-shadow effect on the clueTip
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.DropShadowSteps">
      <summary>
 adjusts the size of the drop shadow
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.Activation">
      <summary>
 set to 'click' to force user to click to show clueTip
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.DelayedClose">
      <summary>
 close clueTip on a timed delay (experimental)
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.Truncate">
      <summary>
 number of characters to truncate clueTip's contents. if 0, no truncation occurs
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.OpenEffect">
      <summary>
 can be 'show' or 'slideDown' or 'fadeIn'
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.OpenSpeed">
      <summary>
 how fast the tootip opens in ms
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.HoverClass">
      <summary>
 class applied to the invoking element onmouseover and removed onmouseout
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.MouseTracking">
      <summary>
 if true, clueTip will track mouse movement (experimental)
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.onActivate">
      <summary>
 function to run just before clueTip is shown.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:JqueryUIControls.ToolTip.onShow">
      <summary>
 function to run just after clueTip is shown.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="T:SummerNote.SummerNote">
      <summary>
 WYSIWYG html editor.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:SummerNote.SummerNote.ToolbarModes">
      <summary>
 Enum of toolbar locations.
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.ID">
      <summary>
 Control id.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.attribute(System.String)">
      <summary>
 Client side attributes added to control.
 </summary>
      <param name="key">
      </param>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.Width">
      <summary>
 Edit area width.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.Height">
      <summary>
 Edit area Height.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.DisableButtons">
      <summary>
 Disables the cancel and save buttons and removes them from the editor.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.DisableCancel">
      <summary>
 Disables the cancel button.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.DisableSave">
      <summary>
 Disables the save button.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.DefaultHTML">
      <summary>
 The contents of the editor if the text property is empty. 
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.Text">
      <summary>
 The html text contents of the editor.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.BeforeReady">
      <summary>
 Javascript function that is called before the editor is created.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.ClientReady">
      <summary>
 Javascript function that is called once the editor is created
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.BeforeClientDestroyed">
      <summary>
 Javascript function that is called once before the editor is destroyed.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.ClientDestroyed">
      <summary>
 Javascript function that is called after the client after the editor is destroyed.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:SummerNote.SummerNote.ToolbarMode">
      <summary>
 Determines weather the toolbar is rendered over the editor or at the top of the screen.
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="E:SummerNote.SummerNote.Save_Clicked">
      <summary>
 The save button on the html editor is clicked.
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="E:SummerNote.SummerNote.Cancel_Clicked">
      <summary>
 the cancelbutton o the html editor is clicked.
 </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
      <remarks>
      </remarks>
    </member>
  </members>
</doc>