<?xml version="1.0"?>
<doc>
<assembly>
<name>
DTIMiniControls
</name>
</assembly>
<members>
<member name="P:DTIMiniControls.AddThisControl.Username">
 <summary>
 Property to get/set the Username
 </summary>
 <value>
 Username string passed to the set method
 </value>
 <returns>
 Username string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.AddThisControl.TextInstruction">
 <summary>
 Property to get/set the Text Instruction
 </summary>
 <value>
 Text instruction string passed to the set method
 </value>
 <returns>
 Text instruction string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="T:DTIMiniControls.postback">
<summary>
postback class.
</summary>
<remarks>
Auto-generated class.
</remarks>
</member>
<member name="P:DTIMiniControls.ClientButton.Text">
 <summary>
 Property to get/set Text for the button
 </summary>
 <value>
 Text string passed to the set method
 </value>
 <returns>
 Text string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ClientButton.OnClick">
 <summary>
 Property to get/set the On Click value for the button
 </summary>
 <value>
 Onclick string passed to the set method
 </value>
 <returns>
 Onclick string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.ClientButton.#ctor">
 <summary>
 Constructor for ClientButton class, sets default values for onclick and value
 </summary>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.ContainerIdManual">
 <summary>
 Property to get/set the manual Container ID
 </summary>
 <value>
 ContainerIDManual string passed to the set method
 </value>
 <returns>
 ContainerIDManual string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.RotatorEnabled">
 <summary>
 Property to get/set whether or not the rotator is enabled
 </summary>
 <value>
 enabled boolean passed to the set method
 </value>
 <returns>
 enabled boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.random">
 <summary>
 Property to get/set whether or not the rotator randomizes slides
 </summary>
 <value>
 random boolean passed to the set method
 </value>
 <returns>
 random boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.Container">
 <summary>
 Property to get/set the Container
 </summary>
 <value>
 Webcontrol passed to the set method
 </value>
 <returns>
 container webcontrol returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.fx">
 <summary>
 Property to get/set the Sroll Right effects during transition
 </summary>
 <value>
 String passed to the set method
 Default Value: "scrollRight"
 </value>
 <returns>
 fx string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.timeout">
 <summary>
 Property to get/set the timeout between slide transition in milliseconds
 </summary>
 <value>
 Integer passed to the set method
 Default Value: 4000
 </value>
 <returns>
 timeout integer returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.continuous">
 <summary>
 Property to get/set the Continuous option which determines whether or not the next transition will start immediately
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: False
 </value>
 <returns>
 continuous boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.speed">
 <summary>
 Property to get/set the Speed of the transition
 </summary>
 <value>
 integer passed to the set method
 Default Value: 1000
 </value>
 <returns>
 speed integer returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.speedIn">
 <summary>
 Property to get/set the Speed of the 'in' transition
 </summary>
 <value>
 String passed to the set method
 Default Value: "null"
 </value>
 <returns>
 speedIn string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.speedOut">
 <summary>
 Property to get/set the Speed of the 'out' transition
 </summary>
 <value>
 String passed to the set method
 Default Value: "null"
 </value>
 <returns>
 speedOut string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.next">
 <summary>
 Property to get/set the Next ID selector for the element to use as a click trigger for the next slide
 </summary>
 <value>
 String passed to the set method
 Default Value: "null"
 </value>
 <returns>
 nextID string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.prev">
 <summary>
 Property to get/set the Prev ID selector for the element to use as a click trigger for the previous slide
 </summary>
 <value>
 String passed to the set method
 Default Value: "null"
 </value>
 <returns>
 prevID string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.easing">
 <summary>
 Property to get/set the Easing method for both in and out transitions
 </summary>
 <value>
 String passed to the set method
 Default Value: "null"
 </value>
 <returns>
 easing string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.easeIn">
 <summary>
 Property to get/set the Ease In for ""in"" transitions
 </summary>
 <value>
 String passed to the set method
 Default Value: "null"
 </value>
 <returns>
 easeIn string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.easeOut">
 <summary>
 Property to get/set the Ease Out for out transitions
 </summary>
 <value>
 String passed to the set method
 Default Value: "null"
 </value>
 <returns>
 easeOut string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.shuffle">
 <summary>
 Property to get/set the Shuffle coordinates for the shuffle animation
 </summary>
 <value>
 String passed to the set method
 Default Value: "null"
 </value>
 <returns>
 shuffle string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.pause">
 <summary>
 Property to get/set the Pause which enables/disables 'pause on hover'
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: False
 </value>
 <returns>
 pause boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.delay">
 <summary>
 Property to get/set the Delay in milliseconds for the first transition
 </summary>
 <value>
 Integer passed to the set method
 Default Value: 0
 </value>
 <returns>
 delay integer returned by the get method
 </returns>
 <remarks>
 Can be negative
 </remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.nowrap">
 <summary>
 Property to get/set the No Wrap which enables/disables slideshow wrapping
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: False
 </value>
 <returns>
 nowrap boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.requeueTimeout">
 <summary>
 Property to get/set the Requeue Timeout in ms 
 </summary>
 <value>
 Integer passed to the set method
 Default Value: 0
 </value>
 <returns>
 requeueTimeout integer returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.DivRotator.onPrevNextEvent">
 <summary>
 callback fn for prev/next events: function(isNext, zeroBasedSlideIndex, slideElement)  
 </summary>
 <value>
 string passed to the set method
 </value>
 <returns>
 onPrevNextEvent string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.FreezeIt.UseInnerWidthAndHeight">
 <summary>
 Property to get/set UseInnerWidthAndHeight
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: 
 </value>
 <returns>
 useInnerWidthAndHeight boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.FreezeIt.DisplayOnAnyPostback">
 <summary>
 Property to get/set DisplayOnAnyPostback
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: 
 </value>
 <returns>
 displayOnAnyPostback boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.FreezeIt.BackgroundColor">
 <summary>
 Property to get/set BackgroundColor
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 bgColor string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.FreezeIt.BackgroundOpacity">
 <summary>
 Property to get/set BackgroundOpacity
 </summary>
 <value>
 Double passed to the set method
 Default Value: 
 </value>
 <returns>
 BackgroundOpacity double returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.FreezeIt.FreezeId">
 <summary>
 Property to get/set FreezeId
 </summary>
 <value>
 Double passed to the set method
 Default Value: 
 </value>
 <returns>
 freezeId double returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.FreezeIt.IsFrozen">
 <summary>
 Property to get/set IsFrozen
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: 
 </value>
 <returns>
 isFrozen boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.FreezeIt.UseCentering">
 <summary>
 Property to get/set UseCentering
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: 
 </value>
 <returns>
 useCenter boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.HiddenFieldEncoded.ReferenceId">
 <summary>
 Reference ID
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 reference string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.HiddenFieldEncoded.Base_Load(System.Object,System.EventArgs)">
 <summary>
 
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.EditLabel.labelCssClass">
 <summary>
 Property to get/set the Label CSS Class, the class to apply to the label when displaying
 </summary>
 <value>
 String passed to the set method
 Default Value: ""
 </value>
 <returns>
 lblEditLabel.CssClass string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.EditLabel.textboxCssClass">
 <summary>
 Property to get/set the Text Box Class, the class to apply to the textbox when editing
 </summary>
 <value>
 String passed to the set method
 Default Value: ""
 </value>
 <returns>
 tbEditLabel.CssClass string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.EditLabel.LabelOnly">
 <summary>
 Property to get/set LabelOnly, when enabled will only render the label
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: False
 </value>
 <returns>
 labelOnly boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.EditLabel.Text">
 <summary>
 Property to get/set the Text of the control
 </summary>
 <value>
 string passed to the set method
 Default Value: "LabelText"
 </value>
 <returns>
 tbEditLabel.Text string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="E:DTIMiniControls.EditLabel.TextChanged">
 <summary>
 The Submit event.
 </summary>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.EditLabel.EditLabelInclude.RegisterJs(System.Web.UI.Page@)">
 <summary>
 Registers javascript on a given page
 </summary>
 <param name="page">
 The page that the javascript is to be registered on
 </param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.EditLabel.EditLabelInclude.#ctor(System.String,System.String)">
 <summary>
 Constructor for the EditLabel class
 </summary>
 <param name="type">
 String argument for the type
 </param>
 <param name="filename">
 String argument for the src filename
 </param>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.FreezeScreen.DisplayOnAnyPostback">
 <summary>
 Property to get/set DisplayOnAnyPostback
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: 
 </value>
 <returns>
 displayOnAnyPostback boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.FreezeScreen.DisplayOnPartialPostback">
 <summary>
 Property to get/set DisplayOnPartialPostback
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: 
 </value>
 <returns>
 displayOnPartialPostback boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.FreezeScreen.BackgroundColor">
 <summary>
 Property to get/set BackgroundColor
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 bgColor string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.FreezeScreen.BackgroundOpacity">
 <summary>
 Property to get/set BackgroundOpacity
 </summary>
 <value>
 Double passed to the set method
 Default Value: 
 </value>
 <returns>
 opacity double returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.HTMLList.OrderList">
 <summary>
 Property to get/set OrderList
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: False
 </value>
 <returns>
 orderList boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.HTMLList.addListItem(System.String,System.String,System.String)">
 <summary>
 Adds an HTML list item 
 </summary>
 <param name="text">
 Text string for the list item
 </param>
 <param name="className">
 Class name string for the list item
 </param>
 <param name="href">
 href string for the list item
 </param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.HTMLList.addListItem(System.String,System.Boolean)">
 <summary>
 Adds a new HTML list item
 </summary>
 <param name="text">
 Text string for the list item
 </param>
 <param name="clickable">
 Boolean to designate clickability
 </param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.HTMLList.addListItem(DTIMiniControls.HTMLListItem@)">
 <summary>
 Adds an HTML list item
 </summary>
 <param name="li">
 Reference to an HTMLListItem to be added to the list
 </param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.HTMLList.addListItem(DTIMiniControls.HTMLList@)">
 <summary>
 Adds an HTML list
 </summary>
 <param name="ul">
 Reference to an HTML List
 </param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.HTMLList.Count">
 <summary>
 Counts the number of controls
 </summary>
 <returns>
 Returns the count as an iteger
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.HTMLListItem.Clickable">
 <summary>
 Property to get/set Clickability
 </summary>
 <value>
 Boolean passed to the set method
 </value>
 <returns>
 clickable boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.HTMLListItem.NavigateURL">
 <summary>
 Property to get/set NavigateURL
 </summary>
 <value>
 String passed to the set method
 </value>
 <returns>
 navigateURL string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.HTMLListItem.Text">
 <summary>
 Property to get/set Text
 </summary>
 <value>
 String passed to the set method
 </value>
 <returns>
 text string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.HTMLListItem.#ctor(System.String,System.String,System.String)">
 <summary>
 Constructor for HTMLList class
 </summary>
 <param name="_text">
 String for text
 </param>
 <param name="className">
 String for the class name
 </param>
 <param name="href">
 String for the href
 </param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.HTMLListItem.#ctor(System.String,System.Boolean)">
 <summary>
 Constructor for HTMLList class
 </summary>
 <param name="text">
 String for text
 </param>
 <param name="clickable">
 Boolean to set clickability
 </param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.HTMLListItem.#ctor">
 <summary>
 Constructor for HTMLList class
 </summary>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.HTMLListItem.addItems(DTIMiniControls.HTMLListItem[]@)">
 <summary>
 
 </summary>
 <param name="items"></param>
 <remarks></remarks>
</member>
<member name="T:DTIMiniControls.iframed">
<summary>
iframed class.
</summary>
<remarks>
Auto-generated class.
</remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.CroppedCoordinatesString">
 <summary>
 Property to get Cropped Coordinates
 </summary>
 <returns>
 Cropped Coordinates string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.CroppedX1">
 <summary>
 Property to get the Cropped X1 Coordinate
 </summary>
 <returns>
 Cropped X1 Coordinate string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.CroppedY1">
 <summary>
 Property to get the Cropped Y1 Coordinate
 </summary>
 <returns>
 Cropped Y1 Coordinate String returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.CroppedX2">
 <summary>
 Property to get the Cropped X2 Coordinate
 </summary>
 <returns>
 Cropped X2 Coordinate String returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.CroppedY2">
 <summary>
 Property to get the Cropped Y2 Coordinate
 </summary>
 <returns>
 Cropped Y2 Coordinate String returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.CroppedWidth">
 <summary>
 Property to get the Cropped Width
 </summary>
 <returns>
 Cropped Width String returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.CroppedHeight">
 <summary>
 Property to get the Cropped Height
 </summary>
 <returns>
 Cropped Height string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.bgOpacity">
 <summary>
 Property to get/set the opacity of outer image when cropping. Must be between 0 and 10
 </summary>
 <value>
 Integer passed to the set method
 Default Value: 6
 </value>
 <returns>
 bgOpacity integer returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.bgColor">
 <summary>
 Property to get/set the color of background container
 </summary>
 <value>
 String passed to the set method
 Default Value: "black"
 </value>
 <returns>
 bgColor string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.aspectRatio">
 <summary>
 Property to get/set the aspect ratio of w/h (e.g. 1 for square)
 </summary>
 <value>
 String passed to the set method
 Default Value: ""
 </value>
 <returns>
 aspectRatio string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.setSelect">
 <summary>
 Property to get/set an initial selection area
 </summary>
 <value>
 String passed to the set method
 Default Value: ""
 </value>
 <returns>
 setSelect string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.minSize">
 <summary>
 Property to get/set the minimum width/height (array [ w, h ]), use """" for unbounded dimension
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 minSize string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.maxSize">
 <summary>
 Property to get/set the maximum width/height (array [ w, h ]), use """" for unbounded dimension
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 maxSize string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.OnSelectFunctionName">
 <summary>
 Property to get/set the name of the JS function to handle the onSelect event
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 onSelectFunctionName string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ImageCropper.returnImage.format">
 <summary>
 Property to get the image format
 </summary>
 <returns>
 format returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ObfuscateEmail.Address">
 <summary>
 Property to get/set the email address to be sent to
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 address string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.ObfuscateEmail.decodeFromBase64(System.String)">
 <summary>
 Decodes a given string from Base 64 encoding 
 </summary>
 <param name="value">
 String to be decoded
 </param>
 <returns>
 Decoded string
 </returns>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.ObfuscateEmail.encodeToBase64(System.String)">
 <summary>
 Encodes a given string into Base 64
 </summary>
 <param name="value">
 String to be encoded
 </param>
 <returns>
 Encoded string
 </returns>
 <remarks></remarks>
</member>
<member name="F:DTIMiniControls.Pager._postBackPageChanges">
 <summary>
 By default the page is reloaded with query String "page" set to the current page.
 If True a postback event is called and the pageChange event is raised.
 </summary>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.Pager.PageCount">
 <summary>
 Total number of pages
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.Pager.CurrentPage">
 <summary>
 Page currently being viewed
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:DTIMiniControls.Pager._PagesToDisplay">
 <summary>
 Number of pages to display in pager.  Will always be an odd number
 </summary>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.Pager.PagesToSkip">
 <summary>
 Number of pages from the current page the skip link skip to
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.RollOverImage.ImageRollOverUrl">
 <summary>
 Property to get/set the Image Roll Over URL
 </summary>
 <value>
 String passed to the set method
 Default Value: ""
 </value>
 <returns>
 imageRollOverUrl string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.RollOverImage.RollOverImageInclude.RegisterJs(System.Web.UI.Page@)">
 <summary>
 
 </summary>
 <param name="page"></param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.RollOverImage.RollOverImageInclude.#ctor(System.String,System.String)">
 <summary>
 Constructor for the RollOverImage class
 </summary>
 <param name="type">
 Type of script
 </param>
 <param name="filename">
 Filename of script
 </param>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ScriptBlock.ScriptText">
 <summary>
 Property to get/set the text of the script
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 Text string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ScriptBlock.Language">
 <summary>
 Property to get/set the language
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 language string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ScriptBlock.TypeAttr">
 <summary>
 Property to get/set the attribute type
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 type string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="E:DTIMiniControls.Sortable.ItemReOrdered">
 <summary>
 Occurs when a control has been re-ordered
 </summary>
 <param name="item">DTIMiniControls.SortableItem that has been re-ordered</param>
 <param name="newIndex">System.Integer 0 based index of new position</param>
 <remarks></remarks>
</member>
<member name="E:DTIMiniControls.Sortable.DataBound">
 <summary>
 Occurs when a control is bound to a datasource
 </summary>
 <param name="item">DTIMiniControls.SortableItem that is being bound</param>
 <remarks></remarks>
</member>
<member name="E:DTIMiniControls.Sortable.OrderChanged">
 <summary>
 Occurs after all items have been successfully re-ordered
 </summary>
 <param name="newOrder">System.String() order of panel ids after being re-ordered</param>
 <param name="oldOrder">System.String() order of panel ids before being re-ordered</param>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.Sortable.AdminOn">
 <summary>
 Determines is Sortable can be reordered
 </summary>
</member>
<member name="P:DTIMiniControls.Sortable.AxisRestriction">
 <summary>
 Restricts Items to being moved only vertically (restrict y) or horizantlly (restrict x)
 </summary>
</member>
<member name="P:DTIMiniControls.Sortable.ConnectByClass">
 <summary>
 connects multiple sortables by the same classname,
 Items can be moved between sortables
 </summary>
</member>
<member name="P:DTIMiniControls.Sortable.ConnectToID">
 <summary>
 Connects sortable to another specific sortable based on its ID
 so items can be moved between sortables
 </summary>
</member>
<member name="P:DTIMiniControls.Sortable.PlaceHolderClass">
 <summary>
 Class name for showing where an item can be placed while sorting
 </summary>
</member>
<member name="P:DTIMiniControls.Sortable.CursorType">
 <summary>
 Determines what the cursor looks like while moving items
 </summary>
</member>
<member name="P:DTIMiniControls.Sortable.CursorPosition">
 <summary>
 determines where in the item the cursor is located when moving
 </summary>
</member>
<member name="P:DTIMiniControls.Sortable.CursorPositionValue">
 <summary>
 Gets or Sets the offset value of the CursorPosition Property
 </summary>
</member>
<member name="P:DTIMiniControls.Sortable.DragOnEmpty">
 <summary>
 Whether or not items can be put into sortable once it is empty
 </summary>
</member>
<member name="P:DTIMiniControls.Sortable.HelperType">
 <summary>
 Gets or sets the type of object moved, actual or a copy
 </summary>
</member>
<member name="P:DTIMiniControls.Sortable.AutoPostBack">
 <summary>
 Gets or sets a value indicating whether a postback to the server 
 automatically occurs when the user changes the order of the list.
 </summary>
</member>
<member name="P:DTIMiniControls.Sortable.DataSource">
 <summary>
 Gets or sets the DataTable or DataView from which the data-bound control retrieves its list of data items.
 </summary>
 <value>System.Object that represents the data source from which the data-bound control retrieves its data. 
 The default is Nothing.</value>
 <remarks>Only System.DataTable or System.DataView will produce a valid DataSource</remarks>
</member>
<member name="P:DTIMiniControls.Sortable.DataValueField">
 <summary>
 Gets or sets the field of the data source that provides the control ID of each list item
 </summary>
 <value>System.String that specifies the field of the data source that provides the value 
 of each list item. The default is String.Empty.</value>
</member>
<member name="P:DTIMiniControls.Sortable.DataTextField">
 <summary>
 Gets or sets the field of the data source that provides the text content of the list items.
 </summary>
 <value>System.String that specifies the field of the data source that provides the text 
 of each list item. The default is String.Empty.</value>
</member>
<member name="P:DTIMiniControls.Sortable.DataSortField">
 <summary>
 Gets or sets the field of the data source that provides the order of the list items.
 </summary>
 <value>System.String that specifies the field of the data source that provides the order 
 of each list item. The default is String.Empty.</value>
</member>
<member name="P:DTIMiniControls.Sortable.isOrderChanged">
 <summary>
 Gets a value indicating whether the control has be re-ordered
 </summary>
 <value>Sytem.Boolean true if list has be re-ordered; otherwise false</value>
</member>
<member name="M:DTIMiniControls.Sortable.DataBind">
 <summary>
 Binds a data source to the invoked server control and all its child controls.
 </summary>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.Sortable.addSortableItem(DTIMiniControls.SortableItem@)">
 <summary>
 Adds Item to end of control collection
 </summary>
 <param name="SortItem">DTIMiniControls.SortableItem to add to end of collection</param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.Sortable.addSortableItem(System.String)">
 <summary>
 Adds Item to end of control collection
 </summary>
 <param name="SortItem">System.String to add to end of collection</param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.Sortable.addSortableItem(System.Web.UI.Control)">
 <summary>
 Adds Item to end of control collection
 </summary>
 <param name="SortItem">System.Web.UI.Control to add to end of collection</param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.Sortable.addSortableItem(System.String,System.String)">
 <summary>
 Adds Item to end of control collection
 </summary>
 <param name="SortItem">System.String to add to end of collection</param>
 <param name="ContainerID">System.String Id of parent Panel</param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.Sortable.addSortableItem(System.Web.UI.Control,System.String)">
 <summary>
 Adds Item to end of control collection
 </summary>
 <param name="SortItem">System.Web.UI.Control to add to end of collection</param>
 <param name="ContainerID">System.String Id of parent Panel</param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.Sortable.getNewOrderList">
 <summary>
 Gets the array of re-ordered panel ID's
 </summary>
 <returns>
 A System.String array of the Panel IDs after re-ordering
 </returns>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.Sortable.getOriginalOrderList">
 <summary>
 Gets the array of panel ID's before re-ording
 </summary>
 <returns>
 A System.String array of the Panel IDs before re-ordering
 </returns>
 <remarks></remarks>
</member>
<member name="T:DTIMiniControls.SortableItem">
 <summary>
 
 </summary>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.SortableItem.Value">
 <summary>
 Gets the PanelID or the Databound value
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.SortableItem.PanelID">
 <summary>
 Gets the ID of the Parent Panel
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.SortableItem.Text">
 <summary>
 Gets text of sortable LiteralControl, its type, or its Databound text
 </summary>
 <value></value>
 <returns>System.String of Literal Control or string representation of it type</returns>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.SortableItem.#ctor(System.String,System.Web.UI.Control@)">
 <summary>
 Initializes a new instance of the SortableItem class.
 </summary>
 <param name="ParentPanelID">System.String ID of parent panel</param>
 <param name="SortableControl">System.Web.UI.Control to be sorted</param>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.SortableItem.#ctor(System.String,System.Web.UI.ControlCollection@)">
 <summary>
 Initializes a new instance of the SortableItem class.
 </summary>
 <param name="ParentPanelID">System.String ID of parent panel</param>
 <param name="SortableControls">System.Web.UI.ControlCollection to be sorted</param>
 <remarks>All of the Controls in SortableControls will be as one SortableItem</remarks>
</member>
<member name="P:DTIMiniControls.StarRater.CallbackFunction">
 <summary>
 Property to get/set the Callback Function
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 callback string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.StarRater.NumberOfStars">
 <summary>
 Property to get/set the number of stars
 </summary>
 <value>
 Integer passed to the set method
 Default Value: 
 </value>
 <returns>
 number_of_stars integer returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TabSlider.ConnectByClass">
 <summary>
 True to select the class rather than ID for the tabslider
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TabSlider.HandleCssClass">
 <summary>
 class of the element that will be your tab: an anchor
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TabSlider.TabLocation">
 <summary>
 side of screen where tab lives
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TabSlider.Action">
 <summary>
 action to trigger animation
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TabSlider.Speed">
 <summary>
 speed of animation in ms
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TabSlider.ImageUrl">
 <summary>
 path to the image for the tab
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TabSlider.ImageHeight">
 <summary>
 height of tab image
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TabSlider.ImageWidth">
 <summary>
 width of tab image
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TabSlider.TopPosition">
 <summary>
 position from the top. use if tabLocation is left or right
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TabSlider.LeftPosition">
 <summary>
 position from left. use if tabLocation is bottom or top
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TabSlider.FixedScrollPosition">
 <summary>
 true makes it stick(fixed position) on scroll
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TabSlider.OnLoadSlideOut">
 <summary>
 True makes the tab slide out after loading
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.Tagger.ShowSubmit">
 <summary>
 Property to get/set the Show Submit toggle
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: 
 </value>
 <returns>
 ShowSubmit boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.Tagger.AddTagText">
 <summary>
 Property to get/set the tag text to be added
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 AddTagText string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.Tagger.CurrentTagText">
 <summary>
 Property to get/set the Current Tag Text
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 CurrentTagText string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.Tagger.SeparatorCharacter">
 <summary>
 Property to get/set the Separator Character
 </summary>
 <value>
 String passed to the set method
 Default Value: 
 </value>
 <returns>
 SeparatorCharacter string returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.Tagger.ShowPopularTags">
 <summary>
 Property to get/set whether or not Popular Tags is shown.
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: 
 </value>
 <returns>
 ShowPopularTags boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.Tagger.popularTagsSet">
 <summary>
 Property to set the list of popular tags
 </summary>
 <value>
 String List passed to the set method
 Default Value: 
 </value>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.Tagger.currentTagsList">
 <summary>
 Property to get/set the list of current tags
 </summary>
 <value>
 String List passed to the set method
 Default Value: 
 </value>
 <returns>
 String list returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.Tagger.ValidateOnFormSubmit">
 <summary>
 Property to get/set whether or not the form will be validated on submit
 </summary>
 <value>
 Boolean passed to the set method
 Default Value: 
 </value>
 <returns>
 ValidateOnFormSubmit boolean returned by the get method
 </returns>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.Tagger.TaggerInclude.RegisterJs(System.Web.UI.Page@)">
 <summary>
 Registers javascript on a given page
 </summary>
 <param name="page">
 The page that the javascript is to be registered on
 </param>
 <remarks></remarks>
</member>
<member name="T:DTIMiniControls.TagsUC">
<summary>
TagsUC class.
</summary>
<remarks>
Auto-generated class.
</remarks>
</member>
<member name="F:DTIMiniControls.TagsUC._lblCurrTags">
<summary>
lblCurrTags control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:DTIMiniControls.TagsUC._DTICurrTags">
<summary>
DTICurrTags control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:DTIMiniControls.TagsUC._hfTags">
<summary>
hfTags control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:DTIMiniControls.TagsUC._DTIPopularTagHolder">
<summary>
DTIPopularTagHolder control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:DTIMiniControls.TagsUC._lblPopularTags">
<summary>
lblPopularTags control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:DTIMiniControls.TagsUC._DTIPopularTags">
<summary>
DTIPopularTags control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:DTIMiniControls.TagsUC._lblAddTags">
<summary>
lblAddTags control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:DTIMiniControls.TagsUC._tbNewTags">
<summary>
tbNewTags control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:DTIMiniControls.TagsUC._btnAdd">
<summary>
btnAdd control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:DTIMiniControls.TagsUC._btnSubmit">
<summary>
btnSubmit control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="M:DTIMiniControls.TextBoxEncoded.decodeFromURL(System.String)">
 <summary>
 Decodes a given string from URL encoding 
 </summary>
 <param name="value">
 String to be decoded
 </param>
 <returns>
 Decoded string
 </returns>
 <remarks></remarks>
</member>
<member name="M:DTIMiniControls.TextBoxEncoded.encodeToURLString(System.String)">
 <summary>
 Encodes a given string into  string
 </summary>
 <param name="value">
 String to be encoded
 </param>
 <returns>
 Encoded string
 </returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.Text">
 <summary>
 Text inside the html element the causes the tootip to show
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.Title">
 <summary>
  displayed in the top of the tooltip
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.TargetControlID">
 <summary>
 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.href">
 <summary>
 if content is local this will make the link usable as well as displaying a 
 tooltip.  If it is an iframe (ie not local) it contains the page to display
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.Sticky">
 <summary>
 keep visible until manually closed
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.ZIndexToolTip">
 <summary>
 Sets the z-index style property of the clueTip
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.PositionTooltip">
 <summary>
 Sets the type of positioning.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 Available options are 'auto', 'mouse', 'bottomTop', 'fixed'. 
 Change to 'mouse' if you want to override positioning by element and position the 
 clueTip based on where the mouse is instead. Change to 'bottomTop' if you want 
 positioning to begin below the mouse when there is room or above if not -- rather than 
 right or left of the elemnent and flush with element's top Change to 'fixed' if you 
 want the clueTip to appear in exactly the same location relative to the linked element no 
 matter where it appears on the page. Use 'fixed' at your own risk.
 </remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.TopOffset">
 <summary>
 Number of px to offset clueTip from top of invoking element.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 For positionBy "auto", "mouse", and "bottomTop", the number will be added to the 
 clueTip's "top" value if the clueTip appears below the invoking element and subtracted 
 from it if the clueTip appears above. For positionBy "fixed", the number will always be 
 added to the "top" value, offsetting the clueTip from the top of the invoking element.
 </remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.LeftOffset">
 <summary>
 Number of px to offset clueTip from left of invoking element.  
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 For positionBy "auto", "mouse", and "bottomTop", the number will be added to 
 clueTip's "left" value if the clueTip appears to the right of the invoking element 
 and subtracted if the clueTip appears to the left. For positionBy "fixed", the number 
 will always be added to the "left" value of the clueTip, offsetting it from the right 
 side of the invoking element.
 </remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.MouseOutClose">
 <summary>
 close when clueTip is moused out
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.ClickThrough">
 <summary>
 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.Local">
 <summary>
 Whether to use content from the same page for the clueTip's body or it is an iframe
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.HideLocal">
 <summary>
 If local option is set to true, this determines whether local content
 to be shown in clueTip should be hidden at its original location
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.ShowTitle">
 <summary>
 show title bar of the clueTip, even if title attribute not set
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.Width">
 <summary>
 The width of the clueTip only uses its value
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.Height">
 <summary>
 he height of the clueTip only uses its value
 Setting a specific height also sets the tootip to "overflow:auto"
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.HtmlTag">
 <summary>
 type of tag the invoking element is
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.ClosePosition">
 <summary>
 location of close text for sticky cluetips; can be 'top' or 'bottom' or 'title'
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.CloseText">
 <summary>
 text (or HTML) to to be clicked to close sticky clueTips
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.CssTheme">
 <summary>
 class added to outermost clueTip div in the form of 'cluetip-' + clueTipClass.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 this is also used for a "directional" class on the same div, depending on where 
 the clueTip is in relation to the invoking element. The class appears in the form 
 of 'cluetip-' + direction + cluetipClass. this allows you to create your own clueTip 
 theme in a separate CSS file or use one of the three pre-packaged 
 themes: default, jtip, or rounded.
 </remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.Arrows">
 <summary>
 if true, displays arrow on appropriate side of clueTip.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 this option displays a div containing an arrow background image. Arrow images are set 
 using the background-image property in the CSS. The direction of the arrow changes depending 
 on which side of the invoking element the clueTip appears. The arrows option sets the 
 background-position of the cluetip div so that the arrow will accurately point to the invoking 
 element, regardless of where it appears in relation to it.
 </remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.DropShadow">
 <summary>
 set to false if you don't want the drop-shadow effect on the clueTip
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.DropShadowSteps">
 <summary>
 adjusts the size of the drop shadow
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.Activation">
 <summary>
 set to 'click' to force user to click to show clueTip
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.DelayedClose">
 <summary>
 close clueTip on a timed delay (experimental)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.Truncate">
 <summary>
 number of characters to truncate clueTip's contents. if 0, no truncation occurs
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.OpenEffect">
 <summary>
 can be 'show' or 'slideDown' or 'fadeIn'
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.OpenSpeed">
 <summary>
 how fast the tootip opens in ms
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.HoverClass">
 <summary>
 class applied to the invoking element onmouseover and removed onmouseout
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.MouseTracking">
 <summary>
 if true, clueTip will track mouse movement (experimental)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.onActivate">
 <summary>
 function to run just before clueTip is shown.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.ToolTip.onShow">
 <summary>
 function to run just after clueTip is shown.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.MultiSelection">
 <summary>
 This controls multiple selection. Can be either false - multiple 
 selection is off, "ctrl" - multiple selection is on when the Ctrl 
 key is held down or "on" - multiple selection is always on.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.MultiTreeEnabled">
 <summary>
 If set to true all trees can have drop to this tree.
 If specific trees are desired use MultiTreeString
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.MultiTreeString">
 <summary>
 will accept from any tree or javascript Array - a javascript 
 array of strings, each one representing the ID of the container
 of a tree to accept from
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.CheckChildren">
 <summary>
 Propagates check to children
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.ShowContextMenu">
 <summary>
 Sets the visiblility of the context menu
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.ValidChildren">
 <summary>
 Types of nodes allowed as root nodes.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Can be an Array of string values (one for each allowed type), 
 if set to String "all", nodes of any type can be root nodes.</remarks>
</member>
<member name="P:DTIMiniControls.TreeList.MaxChildDepth">
 <summary>
 Gets/Sets the maximum number of children a node can have.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.MaxChildDepthDefaultType">
 <summary>
 Gets/Sets the maximum number of children a default node can have.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.MaxDepth">
 <summary>
 Gets/Sets the maximum depth of the tree.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.MaxDepthDefaultType">
 <summary>
 Gets/Sets the maximum depth of a default node.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.ReadModeOnly">
 <summary>
 set to false if you want postback events on the tree
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.Drag_Copy">
 <summary>
 controls how to copy when dragging
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.No_Int_Copy">
 <summary>
 true disables copying within the same tree
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.AutoInsertOnDrop">
 <summary>
 True automatcally creates the node after after dropping it in
 another tree.  False and the node would have to be created manually
 in the ondrop callback
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DTIMiniControls.TreeList.OnLoadCallBack">
 <summary>
 Javascript to fire when a tree is loaded
 <code>
 <example>
 function(TREE_OBJ) { }
 </example>
 </code>
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Triggered when the tree is loaded with data for the first time or refreshed. 
 Receives one parameter - a reference to the tree instance.</remarks>
</member>
<member name="P:DTIMiniControls.TreeList.OnMoveCallBack">
 <summary>
 Javascript to fire when a node is moved
 <code>
 <example>
 function(NODE, REF_NODE, TYPE, TREE_OBJ, RB) { }
 </example>
 </code>
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Receives five parameters - the node that was moved, the reference node in the move, 
 the new position relative to the reference node (one of "before", "after" or "inside"), 
 a reference to the tree instance and a rollback object that you can use with 
 jQuery.tree.rollback.</remarks>
</member>
<member name="P:DTIMiniControls.TreeList.OnSelectCallBack">
 <summary>
 Javascript to fire when a node is selected
 <code>
 <example>
 function(NODE, TREE_OBJ) { }
 </example>
 </code>
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Receives two parameters - the selected node and a reference to the tree instance.</remarks>
</member>
<member name="P:DTIMiniControls.TreeList.OnCopyCallBack">
 <summary>
 Javascript to fire when a node is Copied
 <code>
 <example>
 function(NODE, REF_NODE, TYPE, TREE_OBJ, RB) { }
 </example>
 </code>
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Receives five parameters - the node that was copied, the reference node in the copy, 
 the new position relative to the reference node (one of "before", "after" or "inside"), 
 a reference to the tree instance and a rollback object that you can use with 
 jQuery.tree.rollback.</remarks>
</member>
<member name="P:DTIMiniControls.TreeList.OnDropCallBack">
 <summary>
 Javascript to fire when a node is Droped
 <code>
 <example>
 function(NODE, REF_NODE, TYPE, TREE_OBJ) { }
 </example>
 </code>
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Receives four parameters - the foreign node that was dropped, 
 the reference node in the move, the new position relative to the reference 
 node (one of "before", "after" or "inside") and a reference to 
 the tree instance.</remarks>
</member>
<member name="P:DTIMiniControls.TreeList.OnCreateCallBack">
 <summary>
 Javascript to fire when a node is created
 <code>
 <example>
 function(NODE, REF_NODE, TYPE, TREE_OBJ, RB) { }
 </example>
 </code>
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Receives five parameters - the node that was created, 
 the reference node in the create operation, the new position relative to the 
 reference node (one of "before", "after" or "inside"), a reference to the tree 
 instance and a rollback object that you can use with jQuery.tree.rollback.</remarks>
</member>
<member name="P:DTIMiniControls.TreeList.OnRenameCallBack">
 <summary>
 Javascript to fire when a node is renamed
 <code>
 <example>
 function(NODE, TREE_OBJ, RB) { }
 </example>
 </code>
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Receives three parameters - the renamed node, 
 a reference to the tree instance and a rollback object that you can use 
 with jQuery.tree.rollback.</remarks>
</member>
<member name="P:DTIMiniControls.TreeList.OnSearchCallBack">
 <summary>
 Javascript to fire after a search is performed and results are ready
 <code>
 <example>
 function(NODES, TREE_OBJ) { NODES.addClass("search"); }
 </example>
 </code>
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Receives two parameters - a jQuery collection of nodes matching the search 
 and a reference to the tree instance.</remarks>
</member>
<member name="P:DTIMiniControls.TreeList.BeforeMoveCallBack">
 <summary>
 Javascript to fire before a node is moved
 <code>
 <example>
 function(NODE, REF_NODE, TYPE, TREE_OBJ) { return true }
 </example>
 </code>
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Receives four parameters - the node about to be moved, 
 the reference node in the move, the new position relative to the 
 reference node (one of "before", "after" or "inside") and a reference 
 to the tree instance. If false is returned the node is not moved.</remarks>
</member>
<member name="P:DTIMiniControls.TreeList.BeforeCreateCallBack">
 <summary>
 Javascript to fire before a node is created
 <code>
 <example>
 function(NODE, REF_NODE, TYPE, TREE_OBJ) { return true }
 </example>
 </code>
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Receives four parameters - the node about to be created, 
 the reference node in the creation, the new position relative to 
 the reference node (one of "before", "after" or "inside") and a 
 reference to the tree instance. If false is returned the 
 node is not created.</remarks>
</member>
<member name="M:DTIMiniControls.TreeList.addCustomContextMenu(System.String,System.String,System.String,System.String,System.Boolean)">
 <summary>
 Adds a custom context menu item to the tree
 </summary>
 <param name="label">Visible text of menu</param>
 <param name="icon">you can set this to a classname or a path to an icon like ./myimage.gif or empty string</param>
 <param name="visibleFunction">javascript to call to determine items visibility  return 0 or 1, If empty returns true
 <example>function (node, tree) {if(tree.parent(node) != -1){return 1;}else{return 0;}} only shows up for children</example>
 </param>
 <param name="actionFunction">javascritpt to call when clicked function (NODE, TREE_OBJ)</param>
 <param name="separatorBefore">display separation line above item</param>
 <remarks></remarks>
</member>
</members>
</doc>
